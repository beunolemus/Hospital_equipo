{"ast":null,"code":"import _toConsumableArray from \"C:/Users/brnol/Documents/Hospital/Hospital_equipo/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport flatpickr from 'flatpickr';\nimport { defineComponent, h, nextTick } from 'vue';\nimport { excludedEvents, includedEvents } from './events';\nimport { camelToKebab, nullify, arrayify } from './util';\n// Keep a copy of all events for later use\nvar allEvents = [].concat(_toConsumableArray(includedEvents), _toConsumableArray(excludedEvents));\n// Passing these properties in `fp.set()` method will cause flatpickr to trigger some callbacks\nvar configCallbacks = ['locale', 'showMonths'];\nexport default defineComponent({\n  name: 'FlatPickr',\n  compatConfig: {\n    MODE: 3\n  },\n  render: function render() {\n    return h('input', {\n      type: 'text',\n      'data-input': true,\n      disabled: this.disabled,\n      onInput: this.onInput\n    });\n  },\n  emits: ['blur', 'update:modelValue'].concat(_toConsumableArray(allEvents.map(camelToKebab))),\n  props: {\n    modelValue: {\n      type: [String, Number, Date, Array, null],\n      required: true\n    },\n    // https://flatpickr.js.org/options/\n    config: {\n      type: Object,\n      default: function _default() {\n        return {\n          defaultDate: null,\n          wrap: false\n        };\n      }\n    },\n    events: {\n      type: Array,\n      default: function _default() {\n        return includedEvents;\n      }\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      fp: null //todo make it non-reactive\n    };\n  },\n  mounted: function mounted() {\n    // Return early if flatpickr is already loaded\n    /* istanbul ignore if */\n    if (this.fp) return;\n    // Init flatpickr\n    this.fp = flatpickr(this.getElem(), this.prepareConfig());\n    // Attach blur event\n    this.fpInput().addEventListener('blur', this.onBlur);\n    // Immediate watch will fail before fp is set,\n    // so we need to start watching after mount\n    this.$watch('disabled', this.watchDisabled, {\n      immediate: true\n    });\n  },\n  methods: {\n    prepareConfig: function prepareConfig() {\n      var _this = this;\n      // Don't mutate original object on parent component\n      var safeConfig = Object.assign({}, this.config);\n      this.events.forEach(function (hook) {\n        // Respect global callbacks registered via setDefault() method\n        var globalCallbacks = flatpickr.defaultConfig[hook] || [];\n        // Inject our own method along with user's callbacks\n        var localCallback = function localCallback() {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          _this.$emit.apply(_this, [camelToKebab(hook)].concat(args));\n        };\n        // Overwrite with merged array\n        safeConfig[hook] = arrayify(safeConfig[hook] || []).concat(globalCallbacks, localCallback);\n      });\n      var onCloseCb = this.onClose.bind(this);\n      safeConfig['onClose'] = arrayify(safeConfig['onClose'] || []).concat(onCloseCb);\n      // Set initial date without emitting any event\n      safeConfig.defaultDate = this.modelValue || safeConfig.defaultDate;\n      return safeConfig;\n    },\n    /**\n     * Get the HTML node where flatpickr to be attached\n     * Bind on parent element if wrap is true\n     */\n    getElem: function getElem() {\n      return this.config.wrap ? this.$el.parentNode : this.$el;\n    },\n    /**\n     * Watch for value changed by date-picker itself and notify parent component\n     */\n    onInput: function onInput(event) {\n      var _this2 = this;\n      var input = event.target;\n      // Let's wait for DOM to be updated\n      nextTick().then(function () {\n        _this2.$emit('update:modelValue', nullify(input.value));\n      });\n    },\n    fpInput: function fpInput() {\n      return this.fp.altInput || this.fp.input;\n    },\n    /**\n     * Blur event is required by many validation libraries\n     */\n    onBlur: function onBlur(event) {\n      this.$emit('blur', nullify(event.target.value));\n    },\n    /**\n     * Flatpickr does not emit input event in some cases\n     */\n    onClose: function onClose(selectedDates, dateStr) {\n      this.$emit('update:modelValue', dateStr);\n    },\n    /**\n     * Watch for the disabled property and sets the value to the real input.\n     */\n    watchDisabled: function watchDisabled(newState) {\n      if (newState) {\n        this.fpInput().setAttribute('disabled', '');\n      } else {\n        this.fpInput().removeAttribute('disabled');\n      }\n    }\n  },\n  watch: {\n    /**\n     * Watch for any config changes and redraw date-picker\n     */\n    config: {\n      deep: true,\n      handler: function handler(newConfig) {\n        var _this3 = this;\n        if (!this.fp) return;\n        var safeConfig = Object.assign({}, newConfig);\n        // Workaround: Don't pass hooks to configs again otherwise\n        // previously registered hooks will stop working\n        // Notice: we are looping through all events\n        // This also means that new callbacks can not be passed once component has been initialized\n        allEvents.forEach(function (hook) {\n          delete safeConfig[hook];\n        });\n        this.fp.set(safeConfig);\n        // Workaround: Allow to change locale dynamically\n        configCallbacks.forEach(function (name) {\n          if (typeof safeConfig[name] !== 'undefined') {\n            _this3.fp.set(name, safeConfig[name]);\n          }\n        });\n      }\n    },\n    /**\n     * Watch for changes from parent component and update DOM\n     */\n    modelValue: function modelValue(newValue) {\n      var _a;\n      // Prevent updates if v-model value is same as input's current value\n      if (!this.$el || newValue === nullify(this.$el.value)) return;\n      // Notify flatpickr instance that there is a change in value\n      (_a = this.fp) === null || _a === void 0 ? void 0 : _a.setDate(newValue, true);\n    }\n  },\n  beforeUnmount: function beforeUnmount() {\n    /* istanbul ignore else */\n    if (!this.fp) return;\n    this.fpInput().removeEventListener('blur', this.onBlur);\n    this.fp.destroy();\n    this.fp = null;\n  }\n});","map":{"version":3,"names":["flatpickr","defineComponent","h","nextTick","excludedEvents","includedEvents","camelToKebab","nullify","arrayify","allEvents","concat","_toConsumableArray","configCallbacks","name","compatConfig","MODE","render","type","disabled","onInput","emits","map","props","modelValue","String","Number","Date","Array","required","config","Object","default","_default","defaultDate","wrap","events","Boolean","data","fp","mounted","getElem","prepareConfig","fpInput","addEventListener","onBlur","$watch","watchDisabled","immediate","methods","_this","safeConfig","assign","forEach","hook","globalCallbacks","defaultConfig","localCallback","_len","arguments","length","args","_key","$emit","apply","onCloseCb","onClose","bind","$el","parentNode","event","_this2","input","target","then","value","altInput","selectedDates","dateStr","newState","setAttribute","removeAttribute","watch","deep","handler","newConfig","_this3","set","newValue","_a","setDate","beforeUnmount","removeEventListener","destroy"],"sources":["C:/Users/brnol/Documents/Hospital/Hospital_equipo/node_modules/vue-flatpickr-component/dist/esm/component.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport { defineComponent, h, nextTick } from 'vue';\nimport { excludedEvents, includedEvents } from './events';\nimport { camelToKebab, nullify, arrayify } from './util';\n// Keep a copy of all events for later use\nconst allEvents = [...includedEvents, ...excludedEvents];\n// Passing these properties in `fp.set()` method will cause flatpickr to trigger some callbacks\nconst configCallbacks = ['locale', 'showMonths'];\nexport default defineComponent({\n    name: 'FlatPickr',\n    compatConfig: {\n        MODE: 3,\n    },\n    render() {\n        return h('input', {\n            type: 'text',\n            'data-input': true,\n            disabled: this.disabled,\n            onInput: this.onInput,\n        });\n    },\n    emits: [\n        'blur',\n        'update:modelValue',\n        ...allEvents.map(camelToKebab)\n    ],\n    props: {\n        modelValue: {\n            type: [String, Number, Date, Array, null],\n            required: true,\n        },\n        // https://flatpickr.js.org/options/\n        config: {\n            type: Object,\n            default: () => ({\n                defaultDate: null,\n                wrap: false,\n            })\n        },\n        events: {\n            type: Array,\n            default: () => includedEvents\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n    },\n    data() {\n        return {\n            fp: null, //todo make it non-reactive\n        };\n    },\n    mounted() {\n        // Return early if flatpickr is already loaded\n        /* istanbul ignore if */\n        if (this.fp)\n            return;\n        // Init flatpickr\n        this.fp = flatpickr(this.getElem(), this.prepareConfig());\n        // Attach blur event\n        this.fpInput().addEventListener('blur', this.onBlur);\n        // Immediate watch will fail before fp is set,\n        // so we need to start watching after mount\n        this.$watch('disabled', this.watchDisabled, {\n            immediate: true\n        });\n    },\n    methods: {\n        prepareConfig() {\n            // Don't mutate original object on parent component\n            let safeConfig = Object.assign({}, this.config);\n            this.events.forEach((hook) => {\n                // Respect global callbacks registered via setDefault() method\n                let globalCallbacks = flatpickr.defaultConfig[hook] || [];\n                // Inject our own method along with user's callbacks\n                let localCallback = (...args) => {\n                    this.$emit(camelToKebab(hook), ...args);\n                };\n                // Overwrite with merged array\n                safeConfig[hook] = arrayify(safeConfig[hook] || []).concat(globalCallbacks, localCallback);\n            });\n            const onCloseCb = this.onClose.bind(this);\n            safeConfig['onClose'] = arrayify(safeConfig['onClose'] || []).concat(onCloseCb);\n            // Set initial date without emitting any event\n            safeConfig.defaultDate = this.modelValue || safeConfig.defaultDate;\n            return safeConfig;\n        },\n        /**\n         * Get the HTML node where flatpickr to be attached\n         * Bind on parent element if wrap is true\n         */\n        getElem() {\n            return this.config.wrap ? this.$el.parentNode : this.$el;\n        },\n        /**\n         * Watch for value changed by date-picker itself and notify parent component\n         */\n        onInput(event) {\n            const input = event.target;\n            // Let's wait for DOM to be updated\n            nextTick().then(() => {\n                this.$emit('update:modelValue', nullify(input.value));\n            });\n        },\n        fpInput() {\n            return this.fp.altInput || this.fp.input;\n        },\n        /**\n         * Blur event is required by many validation libraries\n         */\n        onBlur(event) {\n            this.$emit('blur', nullify(event.target.value));\n        },\n        /**\n         * Flatpickr does not emit input event in some cases\n         */\n        onClose(selectedDates, dateStr) {\n            this.$emit('update:modelValue', dateStr);\n        },\n        /**\n         * Watch for the disabled property and sets the value to the real input.\n         */\n        watchDisabled(newState) {\n            if (newState) {\n                this.fpInput().setAttribute('disabled', '');\n            }\n            else {\n                this.fpInput().removeAttribute('disabled');\n            }\n        }\n    },\n    watch: {\n        /**\n         * Watch for any config changes and redraw date-picker\n         */\n        config: {\n            deep: true,\n            handler(newConfig) {\n                if (!this.fp)\n                    return;\n                let safeConfig = Object.assign({}, newConfig);\n                // Workaround: Don't pass hooks to configs again otherwise\n                // previously registered hooks will stop working\n                // Notice: we are looping through all events\n                // This also means that new callbacks can not be passed once component has been initialized\n                allEvents.forEach((hook) => {\n                    delete safeConfig[hook];\n                });\n                this.fp.set(safeConfig);\n                // Workaround: Allow to change locale dynamically\n                configCallbacks.forEach((name) => {\n                    if (typeof safeConfig[name] !== 'undefined') {\n                        this.fp.set(name, safeConfig[name]);\n                    }\n                });\n            }\n        },\n        /**\n         * Watch for changes from parent component and update DOM\n         */\n        modelValue(newValue) {\n            var _a;\n            // Prevent updates if v-model value is same as input's current value\n            if (!this.$el || newValue === nullify(this.$el.value))\n                return;\n            // Notify flatpickr instance that there is a change in value\n            (_a = this.fp) === null || _a === void 0 ? void 0 : _a.setDate(newValue, true);\n        }\n    },\n    beforeUnmount() {\n        /* istanbul ignore else */\n        if (!this.fp)\n            return;\n        this.fpInput().removeEventListener('blur', this.onBlur);\n        this.fp.destroy();\n        this.fp = null;\n    }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}