{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_ApexChart = _resolveComponent(\"ApexChart\");\n  var _component_iq_card = _resolveComponent(\"iq-card\");\n  var _component_b_col = _resolveComponent(\"b-col\");\n  var _component_b_row = _resolveComponent(\"b-row\");\n  var _component_b_container = _resolveComponent(\"b-container\");\n  return _openBlock(), _createBlock(_component_b_container, {\n    fluid: \"\"\n  }, {\n    default: _withCtx(function () {\n      return [_createVNode(_component_b_row, null, {\n        default: _withCtx(function () {\n          return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.charts, function (item, index) {\n            return _openBlock(), _createBlock(_component_b_col, {\n              lg: \"6\",\n              key: index\n            }, {\n              default: _withCtx(function () {\n                return [_createVNode(_component_iq_card, null, {\n                  headerTitle: _withCtx(function () {\n                    return [_createElementVNode(\"h4\", null, _toDisplayString(item.title), 1 /* TEXT */)];\n                  }),\n                  body: _withCtx(function () {\n                    return [_createVNode(_component_ApexChart, {\n                      element: item.type,\n                      chartOption: item.bodyData\n                    }, null, 8 /* PROPS */, [\"element\", \"chartOption\"])];\n                  }),\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */)];\n              }),\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */);\n          }), 128 /* KEYED_FRAGMENT */))];\n        }),\n        _: 1 /* STABLE */\n      })];\n    }),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_b_container","fluid","default","_withCtx","_createVNode","_component_b_row","_createElementBlock","_Fragment","_renderList","$data","charts","item","index","_component_b_col","lg","key","_component_iq_card","headerTitle","_createElementVNode","_toDisplayString","title","body","_component_ApexChart","element","type","chartOption","bodyData","_"],"sources":["C:\\Users\\brnol\\Documents\\Hospital\\Hospital_equipo\\src\\views\\Charts\\ApexCharts.vue"],"sourcesContent":["<template>\r\n  <b-container fluid>\r\n    <b-row>\r\n      <b-col lg=\"6\" v-for=\"(item, index) in charts\" :key=\"index\">\r\n        <iq-card>\r\n          <template v-slot:headerTitle>\r\n            <h4>{{ item.title }}</h4>\r\n          </template>\r\n          <template v-slot:body>\r\n            <ApexChart :element=\"item.type\" :chartOption=\"item.bodyData\" />\r\n          </template>\r\n        </iq-card>\r\n      </b-col>\r\n    </b-row>\r\n  </b-container>\r\n</template>\r\n<script>\r\nimport { xray } from '../../config/pluginInit'\r\nimport iqCard from '../../components/xray/cards/iq-card'\r\nimport ApexChart from '../../components/xray/charts/ApexChart'\r\nexport default {\r\n  name: 'ApexCharts',\r\n  components: { iqCard, ApexChart },\r\n  mounted() {\r\n    xray.index()\r\n  },\r\n  methods: {\r\n    generateData(baseval, count, yrange) {\r\n      var i = 0\r\n      var series = []\r\n      while (i < count) {\r\n        var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min\r\n        var z = Math.floor(Math.random() * (75 - 15 + 1)) + 15\r\n\r\n        series.push([baseval, y, z])\r\n        baseval += 86400000\r\n        i++\r\n      }\r\n      return series\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      charts: [\r\n        {\r\n          title: 'Line Chart',\r\n          type: 'line',\r\n          bodyData: {\r\n            chart: {\r\n              height: 350,\r\n              type: 'line',\r\n              zoom: {\r\n                enabled: false\r\n              }\r\n            },\r\n            series: [\r\n              {\r\n                name: 'Desktops',\r\n                data: [10, 41, 35, 51, 49, 62, 69, 91, 148]\r\n              }\r\n            ],\r\n            dataLabels: {\r\n              enabled: false\r\n            },\r\n            stroke: {\r\n              curve: 'straight'\r\n            },\r\n            title: {\r\n              text: 'Product Trends by Month',\r\n              align: 'left'\r\n            },\r\n            grid: {\r\n              row: {\r\n                colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\r\n                opacity: 0.5\r\n              }\r\n            },\r\n            xaxis: {\r\n              categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: 'Line Area Chart',\r\n          type: 'line-area',\r\n          bodyData: {\r\n            chart: {\r\n              height: 350,\r\n              type: 'area'\r\n            },\r\n            dataLabels: {\r\n              enabled: false\r\n            },\r\n            stroke: {\r\n              curve: 'smooth'\r\n            },\r\n            colors: ['#089bab', '#FC9F5B'],\r\n            series: [\r\n              {\r\n                name: 'series1',\r\n                data: [31, 40, 28, 51, 42, 109, 100]\r\n              },\r\n              {\r\n                name: 'series2',\r\n                data: [11, 32, 45, 32, 34, 52, 41]\r\n              }\r\n            ],\r\n\r\n            xaxis: {\r\n              type: 'datetime',\r\n              categories: ['2018-09-19T00:00:00', '2018-09-19T01:30:00', '2018-09-19T02:30:00', '2018-09-19T03:30:00', '2018-09-19T04:30:00', '2018-09-19T05:30:00', '2018-09-19T06:30:00']\r\n            },\r\n            tooltip: {\r\n              x: {\r\n                format: 'dd/MM/yy HH:mm'\r\n              }\r\n            }\r\n          }\r\n        },\r\n\r\n        {\r\n          title: 'Column Chart',\r\n          type: 'column',\r\n          bodyData: {\r\n            chart: {\r\n              height: 350,\r\n              type: 'bar'\r\n            },\r\n            plotOptions: {\r\n              bar: {\r\n                horizontal: false,\r\n                columnWidth: '55%',\r\n                endingShape: 'rounded'\r\n              }\r\n            },\r\n            dataLabels: {\r\n              enabled: false\r\n            },\r\n            stroke: {\r\n              show: true,\r\n              width: 2,\r\n              colors: ['transparent']\r\n            },\r\n            colors: ['#089bab', '#FC9F5B', '#e64141'],\r\n            series: [\r\n              {\r\n                name: 'Net Profit',\r\n                data: [44, 55, 57, 56, 61, 58]\r\n              },\r\n              {\r\n                name: 'Revenue',\r\n                data: [76, 85, 101, 98, 87, 105]\r\n              },\r\n              {\r\n                name: 'Free Cash Flow',\r\n                data: [35, 41, 36, 26, 45, 48]\r\n              }\r\n            ],\r\n            xaxis: {\r\n              categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul']\r\n            },\r\n            yaxis: {\r\n              title: {\r\n                text: '$ (thousands)'\r\n              }\r\n            },\r\n            fill: {\r\n              opacity: 1\r\n            },\r\n            tooltip: {\r\n              y: {\r\n                formatter: function (val) {\r\n                  return '$ ' + val + ' thousands'\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: 'Bar Chart',\r\n          type: 'bar',\r\n          bodyData: {\r\n            chart: {\r\n              height: 350,\r\n              type: 'bar'\r\n            },\r\n            plotOptions: {\r\n              bar: {\r\n                horizontal: true\r\n              }\r\n            },\r\n            dataLabels: {\r\n              enabled: false\r\n            },\r\n            series: [\r\n              {\r\n                data: [470, 540, 580, 690, 1100, 1200, 1380]\r\n              }\r\n            ],\r\n            xaxis: {\r\n              categories: ['Netherlands', 'Italy', 'France', 'Japan', 'United States', 'China', 'Germany']\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: 'Mixes Chart',\r\n          type: 'mixes',\r\n          bodyData: {\r\n            chart: {\r\n              height: 350,\r\n              type: 'line',\r\n              stacked: false\r\n            },\r\n            stroke: {\r\n              width: [0, 2, 5],\r\n              curve: 'smooth'\r\n            },\r\n            plotOptions: {\r\n              bar: {\r\n                columnWidth: '50%'\r\n              }\r\n            },\r\n            colors: ['#089bab', '#e64141', '#FC9F5B'],\r\n            series: [\r\n              {\r\n                name: 'Facebook',\r\n                type: 'column',\r\n                data: [23, 11, 22, 27, 13, 22, 37, 21, 44, 22, 30]\r\n              },\r\n              {\r\n                name: 'Vine',\r\n                type: 'area',\r\n                data: [44, 55, 41, 67, 22, 43, 21, 41, 56, 27, 43]\r\n              },\r\n              {\r\n                name: 'Dribbble',\r\n                type: 'line',\r\n                data: [30, 25, 36, 30, 45, 35, 64, 52, 59, 36, 39]\r\n              }\r\n            ],\r\n            fill: {\r\n              opacity: [0.85, 0.25, 1],\r\n              gradient: {\r\n                inverseColors: false,\r\n                shade: 'light',\r\n                type: 'vertical',\r\n                opacityFrom: 0.85,\r\n                opacityTo: 0.55,\r\n                stops: [0, 100, 100, 100]\r\n              }\r\n            },\r\n            labels: ['01/01/2003', '02/01/2003', '03/01/2003', '04/01/2003', '05/01/2003', '06/01/2003', '07/01/2003', '08/01/2003', '09/01/2003', '10/01/2003', '11/01/2003'],\r\n            markers: {\r\n              size: 0\r\n            },\r\n            xaxis: {\r\n              type: 'datetime'\r\n            },\r\n            yaxis: {\r\n              min: 0\r\n            },\r\n            tooltip: {\r\n              shared: true,\r\n              intersect: false,\r\n              y: {\r\n                formatter: function (y) {\r\n                  if (typeof y !== 'undefined') {\r\n                    return y.toFixed(0) + ' views'\r\n                  }\r\n                  return y\r\n                }\r\n              }\r\n            },\r\n            legend: {\r\n              labels: {\r\n                useSeriesColors: true\r\n              },\r\n              markers: {\r\n                customHTML: [\r\n                  function () {\r\n                    return ''\r\n                  },\r\n                  function () {\r\n                    return ''\r\n                  },\r\n                  function () {\r\n                    return ''\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: 'Candlestick Charts',\r\n          type: 'candlestick',\r\n          bodyData: {\r\n            chart: {\r\n              height: 350,\r\n              type: 'candlestick'\r\n            },\r\n            series: [\r\n              {\r\n                data: [\r\n                  {\r\n                    x: new Date(1538778600000),\r\n                    y: [6629.81, 6650.5, 6623.04, 6633.33]\r\n                  },\r\n                  {\r\n                    x: new Date(1538780400000),\r\n                    y: [6632.01, 6643.59, 6620, 6630.11]\r\n                  },\r\n                  {\r\n                    x: new Date(1538782200000),\r\n                    y: [6630.71, 6648.95, 6623.34, 6635.65]\r\n                  },\r\n                  {\r\n                    x: new Date(1538784000000),\r\n                    y: [6635.65, 6651, 6629.67, 6638.24]\r\n                  },\r\n                  {\r\n                    x: new Date(1538785800000),\r\n                    y: [6638.24, 6640, 6620, 6624.47]\r\n                  },\r\n                  {\r\n                    x: new Date(1538787600000),\r\n                    y: [6624.53, 6636.03, 6621.68, 6624.31]\r\n                  },\r\n                  {\r\n                    x: new Date(1538789400000),\r\n                    y: [6624.61, 6632.2, 6617, 6626.02]\r\n                  },\r\n                  {\r\n                    x: new Date(1538791200000),\r\n                    y: [6627, 6627.62, 6584.22, 6603.02]\r\n                  },\r\n                  {\r\n                    x: new Date(1538793000000),\r\n                    y: [6605, 6608.03, 6598.95, 6604.01]\r\n                  },\r\n                  {\r\n                    x: new Date(1538794800000),\r\n                    y: [6604.5, 6614.4, 6602.26, 6608.02]\r\n                  },\r\n                  {\r\n                    x: new Date(1538796600000),\r\n                    y: [6608.02, 6610.68, 6601.99, 6608.91]\r\n                  },\r\n                  {\r\n                    x: new Date(1538798400000),\r\n                    y: [6608.91, 6618.99, 6608.01, 6612]\r\n                  },\r\n                  {\r\n                    x: new Date(1538800200000),\r\n                    y: [6612, 6615.13, 6605.09, 6612]\r\n                  },\r\n                  {\r\n                    x: new Date(1538802000000),\r\n                    y: [6612, 6624.12, 6608.43, 6622.95]\r\n                  },\r\n                  {\r\n                    x: new Date(1538803800000),\r\n                    y: [6623.91, 6623.91, 6615, 6615.67]\r\n                  },\r\n                  {\r\n                    x: new Date(1538805600000),\r\n                    y: [6618.69, 6618.74, 6610, 6610.4]\r\n                  },\r\n                  {\r\n                    x: new Date(1538807400000),\r\n                    y: [6611, 6622.78, 6610.4, 6614.9]\r\n                  },\r\n                  {\r\n                    x: new Date(1538809200000),\r\n                    y: [6614.9, 6626.2, 6613.33, 6623.45]\r\n                  },\r\n                  {\r\n                    x: new Date(1538811000000),\r\n                    y: [6623.48, 6627, 6618.38, 6620.35]\r\n                  },\r\n                  {\r\n                    x: new Date(1538812800000),\r\n                    y: [6619.43, 6620.35, 6610.05, 6615.53]\r\n                  },\r\n                  {\r\n                    x: new Date(1538814600000),\r\n                    y: [6615.53, 6617.93, 6610, 6615.19]\r\n                  },\r\n                  {\r\n                    x: new Date(1538816400000),\r\n                    y: [6615.19, 6621.6, 6608.2, 6620]\r\n                  },\r\n                  {\r\n                    x: new Date(1538818200000),\r\n                    y: [6619.54, 6625.17, 6614.15, 6620]\r\n                  },\r\n                  {\r\n                    x: new Date(1538820000000),\r\n                    y: [6620.33, 6634.15, 6617.24, 6624.61]\r\n                  },\r\n                  {\r\n                    x: new Date(1538821800000),\r\n                    y: [6625.95, 6626, 6611.66, 6617.58]\r\n                  },\r\n                  {\r\n                    x: new Date(1538823600000),\r\n                    y: [6619, 6625.97, 6595.27, 6598.86]\r\n                  },\r\n                  {\r\n                    x: new Date(1538825400000),\r\n                    y: [6598.86, 6598.88, 6570, 6587.16]\r\n                  },\r\n                  {\r\n                    x: new Date(1538827200000),\r\n                    y: [6588.86, 6600, 6580, 6593.4]\r\n                  },\r\n                  {\r\n                    x: new Date(1538829000000),\r\n                    y: [6593.99, 6598.89, 6585, 6587.81]\r\n                  },\r\n                  {\r\n                    x: new Date(1538830800000),\r\n                    y: [6587.81, 6592.73, 6567.14, 6578]\r\n                  },\r\n                  {\r\n                    x: new Date(1538832600000),\r\n                    y: [6578.35, 6581.72, 6567.39, 6579]\r\n                  },\r\n                  {\r\n                    x: new Date(1538834400000),\r\n                    y: [6579.38, 6580.92, 6566.77, 6575.96]\r\n                  },\r\n                  {\r\n                    x: new Date(1538836200000),\r\n                    y: [6575.96, 6589, 6571.77, 6588.92]\r\n                  },\r\n                  {\r\n                    x: new Date(1538838000000),\r\n                    y: [6588.92, 6594, 6577.55, 6589.22]\r\n                  },\r\n                  {\r\n                    x: new Date(1538839800000),\r\n                    y: [6589.3, 6598.89, 6589.1, 6596.08]\r\n                  },\r\n                  {\r\n                    x: new Date(1538841600000),\r\n                    y: [6597.5, 6600, 6588.39, 6596.25]\r\n                  },\r\n                  {\r\n                    x: new Date(1538843400000),\r\n                    y: [6598.03, 6600, 6588.73, 6595.97]\r\n                  },\r\n                  {\r\n                    x: new Date(1538845200000),\r\n                    y: [6595.97, 6602.01, 6588.17, 6602]\r\n                  },\r\n                  {\r\n                    x: new Date(1538847000000),\r\n                    y: [6602, 6607, 6596.51, 6599.95]\r\n                  },\r\n                  {\r\n                    x: new Date(1538848800000),\r\n                    y: [6600.63, 6601.21, 6590.39, 6591.02]\r\n                  },\r\n                  {\r\n                    x: new Date(1538850600000),\r\n                    y: [6591.02, 6603.08, 6591, 6591]\r\n                  },\r\n                  {\r\n                    x: new Date(1538852400000),\r\n                    y: [6591, 6601.32, 6585, 6592]\r\n                  },\r\n                  {\r\n                    x: new Date(1538854200000),\r\n                    y: [6593.13, 6596.01, 6590, 6593.34]\r\n                  },\r\n                  {\r\n                    x: new Date(1538856000000),\r\n                    y: [6593.34, 6604.76, 6582.63, 6593.86]\r\n                  },\r\n                  {\r\n                    x: new Date(1538857800000),\r\n                    y: [6593.86, 6604.28, 6586.57, 6600.01]\r\n                  },\r\n                  {\r\n                    x: new Date(1538859600000),\r\n                    y: [6601.81, 6603.21, 6592.78, 6596.25]\r\n                  },\r\n                  {\r\n                    x: new Date(1538861400000),\r\n                    y: [6596.25, 6604.2, 6590, 6602.99]\r\n                  },\r\n                  {\r\n                    x: new Date(1538863200000),\r\n                    y: [6602.99, 6606, 6584.99, 6587.81]\r\n                  },\r\n                  {\r\n                    x: new Date(1538865000000),\r\n                    y: [6587.81, 6595, 6583.27, 6591.96]\r\n                  },\r\n                  {\r\n                    x: new Date(1538866800000),\r\n                    y: [6591.97, 6596.07, 6585, 6588.39]\r\n                  },\r\n                  {\r\n                    x: new Date(1538868600000),\r\n                    y: [6587.6, 6598.21, 6587.6, 6594.27]\r\n                  },\r\n                  {\r\n                    x: new Date(1538870400000),\r\n                    y: [6596.44, 6601, 6590, 6596.55]\r\n                  },\r\n                  {\r\n                    x: new Date(1538872200000),\r\n                    y: [6598.91, 6605, 6596.61, 6600.02]\r\n                  },\r\n                  {\r\n                    x: new Date(1538874000000),\r\n                    y: [6600.55, 6605, 6589.14, 6593.01]\r\n                  },\r\n                  {\r\n                    x: new Date(1538875800000),\r\n                    y: [6593.15, 6605, 6592, 6603.06]\r\n                  }\r\n                ]\r\n              }\r\n            ],\r\n            title: {\r\n              text: 'CandleStick Chart',\r\n              align: 'left'\r\n            },\r\n            xaxis: {\r\n              type: 'datetime'\r\n            },\r\n            yaxis: {\r\n              tooltip: {\r\n                enabled: true\r\n              }\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: 'Bubble Charts',\r\n          type: 'bubble',\r\n          bodyData: {\r\n            chart: {\r\n              height: 350,\r\n              type: 'bubble'\r\n            },\r\n            dataLabels: {\r\n              enabled: false\r\n            },\r\n            series: [\r\n              {\r\n                name: 'Product1',\r\n                data: this.generateData(new Date('11 Feb 2017 GMT').getTime(), 20, {\r\n                  min: 10,\r\n                  max: 40\r\n                })\r\n              },\r\n              {\r\n                name: 'Product2',\r\n                data: this.generateData(new Date('11 Feb 2017 GMT').getTime(), 20, {\r\n                  min: 10,\r\n                  max: 40\r\n                })\r\n              },\r\n              {\r\n                name: 'Product3',\r\n                data: this.generateData(new Date('11 Feb 2017 GMT').getTime(), 20, {\r\n                  min: 10,\r\n                  max: 40\r\n                })\r\n              }\r\n            ],\r\n            fill: {\r\n              type: 'gradient'\r\n            },\r\n            colors: ['#0084ff', '#00ca00', '#e64141'],\r\n            title: {\r\n              text: '3D Bubble Chart'\r\n            },\r\n            xaxis: {\r\n              tickAmount: 12,\r\n              type: 'datetime',\r\n\r\n              labels: {\r\n                rotate: 0\r\n              }\r\n            },\r\n            yaxis: {\r\n              max: 40\r\n            },\r\n            theme: {\r\n              palette: 'palette2'\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: 'Scatter Charts',\r\n          type: 'scatter',\r\n          bodyData: {\r\n            chart: {\r\n              height: 350,\r\n              type: 'scatter',\r\n              zoom: {\r\n                enabled: true,\r\n                type: 'xy'\r\n              }\r\n            },\r\n\r\n            series: [\r\n              {\r\n                name: 'SAMPLE A',\r\n                data: [\r\n                  [16.4, 5.4],\r\n                  [21.7, 2],\r\n                  [10.9, 0],\r\n                  [10.9, 8.2],\r\n                  [16.4, 0],\r\n                  [16.4, 1.8],\r\n                  [13.6, 0.3],\r\n                  [13.6, 0],\r\n                  [29.9, 0],\r\n                  [27.1, 2.3],\r\n                  [16.4, 0],\r\n                  [13.6, 3.7],\r\n                  [10.9, 5.2],\r\n                  [16.4, 6.5],\r\n                  [10.9, 0],\r\n                  [24.5, 7.1],\r\n                  [10.9, 0],\r\n                  [8.1, 4.7]\r\n                ]\r\n              },\r\n              {\r\n                name: 'SAMPLE B',\r\n                data: [\r\n                  [36.4, 13.4],\r\n                  [1.7, 11],\r\n                  [1.9, 9],\r\n                  [1.9, 13.2],\r\n                  [1.4, 7],\r\n                  [6.4, 8.8],\r\n                  [3.6, 4.3],\r\n                  [1.6, 10],\r\n                  [9.9, 2],\r\n                  [7.1, 15],\r\n                  [1.4, 0],\r\n                  [3.6, 13.7],\r\n                  [1.9, 15.2],\r\n                  [6.4, 16.5],\r\n                  [0.9, 10],\r\n                  [4.5, 17.1],\r\n                  [10.9, 10],\r\n                  [0.1, 14.7]\r\n                ]\r\n              },\r\n              {\r\n                name: 'SAMPLE C',\r\n                data: [\r\n                  [21.7, 3],\r\n                  [23.6, 3.5],\r\n                  [28, 4],\r\n                  [27.1, 0.3],\r\n                  [16.4, 4],\r\n                  [13.6, 0],\r\n                  [19, 5],\r\n                  [22.4, 3],\r\n                  [24.5, 3],\r\n                  [32.6, 3],\r\n                  [27.1, 4],\r\n                  [29.6, 6],\r\n                  [31.6, 8],\r\n                  [21.6, 5],\r\n                  [20.9, 4],\r\n                  [22.4, 0],\r\n                  [32.6, 10.3],\r\n                  [29.7, 20.8]\r\n                ]\r\n              }\r\n            ],\r\n            xaxis: {\r\n              tickAmount: 5,\r\n              labels: {\r\n                formatter: function (val) {\r\n                  return parseFloat(val).toFixed(1)\r\n                }\r\n              }\r\n            },\r\n            yaxis: {\r\n              tickAmount: 5\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: 'Pie Charts',\r\n          type: 'pie',\r\n          bodyData: {\r\n            chart: {\r\n              width: 380,\r\n              type: 'pie'\r\n            },\r\n            labels: ['Team A', 'Team B', 'Team C', 'Team D', 'Team E'],\r\n            series: [44, 55, 13, 43, 22],\r\n            colors: ['#0084ff', '#00ca00', '#e64141', '#ffd400', '#00d0ff'],\r\n            responsive: [\r\n              {\r\n                breakpoint: 480,\r\n                options: {\r\n                  chart: {\r\n                    width: 200\r\n                  },\r\n                  legend: {\r\n                    position: 'bottom'\r\n                  }\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        },\r\n\r\n        {\r\n          title: 'Radial Bar Charts',\r\n          type: 'radial',\r\n          bodyData: {\r\n            chart: {\r\n              height: 350,\r\n              type: 'radialBar'\r\n            },\r\n            plotOptions: {\r\n              radialBar: {\r\n                dataLabels: {\r\n                  name: {\r\n                    fontSize: '22px'\r\n                  },\r\n                  value: {\r\n                    fontSize: '16px'\r\n                  },\r\n                  total: {\r\n                    show: true,\r\n                    label: 'Total',\r\n                    formatter: function () {\r\n                      // By default this function returns the average of all series. The below is just an example to show the use of custom formatter function\r\n                      return 249\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            series: [44, 55, 67, 83],\r\n            labels: ['Apples', 'Oranges', 'Bananas', 'Berries'],\r\n            colors: ['#0084ff', '#00ca00', '#e64141', '#ffd400']\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";;;;;;;uBACEA,YAAA,CAacC,sBAAA;IAbDC,KAAK,EAAL;EAAK;IADpBC,OAAA,EAAAC,QAAA,CAEI;MAAA,OAWQ,CAXRC,YAAA,CAWQC,gBAAA;QAbZH,OAAA,EAAAC,QAAA,CAGoB;UAAA,OAA+B,E,kBAA7CG,mBAAA,CASQC,SAAA,QAZdC,WAAA,CAG4CC,KAAA,CAAAC,MAAM,EAHlD,UAG4BC,IAAI,EAAEC,KAAK;iCAAjCb,YAAA,CASQc,gBAAA;cATDC,EAAE,EAAC,GAAG;cAAkCC,GAAG,EAAEH;;cAH1DV,OAAA,EAAAC,QAAA,CAIQ;gBAAA,OAOU,CAPVC,YAAA,CAOUY,kBAAA;kBANSC,WAAW,EAAAd,QAAA,CAC1B;oBAAA,OAAyB,CAAzBe,mBAAA,CAAyB,YAAAC,gBAAA,CAAlBR,IAAI,CAACS,KAAK,iB;;kBAEFC,IAAI,EAAAlB,QAAA,CACnB;oBAAA,OAA+D,CAA/DC,YAAA,CAA+DkB,oBAAA;sBAAnDC,OAAO,EAAEZ,IAAI,CAACa,IAAI;sBAAGC,WAAW,EAAEd,IAAI,CAACe;;;kBAT/DC,CAAA;;;cAAAA,CAAA;;;;QAAAA,CAAA;;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}