{"ast":null,"code":"import \"core-js/modules/es.array.fill.js\";\nimport { is } from \"../core/Registry\";\nimport { color } from \"../core/utils/Color\";\nvar theme = function theme(object) {\n  if (is(object, \"InterfaceColorSet\")) {\n    object.setFor(\"stroke\", color(\"#000000\"));\n    object.setFor(\"fill\", color(\"#ffffff\"));\n    object.setFor(\"primaryButton\", color(\"#0975da\").lighten(-0.2));\n    object.setFor(\"primaryButtonHover\", color(\"#0975da\").lighten(-0.2));\n    object.setFor(\"primaryButtonDown\", color(\"#0975da\").lighten(-0.2));\n    object.setFor(\"primaryButtonActive\", color(\"#0975da\").lighten(-0.2));\n    object.setFor(\"primaryButtonText\", color(\"#FFFFFF\"));\n    object.setFor(\"primaryButtonStroke\", color(\"#0975da\"));\n    object.setFor(\"secondaryButton\", color(\"#41baff\"));\n    object.setFor(\"secondaryButtonHover\", color(\"#41baff\").lighten(0.1));\n    object.setFor(\"secondaryButtonDown\", color(\"#41baff\").lighten(0.15));\n    object.setFor(\"secondaryButtonActive\", color(\"#41baff\").lighten(0.15));\n    object.setFor(\"secondaryButtonText\", color(\"#ffffff\"));\n    object.setFor(\"secondaryButtonStroke\", color(\"#41baff\").lighten(-0.2));\n    object.setFor(\"grid\", color(\"#ffffff\"));\n    object.setFor(\"background\", color(\"#000000\"));\n    object.setFor(\"alternativeBackground\", color(\"#000000\"));\n    object.setFor(\"text\", color(\"#ffffff\"));\n    object.setFor(\"alternativeText\", color(\"#ffffff\"));\n    object.setFor(\"disabledBackground\", color(\"#bbbbbb\"));\n  }\n  if (is(object, \"Grid\")) {\n    object.strokeOpacity = 0.07;\n  }\n  if (is(object, \"Scrollbar\")) {\n    object.background.fillOpacity = 0.2;\n    object.thumb.background.fillOpacity = 0.5;\n  }\n  //color(\"#e3ecb7\"),\n  if (is(object, \"ColorSet\")) {\n    object.list = [color(\"#eeeab5\"), color(\"#0975da\"), color(\"#0996f2\"), color(\"#1fb0ff\"), color(\"#41baff\"), color(\"#5ec5ff\"), color(\"#3db7ff\")];\n    object.reuse = false;\n    object.stepOptions = {\n      lightness: 0.1,\n      hue: 0\n    };\n    object.passOptions = {};\n  }\n  if (is(object, \"Button\")) {\n    object.background.fillOpacity = 1;\n    object.background.strokeOpacity = 0.5;\n    object.background.fill = color(\"#303950\");\n  }\n};\nexport default theme;","map":{"version":3,"names":["is","color","theme","object","setFor","lighten","strokeOpacity","background","fillOpacity","thumb","list","reuse","stepOptions","lightness","hue","passOptions","fill"],"sources":["../../../../src/.internal/themes/amchartsdark.ts"],"sourcesContent":["import { ITheme } from \"./ITheme\";\r\nimport { is } from \"../core/Registry\";\r\nimport { color } from \"../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../core/utils/InterfaceColorSet\";\r\nimport { BaseObject } from \"../core/Base\";\r\nimport { Scrollbar } from \"../core/elements/Scrollbar\";\r\nimport { ColorSet } from \"../core/utils/ColorSet\";\r\nimport { Grid } from \"../charts/axes/Grid\";\r\nimport { Button } from \"../core/elements/Button\";\r\n\r\nconst theme: ITheme = (object: BaseObject) => {\r\n\r\n\tif (is<InterfaceColorSet>(object, \"InterfaceColorSet\")) {\r\n\t\tobject.setFor(\"stroke\", color(\"#000000\"));\r\n\t\tobject.setFor(\"fill\", color(\"#ffffff\"));\r\n\r\n\t\tobject.setFor(\"primaryButton\", color(\"#0975da\").lighten(-0.2));\r\n\t\tobject.setFor(\"primaryButtonHover\", color(\"#0975da\").lighten(-0.2));\r\n\t\tobject.setFor(\"primaryButtonDown\", color(\"#0975da\").lighten(-0.2));\r\n\t\tobject.setFor(\"primaryButtonActive\", color(\"#0975da\").lighten(-0.2));\r\n\t\tobject.setFor(\"primaryButtonText\", color(\"#FFFFFF\"));\r\n\t\tobject.setFor(\"primaryButtonStroke\", color(\"#0975da\"));\r\n\r\n\t\tobject.setFor(\"secondaryButton\", color(\"#41baff\"));\r\n\t\tobject.setFor(\"secondaryButtonHover\", color(\"#41baff\").lighten(0.1));\r\n\t\tobject.setFor(\"secondaryButtonDown\", color(\"#41baff\").lighten(0.15));\r\n\t\tobject.setFor(\"secondaryButtonActive\", color(\"#41baff\").lighten(0.15));\r\n\t\tobject.setFor(\"secondaryButtonText\", color(\"#ffffff\"));\r\n\t\tobject.setFor(\"secondaryButtonStroke\", color(\"#41baff\").lighten(-0.2));\r\n\r\n\t\tobject.setFor(\"grid\", color(\"#ffffff\"));\r\n\t\tobject.setFor(\"background\", color(\"#000000\"));\r\n\t\tobject.setFor(\"alternativeBackground\", color(\"#000000\"));\r\n\t\tobject.setFor(\"text\", color(\"#ffffff\"));\r\n\t\tobject.setFor(\"alternativeText\", color(\"#ffffff\"));\r\n\t\tobject.setFor(\"disabledBackground\", color(\"#bbbbbb\"));\r\n\t}\r\n\r\n\tif (is<Grid>(object, \"Grid\")) {\r\n\t\tobject.strokeOpacity = 0.07;\r\n\t}\r\n\r\n\tif (is<Scrollbar>(object, \"Scrollbar\")) {\r\n\t\tobject.background.fillOpacity = 0.2;\r\n\t\tobject.thumb.background.fillOpacity = 0.5;\r\n\t}\r\n\r\n\t//color(\"#e3ecb7\"),\r\n\r\n\tif (is<ColorSet>(object, \"ColorSet\")) {\r\n\t\tobject.list = [\r\n\t\t\tcolor(\"#eeeab5\"),\r\n\t\t\tcolor(\"#0975da\"),\r\n\t\t\tcolor(\"#0996f2\"),\r\n\t\t\tcolor(\"#1fb0ff\"),\r\n\t\t\tcolor(\"#41baff\"),\r\n\t\t\tcolor(\"#5ec5ff\"),\r\n\t\t\tcolor(\"#3db7ff\")\r\n\t\t];\r\n\t\tobject.reuse = false;\r\n\t\tobject.stepOptions = {\r\n\t\t\tlightness: 0.1,\r\n\t\t\thue: 0\r\n\t\t};\r\n\t\tobject.passOptions = {};\r\n\t}\r\n\r\n\tif (is<Button>(object, \"Button\")) {\r\n\t\tobject.background.fillOpacity = 1;\r\n\t\tobject.background.strokeOpacity = 0.5;\r\n\t\tobject.background.fill = color(\"#303950\");\r\n\t}\r\n};\r\n\r\nexport default theme;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}