{"ast":null,"code":"import \"core-js/modules/es.array.slice.js\";\nexport var useCountdown = function useCountdown(refElem) {\n  var getTimeRemaining = function getTimeRemaining(endtime) {\n    var total = Date.parse(endtime) - Date.parse(new Date());\n    var seconds = Math.floor(total / 1000 % 60);\n    var minutes = Math.floor(total / 1000 / 60 % 60);\n    var hours = Math.floor(total / (1000 * 60 * 60) % 24);\n    var days = Math.floor(total / (1000 * 60 * 60 * 24));\n    return {\n      total: total,\n      days: days,\n      hours: hours,\n      minutes: minutes,\n      seconds: seconds\n    };\n  };\n  var initializeClock = function initializeClock(clock, endtime) {\n    var daysSpan = clock.querySelector('[data-days]');\n    var hoursSpan = clock.querySelector('[data-hours]');\n    var minutesSpan = clock.querySelector('[data-minutes]');\n    var secondsSpan = clock.querySelector('[data-seconds]');\n    var updateClock = function updateClock() {\n      var t = getTimeRemaining(endtime);\n      daysSpan.innerHTML = t.days;\n      hoursSpan.innerHTML = ('0' + t.hours).slice(-2);\n      minutesSpan.innerHTML = ('0' + t.minutes).slice(-2);\n      secondsSpan.innerHTML = ('0' + t.seconds).slice(-2);\n      if (t.total <= 0) {\n        clearInterval(timeinterval);\n      }\n    };\n    updateClock();\n    var timeinterval = setInterval(updateClock, 1000);\n  };\n  var time = refElem.getAttribute('data-date');\n  if (time == undefined) {\n    time = Date.parse(new Date()) + 15 * 24 * 60 * 60 * 1000;\n  }\n  var deadline = new Date(time);\n  initializeClock(refElem, deadline);\n};","map":{"version":3,"names":["useCountdown","refElem","getTimeRemaining","endtime","total","Date","parse","seconds","Math","floor","minutes","hours","days","initializeClock","clock","daysSpan","querySelector","hoursSpan","minutesSpan","secondsSpan","updateClock","t","innerHTML","slice","clearInterval","timeinterval","setInterval","time","getAttribute","undefined","deadline"],"sources":["C:/Users/brnol/Documents/Hospital/Hospital_equipo/src/countdown.js"],"sourcesContent":["export const useCountdown = (refElem) => {\r\n  const getTimeRemaining = (endtime) => {\r\n    const total = Date.parse(endtime) - Date.parse(new Date())\r\n    const seconds = Math.floor((total / 1000) % 60)\r\n    const minutes = Math.floor((total / 1000 / 60) % 60)\r\n    const hours = Math.floor((total / (1000 * 60 * 60)) % 24)\r\n    const days = Math.floor(total / (1000 * 60 * 60 * 24))\r\n\r\n    return {\r\n      total,\r\n      days,\r\n      hours,\r\n      minutes,\r\n      seconds\r\n    }\r\n  }\r\n\r\n  const initializeClock = (clock, endtime) => {\r\n    const daysSpan = clock.querySelector('[data-days]')\r\n    const hoursSpan = clock.querySelector('[data-hours]')\r\n    const minutesSpan = clock.querySelector('[data-minutes]')\r\n    const secondsSpan = clock.querySelector('[data-seconds]')\r\n\r\n    const updateClock = () => {\r\n      const t = getTimeRemaining(endtime)\r\n\r\n      daysSpan.innerHTML = t.days\r\n      hoursSpan.innerHTML = ('0' + t.hours).slice(-2)\r\n      minutesSpan.innerHTML = ('0' + t.minutes).slice(-2)\r\n      secondsSpan.innerHTML = ('0' + t.seconds).slice(-2)\r\n\r\n      if (t.total <= 0) {\r\n        clearInterval(timeinterval)\r\n      }\r\n    }\r\n\r\n    updateClock()\r\n    const timeinterval = setInterval(updateClock, 1000)\r\n  }\r\n  let time = refElem.getAttribute('data-date')\r\n  if (time == undefined) {\r\n    time = Date.parse(new Date()) + 15 * 24 * 60 * 60 * 1000\r\n  }\r\n  const deadline = new Date(time)\r\n  initializeClock(refElem, deadline)\r\n}\r\n"],"mappings":";AAAA,OAAO,IAAMA,YAAY,GAAG,SAAfA,YAAYA,CAAIC,OAAO,EAAK;EACvC,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,OAAO,EAAK;IACpC,IAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAAC,GAAGE,IAAI,CAACC,KAAK,CAAC,IAAID,IAAI,CAAC,CAAC,CAAC;IAC1D,IAAME,OAAO,GAAGC,IAAI,CAACC,KAAK,CAAEL,KAAK,GAAG,IAAI,GAAI,EAAE,CAAC;IAC/C,IAAMM,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAEL,KAAK,GAAG,IAAI,GAAG,EAAE,GAAI,EAAE,CAAC;IACpD,IAAMO,KAAK,GAAGH,IAAI,CAACC,KAAK,CAAEL,KAAK,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,GAAI,EAAE,CAAC;IACzD,IAAMQ,IAAI,GAAGJ,IAAI,CAACC,KAAK,CAACL,KAAK,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IAEtD,OAAO;MACLA,KAAK,EAALA,KAAK;MACLQ,IAAI,EAAJA,IAAI;MACJD,KAAK,EAALA,KAAK;MACLD,OAAO,EAAPA,OAAO;MACPH,OAAO,EAAPA;IACF,CAAC;EACH,CAAC;EAED,IAAMM,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,KAAK,EAAEX,OAAO,EAAK;IAC1C,IAAMY,QAAQ,GAAGD,KAAK,CAACE,aAAa,CAAC,aAAa,CAAC;IACnD,IAAMC,SAAS,GAAGH,KAAK,CAACE,aAAa,CAAC,cAAc,CAAC;IACrD,IAAME,WAAW,GAAGJ,KAAK,CAACE,aAAa,CAAC,gBAAgB,CAAC;IACzD,IAAMG,WAAW,GAAGL,KAAK,CAACE,aAAa,CAAC,gBAAgB,CAAC;IAEzD,IAAMI,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;MACxB,IAAMC,CAAC,GAAGnB,gBAAgB,CAACC,OAAO,CAAC;MAEnCY,QAAQ,CAACO,SAAS,GAAGD,CAAC,CAACT,IAAI;MAC3BK,SAAS,CAACK,SAAS,GAAG,CAAC,GAAG,GAAGD,CAAC,CAACV,KAAK,EAAEY,KAAK,CAAC,CAAC,CAAC,CAAC;MAC/CL,WAAW,CAACI,SAAS,GAAG,CAAC,GAAG,GAAGD,CAAC,CAACX,OAAO,EAAEa,KAAK,CAAC,CAAC,CAAC,CAAC;MACnDJ,WAAW,CAACG,SAAS,GAAG,CAAC,GAAG,GAAGD,CAAC,CAACd,OAAO,EAAEgB,KAAK,CAAC,CAAC,CAAC,CAAC;MAEnD,IAAIF,CAAC,CAACjB,KAAK,IAAI,CAAC,EAAE;QAChBoB,aAAa,CAACC,YAAY,CAAC;MAC7B;IACF,CAAC;IAEDL,WAAW,CAAC,CAAC;IACb,IAAMK,YAAY,GAAGC,WAAW,CAACN,WAAW,EAAE,IAAI,CAAC;EACrD,CAAC;EACD,IAAIO,IAAI,GAAG1B,OAAO,CAAC2B,YAAY,CAAC,WAAW,CAAC;EAC5C,IAAID,IAAI,IAAIE,SAAS,EAAE;IACrBF,IAAI,GAAGtB,IAAI,CAACC,KAAK,CAAC,IAAID,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;EAC1D;EACA,IAAMyB,QAAQ,GAAG,IAAIzB,IAAI,CAACsB,IAAI,CAAC;EAC/Bd,eAAe,CAACZ,OAAO,EAAE6B,QAAQ,CAAC;AACpC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}