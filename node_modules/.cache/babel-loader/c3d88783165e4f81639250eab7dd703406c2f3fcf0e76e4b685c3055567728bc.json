{"ast":null,"code":"import _objectSpread from \"C:/Users/brnol/Documents/Hospital/Hospital_equipo/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport SocialLoginForm from './SocialLoginForm';\n// import { mapGetters } from \"vuex\";\nimport { mapState } from 'pinia';\nimport { useStore } from '../../../../store/pinia';\nexport default {\n  name: 'SignIn1Form',\n  components: {\n    SocialLoginForm: SocialLoginForm\n  },\n  props: ['formType', 'email', 'password'],\n  data: function data() {\n    return {\n      user: {\n        email: '',\n        password: ''\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.user.email = this.$props.email;\n    this.user.password = this.$props.password;\n  },\n  computed: _objectSpread({}, mapState(useStore, {\n    stateUsers: 'usersState'\n  })),\n  methods: {\n    onSubmit: function onSubmit() {\n      this.login();\n    },\n    login: function login() {\n      this.$router.push({\n        name: 'dashboard.home-1'\n      });\n    }\n  }\n};","map":{"version":3,"names":["SocialLoginForm","mapState","useStore","name","components","props","data","user","email","password","mounted","$props","computed","_objectSpread","stateUsers","methods","onSubmit","login","$router","push"],"sources":["C:\\Users\\brnol\\Documents\\Hospital\\Hospital_equipo\\src\\views\\AuthPages\\Default\\Forms\\SignIn1Form.vue"],"sourcesContent":["<template>\r\n  <!-- <ValidationObserver ref=\"form\" v-slot=\"{ handleSubmit }\"> -->\r\n  <form class=\"mt-4\" novalidate @submit.prevent=\"onSubmit\">\r\n    <!-- <ValidationProvider vid=\"email\" name=\"E-mail\" rules=\"required|email\"> -->\r\n    <div class=\"form-group\">\r\n      <label for=\"emailInput\" class=\"mb-2\">Email address</label>\r\n      <input class=\"form-control mb-0\" type=\"email\" id=\"emailInput\" aria-describedby=\"emailHelp\" v-model=\"user.email\" placeholder=\"Enter email\" required />\r\n      <div class=\"invalid-feedback\">\r\n        <!-- <span>{{ errors[0] }}</span> -->\r\n      </div>\r\n    </div>\r\n    <!-- </ValidationProvider> -->\r\n    <!-- <ValidationProvider vid=\"password\" name=\"Password\" rules=\"required\"> -->\r\n    <div class=\"form-group\">\r\n      <label for=\"passwordInput\" class=\"mb-2\">Password</label>\r\n      <router-link to=\"/auth/password-reset1\" class=\"float-end\"> Forgot password? </router-link>\r\n      <input type=\"password\" id=\"passwordInput\" class=\"form-control mb-0\" v-model=\"user.password\" placeholder=\"Password\" required />\r\n      <div class=\"invalid-feedback\">\r\n        <!-- <span>{{ errors[0] }}</span> -->\r\n      </div>\r\n    </div>\r\n    <!-- </ValidationProvider> -->\r\n    <div class=\"d-inline-block w-100\">\r\n      <div class=\"custom-control custom-checkbox d-inline-block mt-2 pt-1\">\r\n        <input type=\"checkbox\" class=\"custom-control-input\" :id=\"formType\" />\r\n        <label class=\"custom-control-label\" :for=\"formType\">Remember Me</label>\r\n      </div>\r\n      <a href=\"#\" type=\"submit\" class=\"btn btn-primary float-end mt-2\">Sign in</a>\r\n    </div>\r\n    <div class=\"sign-info\">\r\n      <span class=\"dark-color d-inline-block line-height-2\">\r\n        Don't have an account?\r\n        <router-link to=\"/dark/auth/sign-up1\" class=\"iq-waves-effect pr-4\" v-if=\"$route.meta.dark\"> Sign up </router-link>\r\n        <router-link to=\"/auth/sign-up1\" class=\"iq-waves-effect pr-4\" v-else> Sign up </router-link>\r\n      </span>\r\n      <social-login-form></social-login-form>\r\n    </div>\r\n  </form>\r\n  <!-- </ValidationObserver> -->\r\n</template>\r\n\r\n<script>\r\nimport SocialLoginForm from './SocialLoginForm'\r\n// import { mapGetters } from \"vuex\";\r\nimport { mapState } from 'pinia'\r\nimport { useStore } from '../../../../store/pinia'\r\nexport default {\r\n  name: 'SignIn1Form',\r\n  components: { SocialLoginForm },\r\n  props: ['formType', 'email', 'password'],\r\n  data: () => ({\r\n    user: {\r\n      email: '',\r\n      password: ''\r\n    }\r\n  }),\r\n  mounted() {\r\n    this.user.email = this.$props.email\r\n    this.user.password = this.$props.password\r\n  },\r\n  computed: {\r\n    ...mapState(useStore, {\r\n      stateUsers: 'usersState'\r\n    })\r\n  },\r\n  methods: {\r\n    onSubmit() {\r\n      this.login()\r\n    },\r\n    login() {\r\n      this.$router.push({ name: 'dashboard.home-1' })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";;AA0CA,OAAOA,eAAc,MAAO,mBAAkB;AAC9C;AACA,SAASC,QAAO,QAAS,OAAM;AAC/B,SAASC,QAAO,QAAS,yBAAwB;AACjD,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,UAAU,EAAE;IAAEJ,eAAc,EAAdA;EAAgB,CAAC;EAC/BK,KAAK,EAAE,CAAC,UAAU,EAAE,OAAO,EAAE,UAAU,CAAC;EACxCC,IAAI,EAAE,SAAAA,KAAA;IAAA,OAAO;MACXC,IAAI,EAAE;QACJC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MACZ;IACF,CAAC;EAAA,CAAC;EACFC,OAAO,WAAAA,QAAA,EAAG;IACR,IAAI,CAACH,IAAI,CAACC,KAAI,GAAI,IAAI,CAACG,MAAM,CAACH,KAAI;IAClC,IAAI,CAACD,IAAI,CAACE,QAAO,GAAI,IAAI,CAACE,MAAM,CAACF,QAAO;EAC1C,CAAC;EACDG,QAAQ,EAAAC,aAAA,KACHZ,QAAQ,CAACC,QAAQ,EAAE;IACpBY,UAAU,EAAE;EACd,CAAC,EACF;EACDC,OAAO,EAAE;IACPC,QAAQ,WAAAA,SAAA,EAAG;MACT,IAAI,CAACC,KAAK,CAAC;IACb,CAAC;IACDA,KAAK,WAAAA,MAAA,EAAG;MACN,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAEhB,IAAI,EAAE;MAAmB,CAAC;IAChD;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}