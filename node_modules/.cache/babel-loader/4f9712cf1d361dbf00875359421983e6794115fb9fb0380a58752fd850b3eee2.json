{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\n/**\r\n * A module with functionality for buildin a scrollbar with an XY graph in it.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Scrollbar } from \"../../core/elements/Scrollbar\";\nimport { Sprite } from \"../../core/Sprite\";\nimport { List } from \"../../core/utils/List\";\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\nimport { XYChart } from \"../types/XYChart\";\nimport { ValueAxis } from \"../axes/ValueAxis\";\nimport { DateAxis } from \"../axes/DateAxis\";\nimport { registry } from \"../../core/Registry\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\nimport { DesaturateFilter } from \"../../core/rendering/filters/DesaturateFilter\";\nimport * as $iter from \"../../core/utils/Iterator\";\nimport * as $type from \"../../core/utils/Type\";\nimport * as $path from \"../../core/rendering/Path\";\nimport * as $utils from \"../../core/utils/Utils\";\nimport { percent } from \"../../core/utils/Percent\";\nimport { color } from \"../../core/utils/Color\";\nimport { options } from \"../../core/Options\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * A special version of the Scrollbar that has an XY chart in it.\r\n *\r\n * Used mainly as an advanced scrollbar with a preview for other XY charts.\r\n *\r\n * However, can be used as standalone element.\r\n *\r\n * @see {@link IXYChartScrollbarEvents} for a list of available events\r\n * @see {@link IXYChartScrollbarAdapters} for a list of available Adapters\r\n * @important\r\n */\nvar XYChartScrollbar = /** @class */function (_super) {\n  __extends(XYChartScrollbar, _super);\n  /**\r\n   * Constructor\r\n   */\n  function XYChartScrollbar() {\n    var _this = _super.call(this) || this;\n    /**\r\n     * A chart element Scrollbar is for.\r\n     */\n    _this._chart = new MutableValueDisposer();\n    _this.className = \"XYChartScrollbar\";\n    var interfaceColors = new InterfaceColorSet();\n    _this.padding(0, 0, 0, 0);\n    var scrollbarChart = _this.createChild(XYChart);\n    scrollbarChart.shouldClone = false;\n    scrollbarChart.margin(0, 0, 0, 0);\n    scrollbarChart.padding(0, 0, 0, 0);\n    scrollbarChart.interactionsEnabled = false;\n    _this._scrollbarChart = scrollbarChart;\n    if (!$utils.isIE()) {\n      var filter = new DesaturateFilter();\n      filter.filterUnits = \"userSpaceOnUse\";\n      scrollbarChart.plotContainer.filters.push(filter);\n    }\n    _this._disposers.push(_this._scrollbarChart);\n    _this.minHeight = 60;\n    _this.minWidth = 60;\n    var unselectedOverlay = _this.createChild(Sprite);\n    unselectedOverlay.shouldClone = false;\n    unselectedOverlay.setElement(_this.paper.add(\"path\"));\n    unselectedOverlay.fill = interfaceColors.getFor(\"background\");\n    unselectedOverlay.fillOpacity = 0.8;\n    unselectedOverlay.interactionsEnabled = false;\n    unselectedOverlay.isMeasured = false;\n    unselectedOverlay.toBack();\n    _this._unselectedOverlay = unselectedOverlay;\n    _this._disposers.push(_this._unselectedOverlay);\n    scrollbarChart.toBack();\n    _this.background.cornerRadius(0, 0, 0, 0);\n    var thumbBackground = _this.thumb.background;\n    thumbBackground.cornerRadius(0, 0, 0, 0);\n    thumbBackground.fillOpacity = 0;\n    thumbBackground.fill = interfaceColors.getFor(\"background\");\n    var hoverState = thumbBackground.states.getKey(\"hover\");\n    if (hoverState) {\n      hoverState.properties.fillOpacity = 0.2;\n    }\n    var downState = thumbBackground.states.getKey(\"down\");\n    if (downState) {\n      downState.properties.fillOpacity = 0.4;\n    }\n    _this._disposers.push(_this._chart);\n    _this.applyTheme();\n    return _this;\n  }\n  Object.defineProperty(XYChartScrollbar.prototype, \"series\", {\n    /**\r\n     * A list of series that are used to draw graph(s) on the scrollbar.\r\n     *\r\n     * @readonly\r\n     * @return Series\r\n     */\n    get: function get() {\n      if (!this._series) {\n        this._series = new List();\n        this._disposers.push(this._series.events.on(\"inserted\", this.handleSeriesAdded, this, false));\n        this._disposers.push(this._series.events.on(\"removed\", this.handleSeriesRemoved, this, false));\n      }\n      return this._series;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Decorates a new series when they are pushed into a `series` list.\r\n   *\r\n   * @param event Event\r\n   */\n  XYChartScrollbar.prototype.handleSeriesAdded = function (event) {\n    var _this = this;\n    var sourceSeries = event.newValue;\n    if (!sourceSeries.xAxis || !sourceSeries.yAxis) {\n      return;\n    }\n    var scrollbarChart = this.scrollbarChart;\n    scrollbarChart.zoomOutButton.disabled = true;\n    this.chart = sourceSeries.chart;\n    scrollbarChart.dateFormatter.inputDateFormat = this.chart.dateFormatter.inputDateFormat;\n    // Ensure that scrollbar chart shares the same locale as parent chart\n    scrollbarChart.language.locale = this.chart.language.locale;\n    var addXAxis = true;\n    var addYAxis = true;\n    // check if we haven't added clone of x or y axis before\n    $iter.each(this.series.iterator(), function (series) {\n      if (series != sourceSeries) {\n        if (series.xAxis == sourceSeries.xAxis && _this.scrollbarChart.xAxes.length > 0) {\n          addXAxis = false;\n        }\n        if (series.yAxis == sourceSeries.yAxis && _this.scrollbarChart.yAxes.length > 0) {\n          addYAxis = false;\n        }\n      }\n    });\n    sourceSeries.events.on(\"beforedisposed\", function () {\n      _this.series.removeValue(sourceSeries);\n    });\n    var interfaceColors = new InterfaceColorSet();\n    var series = sourceSeries.clone();\n    if (options.onlyShowOnViewport || options.queue) {\n      this.addDisposer(this.chart.events.on(\"removedfromqueue\", function () {\n        scrollbarChart.invalidateData();\n      }));\n    }\n    if ($utils.isIE()) {\n      series.stroke = color(\"#aaaaaa\");\n      series.fill = series.stroke;\n      series.propertyFields.fill = undefined;\n      series.propertyFields.stroke = undefined;\n    }\n    sourceSeries.scrollbarSeries = series;\n    if (addXAxis) {\n      var xAxis = sourceSeries.xAxis.clone();\n      scrollbarChart.xAxes.moveValue(xAxis);\n      xAxis.title.disabled = true;\n      xAxis.rangeChangeDuration = 0;\n      //xAxis.id = sourceSeries.uid;\n      var renderer = xAxis.renderer;\n      renderer.ticks.template.disabled = true;\n      renderer.inside = true;\n      renderer.labels.template.inside = true;\n      renderer.line.strokeOpacity = 0;\n      renderer.minLabelPosition = 0.02;\n      renderer.maxLabelPosition = 0.98;\n      renderer.line.disabled = true;\n      renderer.axisFills.template.disabled = true;\n      renderer.baseGrid.disabled = true;\n      renderer.grid.template.strokeOpacity = 0.05;\n      renderer.minWidth = undefined;\n      renderer.minHeight = undefined;\n      renderer.padding(0, 0, 0, 0);\n      renderer.chart = scrollbarChart;\n      renderer.margin(0, 0, 0, 0);\n      xAxis.width = percent(100);\n      var labelsTemplate = renderer.labels.template;\n      labelsTemplate.fillOpacity = 0.5;\n      xAxis.maxZoomCount = undefined;\n      xAxis.minZoomCount = undefined;\n      if (xAxis instanceof DateAxis) {\n        var vAxis_1 = xAxis;\n        var sourceAxis = sourceSeries.xAxis;\n        vAxis_1.groupCount = sourceAxis.groupCount * 5;\n        vAxis_1.min = undefined;\n        vAxis_1.max = undefined;\n        this._disposers.push(vAxis_1.clonedFrom.events.on(\"extremeschanged\", function () {\n          if ($type.isNumber(vAxis_1.clonedFrom.minDefined)) {\n            vAxis_1.min = vAxis_1.clonedFrom.minDefined;\n          }\n          if ($type.isNumber(vAxis_1.clonedFrom.maxDefined)) {\n            vAxis_1.max = vAxis_1.clonedFrom.maxDefined;\n          }\n        }, undefined, false));\n      } else if (xAxis instanceof ValueAxis) {\n        var vAxis_2 = xAxis;\n        vAxis_2.min = undefined;\n        vAxis_2.max = undefined;\n        if (!$type.isNumber(vAxis_2.clonedFrom.minDefined)) {\n          vAxis_2.min = undefined;\n        }\n        if (!$type.isNumber(vAxis_2.clonedFrom.maxDefined)) {\n          vAxis_2.max = undefined;\n        }\n        this._disposers.push(vAxis_2.clonedFrom.events.on(\"extremeschanged\", function () {\n          if ($type.isNumber(vAxis_2.clonedFrom.minDefined)) {\n            vAxis_2.min = vAxis_2.clonedFrom.min;\n          }\n          if ($type.isNumber(vAxis_2.clonedFrom.maxDefined)) {\n            vAxis_2.max = vAxis_2.clonedFrom.max;\n          }\n        }, undefined, false));\n      }\n      series.xAxis = xAxis;\n    } else {\n      this.scrollbarChart.xAxes.each(function (xAxis) {\n        if (xAxis.clonedFrom == sourceSeries.xAxis) {\n          series.xAxis = xAxis;\n        }\n      });\n    }\n    if (addYAxis) {\n      var yAxis = sourceSeries.yAxis.clone();\n      scrollbarChart.yAxes.moveValue(yAxis);\n      yAxis.title.disabled = true;\n      yAxis.rangeChangeDuration = 0;\n      var renderer = yAxis.renderer;\n      renderer.ticks.template.disabled = true;\n      renderer.inside = true;\n      renderer.labels.template.inside = true;\n      renderer.line.strokeOpacity = 0;\n      renderer.minLabelPosition = 0.02;\n      renderer.maxLabelPosition = 0.98;\n      renderer.line.disabled = true;\n      renderer.axisFills.template.disabled = true;\n      renderer.grid.template.stroke = interfaceColors.getFor(\"background\");\n      renderer.baseGrid.disabled = true;\n      renderer.grid.template.strokeOpacity = 0.05;\n      renderer.minWidth = undefined;\n      renderer.minHeight = undefined;\n      renderer.chart = scrollbarChart;\n      renderer.padding(0, 0, 0, 0);\n      renderer.margin(0, 0, 0, 0);\n      yAxis.height = percent(100);\n      var labelsTemplate = renderer.labels.template;\n      labelsTemplate.fillOpacity = 0.5;\n      series.yAxis = yAxis;\n      yAxis.maxZoomCount = undefined;\n      yAxis.minZoomCount = undefined;\n      if (yAxis instanceof DateAxis) {\n        var vAxis_3 = yAxis;\n        vAxis_3.min = undefined;\n        vAxis_3.max = undefined;\n        var sourceAxis = sourceSeries.yAxis;\n        yAxis.groupCount = sourceAxis.groupCount * 5;\n        this._disposers.push(vAxis_3.clonedFrom.events.on(\"extremeschanged\", function () {\n          if ($type.isNumber(vAxis_3.clonedFrom.minDefined)) {\n            vAxis_3.min = vAxis_3.clonedFrom.minDefined;\n          }\n          if ($type.isNumber(vAxis_3.clonedFrom.maxDefined)) {\n            vAxis_3.max = vAxis_3.clonedFrom.maxDefined;\n          }\n        }));\n      } else if (yAxis instanceof ValueAxis) {\n        var vAxis_4 = yAxis;\n        vAxis_4.min = undefined;\n        vAxis_4.max = undefined;\n        if (!$type.isNumber(vAxis_4.clonedFrom.minDefined)) {\n          vAxis_4.min = undefined;\n        }\n        if (!$type.isNumber(vAxis_4.clonedFrom.maxDefined)) {\n          vAxis_4.max = undefined;\n        }\n        this._disposers.push(vAxis_4.clonedFrom.events.on(\"extremeschanged\", function () {\n          if ($type.isNumber(vAxis_4.clonedFrom.minDefined)) {\n            vAxis_4.min = vAxis_4.clonedFrom.minDefined;\n          }\n          if ($type.isNumber(vAxis_4.clonedFrom.maxDefined)) {\n            vAxis_4.max = vAxis_4.clonedFrom.maxDefined;\n          }\n        }));\n      }\n    } else {\n      this.scrollbarChart.yAxes.each(function (yAxis) {\n        if (yAxis.clonedFrom == sourceSeries.yAxis) {\n          series.yAxis = yAxis;\n        }\n      });\n    }\n    series.rangeChangeDuration = 0;\n    series.interpolationDuration = 0;\n    series.defaultState.transitionDuration = 0;\n    series.showOnInit = false;\n    this._disposers.push(series.events.on(\"validated\", this.zoomOutAxes, this, false));\n    // data might be set drectly on series\n    this._disposers.push(sourceSeries.events.on(\"datavalidated\", function () {\n      if (series.data != sourceSeries.data) {\n        // data setter doesn't check this\n        series.data = sourceSeries.data;\n      }\n    }, undefined, false));\n    series.defaultState.properties.visible = true;\n    scrollbarChart.series.push(series);\n    this.updateByOrientation();\n  };\n  /**\r\n   * @ignore\r\n   */\n  XYChartScrollbar.prototype.updateByOrientation = function () {\n    var _this = this;\n    if (this._scrollbarChart) {\n      $iter.each(this._scrollbarChart.xAxes.iterator(), function (xAxis) {\n        var renderer = xAxis.renderer;\n        if (_this.orientation == \"vertical\") {\n          renderer.grid.template.disabled = true;\n          renderer.labels.template.disabled = true;\n          renderer.minGridDistance = 10;\n        } else {\n          renderer.grid.template.disabled = false;\n          renderer.labels.template.disabled = false;\n          renderer.minGridDistance = xAxis.clonedFrom.renderer.minGridDistance;\n        }\n      });\n      $iter.each(this._scrollbarChart.yAxes.iterator(), function (yAxis) {\n        var renderer = yAxis.renderer;\n        if (_this.orientation == \"horizontal\") {\n          renderer.grid.template.disabled = true;\n          renderer.labels.template.disabled = true;\n          renderer.minGridDistance = 10;\n        } else {\n          renderer.grid.template.disabled = false;\n          renderer.labels.template.disabled = false;\n          renderer.minGridDistance = yAxis.clonedFrom.renderer.minGridDistance;\n        }\n      });\n    }\n  };\n  /**\r\n   * Cleans up after series are removed from Scrollbar.\r\n   *\r\n   * @param event  Event\r\n   */\n  XYChartScrollbar.prototype.handleSeriesRemoved = function (event) {\n    var sourceSeries = event.oldValue;\n    var scrollbarChart = this.scrollbarChart;\n    scrollbarChart.series.each(function (series) {\n      if (series && series.clonedFrom == sourceSeries) {\n        scrollbarChart.series.removeValue(series);\n      }\n    });\n    if (scrollbarChart.series.length == 0) {\n      scrollbarChart.xAxes.clear();\n      scrollbarChart.yAxes.clear();\n    }\n    try {\n      sourceSeries.events.off(\"validated\", this.zoomOutAxes, this);\n    } catch (err) {}\n  };\n  Object.defineProperty(XYChartScrollbar.prototype, \"scrollbarChart\", {\n    /**\r\n     * A chart element that is used to display graphs in the Scrollbar.\r\n     *\r\n     * This is not the same as `chart`. It's a totally independent instance of\r\n     * [[XYChart]] with separate config, series, etc.\r\n     *\r\n     * It can be configured just like any other [[XYChart]].\r\n     *\r\n     * @readonly\r\n     * @return Scrollbar's internal chart\r\n     */\n    get: function get() {\n      return this._scrollbarChart;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYChartScrollbar.prototype, \"chart\", {\n    /**\r\n     * @return Chart\r\n     */\n    get: function get() {\n      return this._chart.get();\n    },\n    /**\r\n     * A chart that Scrollbar belongs to.\r\n     *\r\n     * @param chart  Chart\r\n     */\n    set: function set(chart) {\n      if (this._chart.get() !== chart) {\n        this._chart.set(chart, chart.events.on(\"datavalidated\", this.handleDataChanged, this, false));\n        this.handleDataChanged();\n        this._scrollbarChart.dataProvider = chart; // this makes scrollbar chart do not validate data untill charts' data is validated\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYChartScrollbar.prototype, \"unselectedOverlay\", {\n    /**\r\n     * A [[Sprite]] object representing overlay that is used to dim area of the\r\n     * scrollbar that is currently not selected.\r\n     *\r\n     * Use its `fillOpacity` to set opacity of the fill, with `0` (zero)\r\n     * completely disabling the dimming, and `1` making unselected area completely\r\n     * blank.\r\n     *\r\n     * @since 4.6.1\r\n     * @readonly\r\n     * @return Unselected area curtain element\r\n     */\n    get: function get() {\n      return this._unselectedOverlay;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Updates Scrollbar's internal chart's data when the main chart's data\r\n   * changes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  XYChartScrollbar.prototype.handleDataChanged = function () {\n    if (this.chart.data != this.scrollbarChart.data) {\n      this.scrollbarChart.data = this.chart.data;\n    } else {\n      // add data is handled in XYChart\n      // invalidating all data caused the problem: https://github.com/amcharts/amcharts4/issues/2096\n      this.scrollbarChart.invalidateRawData();\n    }\n  };\n  /**\r\n   * Zooms out all axes on the internal chart.\r\n   */\n  XYChartScrollbar.prototype.zoomOutAxes = function () {\n    var scrollbarChart = this.scrollbarChart;\n    $iter.each(scrollbarChart.xAxes.iterator(), function (x) {\n      x.zoom({\n        start: 0,\n        end: 1\n      }, true, true);\n    });\n    $iter.each(scrollbarChart.yAxes.iterator(), function (y) {\n      y.zoom({\n        start: 0,\n        end: 1\n      }, true, true);\n    });\n  };\n  /**\r\n   * Updates scrollbar thumb.\r\n   *\r\n   * @ignore\r\n   */\n  XYChartScrollbar.prototype.updateThumb = function (dispatchEvents) {\n    if (dispatchEvents === void 0) {\n      dispatchEvents = true;\n    }\n    _super.prototype.updateThumb.call(this, dispatchEvents);\n    if (this._unselectedOverlay) {\n      var thumb = this.thumb;\n      var x = thumb.pixelX || 0;\n      var y = thumb.pixelY || 0;\n      var w = thumb.pixelWidth || 0;\n      var h = thumb.pixelHeight || 0;\n      var path = \"\";\n      if (this.orientation == \"horizontal\") {\n        path = $path.rectToPath({\n          x: -1,\n          y: 0,\n          width: x,\n          height: h\n        });\n        path += $path.rectToPath({\n          x: x + w,\n          y: 0,\n          width: (this.pixelWidth || 0) - x - w,\n          height: h\n        });\n      } else {\n        path = $path.rectToPath({\n          x: 0,\n          y: 0,\n          width: w,\n          height: y\n        });\n        path += $path.rectToPath({\n          x: 0,\n          y: y + h,\n          width: w,\n          height: (this.pixelHeight || 0) - y - h\n        });\n      }\n      this._unselectedOverlay.path = path;\n    }\n  };\n  /**\r\n   * Processes JSON-based config before it is applied to the object.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param config  Config\r\n   */\n  XYChartScrollbar.prototype.processConfig = function (config) {\n    if (config) {\n      if ($type.hasValue(config.series) && $type.isArray(config.series)) {\n        for (var i = 0, len = config.series.length; i < len; i++) {\n          var series = config.series[i];\n          if ($type.hasValue(series) && $type.isString(series)) {\n            if (this.map.hasKey(series)) {\n              config.series[i] = this.map.getKey(series);\n            } else {\n              throw Error(\"XYChartScrollbar error: Series with id `\" + series + \"` does not exist.\");\n            }\n          }\n        }\n      }\n    }\n    _super.prototype.processConfig.call(this, config);\n  };\n  return XYChartScrollbar;\n}(Scrollbar);\nexport { XYChartScrollbar };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"XYChartScrollbar\"] = XYChartScrollbar;","map":{"version":3,"names":["Scrollbar","Sprite","List","MutableValueDisposer","XYChart","ValueAxis","DateAxis","registry","InterfaceColorSet","DesaturateFilter","$iter","$type","$path","$utils","percent","color","options","XYChartScrollbar","_super","__extends","_this","call","_chart","className","interfaceColors","padding","scrollbarChart","createChild","shouldClone","margin","interactionsEnabled","_scrollbarChart","isIE","filter","filterUnits","plotContainer","filters","push","_disposers","minHeight","minWidth","unselectedOverlay","setElement","paper","add","fill","getFor","fillOpacity","isMeasured","toBack","_unselectedOverlay","background","cornerRadius","thumbBackground","thumb","hoverState","states","getKey","properties","downState","applyTheme","Object","defineProperty","prototype","get","_series","events","on","handleSeriesAdded","handleSeriesRemoved","event","sourceSeries","newValue","xAxis","yAxis","zoomOutButton","disabled","chart","dateFormatter","inputDateFormat","language","locale","addXAxis","addYAxis","each","series","iterator","xAxes","length","yAxes","removeValue","clone","onlyShowOnViewport","queue","addDisposer","invalidateData","stroke","propertyFields","undefined","scrollbarSeries","moveValue","title","rangeChangeDuration","renderer","ticks","template","inside","labels","line","strokeOpacity","minLabelPosition","maxLabelPosition","axisFills","baseGrid","grid","width","labelsTemplate","maxZoomCount","minZoomCount","vAxis_1","sourceAxis","groupCount","min","max","clonedFrom","isNumber","minDefined","maxDefined","vAxis_2","height","vAxis_3","vAxis_4","interpolationDuration","defaultState","transitionDuration","showOnInit","zoomOutAxes","data","visible","updateByOrientation","orientation","minGridDistance","oldValue","clear","off","err","set","handleDataChanged","dataProvider","invalidateRawData","x","zoom","start","end","y","updateThumb","dispatchEvents","pixelX","pixelY","w","pixelWidth","h","pixelHeight","path","rectToPath","processConfig","config","hasValue","isArray","i","len","isString","map","hasKey","Error","registeredClasses"],"sources":["../../../../../src/.internal/charts/elements/XYChartScrollbar.ts"],"sourcesContent":["/**\r\n * A module with functionality for buildin a scrollbar with an XY graph in it.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Scrollbar, IScrollbarProperties, IScrollbarAdapters, IScrollbarEvents } from \"../../core/elements/Scrollbar\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { List, IListEvents } from \"../../core/utils/List\";\r\nimport { XYSeries } from \"../series/XYSeries\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { XYChart } from \"../types/XYChart\";\r\nimport { Axis } from \"../axes/Axis\";\r\nimport { ValueAxis } from \"../axes/ValueAxis\";\r\nimport { DateAxis } from \"../axes/DateAxis\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { DesaturateFilter } from \"../../core/rendering/filters/DesaturateFilter\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { options } from \"../../core/Options\";\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[XYChartScrollbar]].\r\n */\r\nexport interface IXYChartScrollbarProperties extends IScrollbarProperties { }\r\n\r\n/**\r\n * Defines events for [[XYChartScrollbar]].\r\n */\r\nexport interface IXYChartScrollbarEvents extends IScrollbarEvents { }\r\n\r\n/**\r\n * Defines adapters for [[XYChartScrollbar]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IXYChartScrollbarAdapters extends IScrollbarAdapters, IXYChartScrollbarProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A special version of the Scrollbar that has an XY chart in it.\r\n *\r\n * Used mainly as an advanced scrollbar with a preview for other XY charts.\r\n *\r\n * However, can be used as standalone element.\r\n *\r\n * @see {@link IXYChartScrollbarEvents} for a list of available events\r\n * @see {@link IXYChartScrollbarAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class XYChartScrollbar extends Scrollbar {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IXYChartScrollbarProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IXYChartScrollbarAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IXYChartScrollbarEvents;\r\n\r\n\t/**\r\n\t * An [[XYSeries]] used to draw a graph on the Scrollbar.\r\n\t */\r\n\tprotected _series: List<XYSeries>;\r\n\r\n\t/**\r\n\t * A chart element Scrollbar is for.\r\n\t */\r\n\tprotected _chart = new MutableValueDisposer<XYChart>();\r\n\r\n\t/**\r\n\t * A chart instance that shows mini-chart within Scrollbar.\r\n\t */\r\n\tprotected _scrollbarChart: XYChart;\r\n\r\n\t/**\r\n\t * [_unselectedOverlay description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _unselectedOverlay: Sprite;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"XYChartScrollbar\";\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\t\tthis.padding(0, 0, 0, 0);\r\n\r\n\t\tlet scrollbarChart: XYChart = this.createChild(XYChart);\r\n\t\tscrollbarChart.shouldClone = false;\r\n\t\tscrollbarChart.margin(0, 0, 0, 0);\r\n\t\tscrollbarChart.padding(0, 0, 0, 0);\r\n\t\tscrollbarChart.interactionsEnabled = false;\r\n\r\n\t\tthis._scrollbarChart = scrollbarChart;\r\n\t\tif (!$utils.isIE()) {\r\n\t\t\tlet filter = new DesaturateFilter();\r\n\t\t\tfilter.filterUnits = \"userSpaceOnUse\";\r\n\t\t\tscrollbarChart.plotContainer.filters.push(filter);\r\n\t\t}\r\n\t\tthis._disposers.push(this._scrollbarChart);\r\n\r\n\t\tthis.minHeight = 60;\r\n\t\tthis.minWidth = 60;\r\n\r\n\t\tlet unselectedOverlay: Sprite = this.createChild(Sprite);\r\n\t\tunselectedOverlay.shouldClone = false;\r\n\t\tunselectedOverlay.setElement(this.paper.add(\"path\"));\r\n\t\tunselectedOverlay.fill = interfaceColors.getFor(\"background\");\r\n\t\tunselectedOverlay.fillOpacity = 0.8;\r\n\t\tunselectedOverlay.interactionsEnabled = false;\r\n\t\tunselectedOverlay.isMeasured = false;\r\n\t\tunselectedOverlay.toBack();\r\n\t\tthis._unselectedOverlay = unselectedOverlay;\r\n\t\tthis._disposers.push(this._unselectedOverlay);\r\n\r\n\t\tscrollbarChart.toBack();\r\n\r\n\t\tthis.background.cornerRadius(0, 0, 0, 0);\r\n\r\n\t\tlet thumbBackground = this.thumb.background;\r\n\t\tthumbBackground.cornerRadius(0, 0, 0, 0);\r\n\t\tthumbBackground.fillOpacity = 0;\r\n\t\tthumbBackground.fill = interfaceColors.getFor(\"background\");\r\n\r\n\t\tlet hoverState = thumbBackground.states.getKey(\"hover\");\r\n\t\tif (hoverState) {\r\n\t\t\thoverState.properties.fillOpacity = 0.2;\r\n\t\t}\r\n\r\n\t\tlet downState = thumbBackground.states.getKey(\"down\");\r\n\t\tif (downState) {\r\n\t\t\tdownState.properties.fillOpacity = 0.4;\r\n\t\t}\r\n\r\n\t\tthis._disposers.push(this._chart);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of series that are used to draw graph(s) on the scrollbar.\r\n\t *\r\n\t * @readonly\r\n\t * @return Series\r\n\t */\r\n\tpublic get series(): List<XYSeries> {\r\n\t\tif (!this._series) {\r\n\t\t\tthis._series = new List<XYSeries>();\r\n\t\t\tthis._disposers.push(this._series.events.on(\"inserted\", this.handleSeriesAdded, this, false));\r\n\t\t\tthis._disposers.push(this._series.events.on(\"removed\", this.handleSeriesRemoved, this, false));\r\n\t\t}\r\n\t\treturn this._series;\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates a new series when they are pushed into a `series` list.\r\n\t *\r\n\t * @param event Event\r\n\t */\r\n\tprotected handleSeriesAdded(event: IListEvents<XYSeries>[\"inserted\"]) {\r\n\t\tlet sourceSeries: XYSeries = event.newValue;\r\n\t\tif (!sourceSeries.xAxis || !sourceSeries.yAxis) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet scrollbarChart: XYChart = this.scrollbarChart;\r\n\t\tscrollbarChart.zoomOutButton.disabled = true;\r\n\r\n\t\tthis.chart = sourceSeries.chart;\r\n\r\n\t\tscrollbarChart.dateFormatter.inputDateFormat = this.chart.dateFormatter.inputDateFormat;\r\n\r\n\t\t// Ensure that scrollbar chart shares the same locale as parent chart\r\n\t\tscrollbarChart.language.locale = this.chart.language.locale;\r\n\r\n\t\tlet addXAxis: boolean = true;\r\n\t\tlet addYAxis: boolean = true;\r\n\r\n\t\t// check if we haven't added clone of x or y axis before\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tif (series != sourceSeries) {\r\n\t\t\t\tif (series.xAxis == sourceSeries.xAxis && this.scrollbarChart.xAxes.length > 0) {\r\n\t\t\t\t\taddXAxis = false;\r\n\t\t\t\t}\r\n\t\t\t\tif (series.yAxis == sourceSeries.yAxis && this.scrollbarChart.yAxes.length > 0) {\r\n\t\t\t\t\taddYAxis = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tsourceSeries.events.on(\"beforedisposed\", () => {\r\n\t\t\tthis.series.removeValue(sourceSeries)\r\n\t\t})\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tlet series: XYSeries = <XYSeries>sourceSeries.clone();\r\n\r\n\t\tif(options.onlyShowOnViewport || options.queue){\r\n\t\t\tthis.addDisposer(this.chart.events.on(\"removedfromqueue\", function(){\r\n\t\t\t\tscrollbarChart.invalidateData();\r\n\t\t\t}))\r\n\t\t}\r\n\r\n\t\tif($utils.isIE()){\r\n\t\t\tseries.stroke = color(\"#aaaaaa\");\r\n\t\t\tseries.fill = series.stroke;\r\n\t\t\tseries.propertyFields.fill = undefined;\r\n\t\t\tseries.propertyFields.stroke = undefined;\r\n\t\t}\r\n\t\tsourceSeries.scrollbarSeries = series;\r\n\r\n\t\tif (addXAxis) {\r\n\r\n\t\t\tlet xAxis = sourceSeries.xAxis.clone();\r\n\t\t\tscrollbarChart.xAxes.moveValue(xAxis);\r\n\t\t\txAxis.title.disabled = true;\r\n\t\t\txAxis.rangeChangeDuration = 0;\r\n\t\t\t//xAxis.id = sourceSeries.uid;\r\n\t\t\tlet renderer = xAxis.renderer;\r\n\t\t\trenderer.ticks.template.disabled = true;\r\n\t\t\trenderer.inside = true;\r\n\t\t\trenderer.labels.template.inside = true;\r\n\t\t\trenderer.line.strokeOpacity = 0;\r\n\t\t\trenderer.minLabelPosition = 0.02;\r\n\t\t\trenderer.maxLabelPosition = 0.98;\r\n\t\t\trenderer.line.disabled = true;\r\n\t\t\trenderer.axisFills.template.disabled = true;\r\n\t\t\trenderer.baseGrid.disabled = true;\r\n\t\t\trenderer.grid.template.strokeOpacity = 0.05;\r\n\t\t\trenderer.minWidth = undefined;\r\n\t\t\trenderer.minHeight = undefined;\r\n\t\t\trenderer.padding(0, 0, 0, 0);\r\n\t\t\trenderer.chart = scrollbarChart;\r\n\t\t\trenderer.margin(0, 0, 0, 0);\r\n\r\n\t\t\txAxis.width = percent(100);\r\n\r\n\t\t\tlet labelsTemplate = renderer.labels.template;\r\n\t\t\tlabelsTemplate.fillOpacity = 0.5;\r\n\t\t\txAxis.maxZoomCount = undefined;\r\n\t\t\txAxis.minZoomCount = undefined;\r\n\r\n\t\t\tif (xAxis instanceof DateAxis) {\r\n\t\t\t\tlet vAxis = <DateAxis>xAxis;\r\n\t\t\t\tlet sourceAxis = <DateAxis>sourceSeries.xAxis;\r\n\t\t\t\tvAxis.groupCount = sourceAxis.groupCount * 5;\r\n\t\t\t\tvAxis.min = undefined;\r\n\t\t\t\tvAxis.max = undefined;\r\n\t\t\t\tthis._disposers.push(vAxis.clonedFrom.events.on(\"extremeschanged\", () => {\r\n\t\t\t\t\tif ($type.isNumber(vAxis.clonedFrom.minDefined)) {\r\n\t\t\t\t\t\tvAxis.min = vAxis.clonedFrom.minDefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ($type.isNumber(vAxis.clonedFrom.maxDefined)) {\r\n\t\t\t\t\t\tvAxis.max = vAxis.clonedFrom.maxDefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t}, undefined, false))\r\n\t\t\t}\r\n\t\t\telse if (xAxis instanceof ValueAxis) {\r\n\t\t\t\tlet vAxis = <ValueAxis>xAxis;\r\n\t\t\t\tvAxis.min = undefined;\r\n\t\t\t\tvAxis.max = undefined;\r\n\t\t\t\tif (!$type.isNumber(vAxis.clonedFrom.minDefined)) {\r\n\t\t\t\t\tvAxis.min = undefined;\r\n\t\t\t\t}\r\n\t\t\t\tif (!$type.isNumber(vAxis.clonedFrom.maxDefined)) {\r\n\t\t\t\t\tvAxis.max = undefined;\r\n\t\t\t\t}\r\n\t\t\t\tthis._disposers.push(vAxis.clonedFrom.events.on(\"extremeschanged\", () => {\r\n\t\t\t\t\tif ($type.isNumber(vAxis.clonedFrom.minDefined)) {\r\n\t\t\t\t\t\tvAxis.min = vAxis.clonedFrom.min;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ($type.isNumber(vAxis.clonedFrom.maxDefined)) {\r\n\t\t\t\t\t\tvAxis.max = vAxis.clonedFrom.max;\r\n\t\t\t\t\t}\r\n\t\t\t\t}, undefined, false))\r\n\t\t\t}\r\n\r\n\r\n\t\t\tseries.xAxis = xAxis;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.scrollbarChart.xAxes.each((xAxis) => {\r\n\t\t\t\tif (xAxis.clonedFrom == sourceSeries.xAxis) {\r\n\t\t\t\t\tseries.xAxis = xAxis;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\r\n\t\tif (addYAxis) {\r\n\t\t\tlet yAxis: Axis = <Axis>sourceSeries.yAxis.clone();\r\n\t\t\tscrollbarChart.yAxes.moveValue(yAxis);\r\n\t\t\tyAxis.title.disabled = true;\r\n\t\t\tyAxis.rangeChangeDuration = 0;\r\n\r\n\t\t\tlet renderer = yAxis.renderer;\r\n\t\t\trenderer.ticks.template.disabled = true;\r\n\t\t\trenderer.inside = true;\r\n\t\t\trenderer.labels.template.inside = true;\r\n\t\t\trenderer.line.strokeOpacity = 0;\r\n\t\t\trenderer.minLabelPosition = 0.02;\r\n\t\t\trenderer.maxLabelPosition = 0.98;\r\n\t\t\trenderer.line.disabled = true;\r\n\t\t\trenderer.axisFills.template.disabled = true;\r\n\t\t\trenderer.grid.template.stroke = interfaceColors.getFor(\"background\");\r\n\t\t\trenderer.baseGrid.disabled = true;\r\n\t\t\trenderer.grid.template.strokeOpacity = 0.05;\r\n\t\t\trenderer.minWidth = undefined;\r\n\t\t\trenderer.minHeight = undefined;\r\n\t\t\trenderer.chart = scrollbarChart;\r\n\t\t\trenderer.padding(0, 0, 0, 0);\r\n\t\t\trenderer.margin(0, 0, 0, 0);\r\n\t\t\tyAxis.height = percent(100);\r\n\r\n\t\t\tlet labelsTemplate = renderer.labels.template;\r\n\t\t\tlabelsTemplate.fillOpacity = 0.5;\r\n\r\n\t\t\tseries.yAxis = yAxis;\r\n\r\n\t\t\tyAxis.maxZoomCount = undefined;\r\n\t\t\tyAxis.minZoomCount = undefined;\r\n\r\n\t\t\tif (yAxis instanceof DateAxis) {\r\n\t\t\t\tlet vAxis = <ValueAxis>yAxis;\r\n\t\t\t\tvAxis.min = undefined;\r\n\t\t\t\tvAxis.max = undefined;\r\n\t\t\t\tlet sourceAxis = <DateAxis>sourceSeries.yAxis;\r\n\t\t\t\tyAxis.groupCount = sourceAxis.groupCount * 5;\r\n\r\n\t\t\t\tthis._disposers.push(vAxis.clonedFrom.events.on(\"extremeschanged\", () => {\r\n\t\t\t\t\tif ($type.isNumber(vAxis.clonedFrom.minDefined)) {\r\n\t\t\t\t\t\tvAxis.min = vAxis.clonedFrom.minDefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ($type.isNumber(vAxis.clonedFrom.maxDefined)) {\r\n\t\t\t\t\t\tvAxis.max = vAxis.clonedFrom.maxDefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t}))\r\n\t\t\t}\r\n\r\n\t\t\telse if (yAxis instanceof ValueAxis) {\r\n\t\t\t\tlet vAxis = <ValueAxis>yAxis;\r\n\t\t\t\tvAxis.min = undefined;\r\n\t\t\t\tvAxis.max = undefined;\r\n\r\n\t\t\t\tif (!$type.isNumber(vAxis.clonedFrom.minDefined)) {\r\n\t\t\t\t\tvAxis.min = undefined;\r\n\t\t\t\t}\r\n\t\t\t\tif (!$type.isNumber(vAxis.clonedFrom.maxDefined)) {\r\n\t\t\t\t\tvAxis.max = undefined;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._disposers.push(vAxis.clonedFrom.events.on(\"extremeschanged\", () => {\r\n\t\t\t\t\tif ($type.isNumber(vAxis.clonedFrom.minDefined)) {\r\n\t\t\t\t\t\tvAxis.min = vAxis.clonedFrom.minDefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ($type.isNumber(vAxis.clonedFrom.maxDefined)) {\r\n\t\t\t\t\t\tvAxis.max = vAxis.clonedFrom.maxDefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t}))\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.scrollbarChart.yAxes.each((yAxis) => {\r\n\t\t\t\tif (yAxis.clonedFrom == sourceSeries.yAxis) {\r\n\t\t\t\t\tseries.yAxis = yAxis;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tseries.rangeChangeDuration = 0;\r\n\t\tseries.interpolationDuration = 0;\r\n\t\tseries.defaultState.transitionDuration = 0;\r\n\t\tseries.showOnInit = false;\r\n\r\n\t\tthis._disposers.push(series.events.on(\"validated\", this.zoomOutAxes, this, false));\r\n\r\n\t\t// data might be set drectly on series\r\n\t\tthis._disposers.push(sourceSeries.events.on(\"datavalidated\", () => {\r\n\t\t\tif (series.data != sourceSeries.data) { // data setter doesn't check this\r\n\t\t\t\tseries.data = sourceSeries.data;\r\n\t\t\t}\r\n\t\t}, undefined, false));\r\n\t\tseries.defaultState.properties.visible = true;\r\n\r\n\t\tscrollbarChart.series.push(series);\r\n\r\n\t\tthis.updateByOrientation();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected updateByOrientation() {\r\n\t\tif (this._scrollbarChart) {\r\n\t\t\t$iter.each(this._scrollbarChart.xAxes.iterator(), (xAxis) => {\r\n\t\t\t\tlet renderer = xAxis.renderer;\r\n\t\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\t\trenderer.grid.template.disabled = true;\r\n\t\t\t\t\trenderer.labels.template.disabled = true;\r\n\t\t\t\t\trenderer.minGridDistance = 10;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\trenderer.grid.template.disabled = false;\r\n\t\t\t\t\trenderer.labels.template.disabled = false;\r\n\t\t\t\t\trenderer.minGridDistance = xAxis.clonedFrom.renderer.minGridDistance;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\r\n\t\t\t$iter.each(this._scrollbarChart.yAxes.iterator(), (yAxis) => {\r\n\t\t\t\tlet renderer = yAxis.renderer;\r\n\t\t\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\t\t\trenderer.grid.template.disabled = true;\r\n\t\t\t\t\trenderer.labels.template.disabled = true;\r\n\t\t\t\t\trenderer.minGridDistance = 10;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\trenderer.grid.template.disabled = false;\r\n\t\t\t\t\trenderer.labels.template.disabled = false;\r\n\t\t\t\t\trenderer.minGridDistance = yAxis.clonedFrom.renderer.minGridDistance;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Cleans up after series are removed from Scrollbar.\r\n\t *\r\n\t * @param event  Event\r\n\t */\r\n\tprotected handleSeriesRemoved(event: IListEvents<XYSeries>[\"removed\"]) {\r\n\t\tlet sourceSeries: XYSeries = event.oldValue;\r\n\t\tlet scrollbarChart = this.scrollbarChart;\r\n\r\n\t\tscrollbarChart.series.each((series) => {\r\n\t\t\tif (series && series.clonedFrom == sourceSeries) {\r\n\t\t\t\tscrollbarChart.series.removeValue(series);\r\n\t\t\t}\r\n\t\t})\r\n\t\tif (scrollbarChart.series.length == 0) {\r\n\t\t\tscrollbarChart.xAxes.clear();\r\n\t\t\tscrollbarChart.yAxes.clear();\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tsourceSeries.events.off(\"validated\", this.zoomOutAxes, this);\r\n\t\t}\r\n\t\tcatch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A chart element that is used to display graphs in the Scrollbar.\r\n\t *\r\n\t * This is not the same as `chart`. It's a totally independent instance of\r\n\t * [[XYChart]] with separate config, series, etc.\r\n\t *\r\n\t * It can be configured just like any other [[XYChart]].\r\n\t *\r\n\t * @readonly\r\n\t * @return Scrollbar's internal chart\r\n\t */\r\n\tpublic get scrollbarChart(): XYChart {\r\n\t\treturn this._scrollbarChart;\r\n\t}\r\n\r\n\t/**\r\n\t * A chart that Scrollbar belongs to.\r\n\t *\r\n\t * @param chart  Chart\r\n\t */\r\n\tpublic set chart(chart: XYChart) {\r\n\t\tif (this._chart.get() !== chart) {\r\n\t\t\tthis._chart.set(chart, chart.events.on(\"datavalidated\", this.handleDataChanged, this, false));\r\n\t\t\tthis.handleDataChanged();\r\n\t\t\tthis._scrollbarChart.dataProvider = chart; // this makes scrollbar chart do not validate data untill charts' data is validated\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Chart\r\n\t */\r\n\tpublic get chart(): XYChart {\r\n\t\treturn this._chart.get();\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Sprite]] object representing overlay that is used to dim area of the\r\n\t * scrollbar that is currently not selected.\r\n\t *\r\n\t * Use its `fillOpacity` to set opacity of the fill, with `0` (zero)\r\n\t * completely disabling the dimming, and `1` making unselected area completely\r\n\t * blank.\r\n\t *\r\n\t * @since 4.6.1\r\n\t * @readonly\r\n\t * @return Unselected area curtain element\r\n\t */\r\n\tpublic get unselectedOverlay(): Sprite {\r\n\t\treturn this._unselectedOverlay;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates Scrollbar's internal chart's data when the main chart's data\r\n\t * changes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleDataChanged() {\r\n\t\tif (this.chart.data != this.scrollbarChart.data) {\r\n\t\t\tthis.scrollbarChart.data = this.chart.data;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// add data is handled in XYChart\r\n\t\t\t// invalidating all data caused the problem: https://github.com/amcharts/amcharts4/issues/2096\r\n\t\t\tthis.scrollbarChart.invalidateRawData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms out all axes on the internal chart.\r\n\t */\r\n\tprotected zoomOutAxes() {\r\n\t\tlet scrollbarChart: XYChart = this.scrollbarChart;\r\n\t\t$iter.each(scrollbarChart.xAxes.iterator(), (x) => {\r\n\t\t\tx.zoom({ start: 0, end: 1 }, true, true);\r\n\t\t});\r\n\t\t$iter.each(scrollbarChart.yAxes.iterator(), (y) => {\r\n\t\t\ty.zoom({ start: 0, end: 1 }, true, true);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Updates scrollbar thumb.\r\n\t * \r\n\t * @ignore\r\n\t */\r\n\tpublic updateThumb(dispatchEvents: boolean = true) {\r\n\t\tsuper.updateThumb(dispatchEvents);\r\n\t\tif (this._unselectedOverlay) {\r\n\t\t\tlet thumb = this.thumb;\r\n\t\t\tlet x: number = thumb.pixelX || 0;\r\n\t\t\tlet y: number = thumb.pixelY || 0;\r\n\t\t\tlet w: number = thumb.pixelWidth || 0;\r\n\t\t\tlet h: number = thumb.pixelHeight || 0;\r\n\r\n\t\t\tlet path: string = \"\";\r\n\r\n\t\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\t\tpath = $path.rectToPath({\r\n\t\t\t\t\tx: -1,\r\n\t\t\t\t\ty: 0,\r\n\t\t\t\t\twidth: x,\r\n\t\t\t\t\theight: h\r\n\t\t\t\t});\r\n\r\n\t\t\t\tpath += $path.rectToPath({\r\n\t\t\t\t\tx: x + w,\r\n\t\t\t\t\ty: 0,\r\n\t\t\t\t\twidth: (this.pixelWidth || 0) - x - w,\r\n\t\t\t\t\theight: h\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tpath = $path.rectToPath({\r\n\t\t\t\t\tx: 0,\r\n\t\t\t\t\ty: 0,\r\n\t\t\t\t\twidth: w,\r\n\t\t\t\t\theight: y\r\n\t\t\t\t});\r\n\r\n\t\t\t\tpath += $path.rectToPath({\r\n\t\t\t\t\tx: 0,\r\n\t\t\t\t\ty: y + h,\r\n\t\t\t\t\twidth: w,\r\n\t\t\t\t\theight: (this.pixelHeight || 0) - y - h\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis._unselectedOverlay.path = path;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\tif ($type.hasValue(config.series) && $type.isArray(config.series)) {\r\n\t\t\t\tfor (let i = 0, len = config.series.length; i < len; i++) {\r\n\t\t\t\t\tlet series = config.series[i];\r\n\t\t\t\t\tif ($type.hasValue(series) && $type.isString(series)) {\r\n\t\t\t\t\t\tif (this.map.hasKey(series)) {\r\n\t\t\t\t\t\t\tconfig.series[i] = this.map.getKey(series);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthrow Error(\"XYChartScrollbar error: Series with id `\" + series + \"` does not exist.\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"XYChartScrollbar\"] = XYChartScrollbar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}