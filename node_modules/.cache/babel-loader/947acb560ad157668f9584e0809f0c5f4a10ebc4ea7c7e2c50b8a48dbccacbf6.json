{"ast":null,"code":"import _slicedToArray from \"C:/Users/brnol/Documents/Hospital/Hospital_equipo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _typeof from \"C:/Users/brnol/Documents/Hospital/Hospital_equipo/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _objectSpread from \"C:/Users/brnol/Documents/Hospital/Hospital_equipo/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"C:/Users/brnol/Documents/Hospital/Hospital_equipo/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/brnol/Documents/Hospital/Hospital_equipo/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.dot-all.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/config.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport Manipulator from '../dom/manipulator.js';\nimport { isElement, toType } from './index.js';\n\n/**\n * Class definition\n */\nvar Config = /*#__PURE__*/function () {\n  function Config() {\n    _classCallCheck(this, Config);\n  }\n  _createClass(Config, [{\n    key: \"_getConfig\",\n    value: function _getConfig(config) {\n      config = this._mergeConfigObj(config);\n      config = this._configAfterMerge(config);\n      this._typeCheckConfig(config);\n      return config;\n    }\n  }, {\n    key: \"_configAfterMerge\",\n    value: function _configAfterMerge(config) {\n      return config;\n    }\n  }, {\n    key: \"_mergeConfigObj\",\n    value: function _mergeConfigObj(config, element) {\n      var jsonConfig = isElement(element) ? Manipulator.getDataAttribute(element, 'config') : {}; // try to parse\n\n      return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, this.constructor.Default), _typeof(jsonConfig) === 'object' ? jsonConfig : {}), isElement(element) ? Manipulator.getDataAttributes(element) : {}), _typeof(config) === 'object' ? config : {});\n    }\n  }, {\n    key: \"_typeCheckConfig\",\n    value: function _typeCheckConfig(config) {\n      var configTypes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.constructor.DefaultType;\n      for (var _i = 0, _Object$entries = Object.entries(configTypes); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n          property = _Object$entries$_i[0],\n          expectedTypes = _Object$entries$_i[1];\n        var value = config[property];\n        var valueType = isElement(value) ? 'element' : toType(value);\n        if (!new RegExp(expectedTypes).test(valueType)) {\n          throw new TypeError(\"\".concat(this.constructor.NAME.toUpperCase(), \": Option \\\"\").concat(property, \"\\\" provided type \\\"\").concat(valueType, \"\\\" but expected type \\\"\").concat(expectedTypes, \"\\\".\"));\n        }\n      }\n    }\n  }], [{\n    key: \"Default\",\n    get:\n    // Getters\n    function get() {\n      return {};\n    }\n  }, {\n    key: \"DefaultType\",\n    get: function get() {\n      return {};\n    }\n  }, {\n    key: \"NAME\",\n    get: function get() {\n      throw new Error('You have to implement the static method \"NAME\", for each component!');\n    }\n  }]);\n  return Config;\n}();\nexport default Config;","map":{"version":3,"names":["Manipulator","isElement","toType","Config","_classCallCheck","_createClass","key","value","_getConfig","config","_mergeConfigObj","_configAfterMerge","_typeCheckConfig","element","jsonConfig","getDataAttribute","_objectSpread","constructor","Default","_typeof","getDataAttributes","configTypes","arguments","length","undefined","DefaultType","_i","_Object$entries","Object","entries","_Object$entries$_i","_slicedToArray","property","expectedTypes","valueType","RegExp","test","TypeError","concat","NAME","toUpperCase","get","Error"],"sources":["C:/Users/brnol/Documents/Hospital/Hospital_equipo/node_modules/bootstrap/js/src/util/config.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap util/config.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport Manipulator from '../dom/manipulator.js'\nimport { isElement, toType } from './index.js'\n\n/**\n * Class definition\n */\n\nclass Config {\n  // Getters\n  static get Default() {\n    return {}\n  }\n\n  static get DefaultType() {\n    return {}\n  }\n\n  static get NAME() {\n    throw new Error('You have to implement the static method \"NAME\", for each component!')\n  }\n\n  _getConfig(config) {\n    config = this._mergeConfigObj(config)\n    config = this._configAfterMerge(config)\n    this._typeCheckConfig(config)\n    return config\n  }\n\n  _configAfterMerge(config) {\n    return config\n  }\n\n  _mergeConfigObj(config, element) {\n    const jsonConfig = isElement(element) ? Manipulator.getDataAttribute(element, 'config') : {} // try to parse\n\n    return {\n      ...this.constructor.Default,\n      ...(typeof jsonConfig === 'object' ? jsonConfig : {}),\n      ...(isElement(element) ? Manipulator.getDataAttributes(element) : {}),\n      ...(typeof config === 'object' ? config : {})\n    }\n  }\n\n  _typeCheckConfig(config, configTypes = this.constructor.DefaultType) {\n    for (const [property, expectedTypes] of Object.entries(configTypes)) {\n      const value = config[property]\n      const valueType = isElement(value) ? 'element' : toType(value)\n\n      if (!new RegExp(expectedTypes).test(valueType)) {\n        throw new TypeError(\n          `${this.constructor.NAME.toUpperCase()}: Option \"${property}\" provided type \"${valueType}\" but expected type \"${expectedTypes}\".`\n        )\n      }\n    }\n  }\n}\n\nexport default Config\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}