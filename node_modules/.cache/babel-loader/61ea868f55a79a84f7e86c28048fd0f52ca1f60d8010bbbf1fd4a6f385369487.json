{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { renderSlot as _renderSlot, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, Fragment as _Fragment, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, renderList as _renderList, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, vShow as _vShow, withDirectives as _withDirectives } from \"vue\";\nvar _hoisted_1 = {\n  key: 0\n};\nvar _hoisted_2 = {\n  key: 1,\n  class: \"fas fa-minus-square\"\n};\nvar _hoisted_3 = {\n  key: 1,\n  class: \"fas fa-plus-square\"\n};\nvar _hoisted_4 = {\n  key: 1\n};\nvar _hoisted_5 = {\n  key: 1,\n  class: \"fas fa-caret-square-right\"\n};\nvar _hoisted_6 = {\n  key: 0,\n  class: \"tree\"\n};\nvar _hoisted_7 = {\n  key: 1,\n  class: \"fas fa-plus-square\"\n};\nvar _hoisted_8 = {\n  key: 1,\n  class: \"fas fa-minus-square\"\n};\nvar _hoisted_9 = {\n  key: 1,\n  class: \"fas fa-caret-square-right\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_TreeView = _resolveComponent(\"TreeView\", true);\n  return _openBlock(), _createElementBlock(\"li\", null, [_createElementVNode(\"div\", {\n    class: _normalizeClass({\n      bold: $options.isFolder\n    }),\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $options.toggle && $options.toggle.apply($options, arguments);\n    }),\n    onDblclick: _cache[1] || (_cache[1] = function () {\n      return $options.makeFolder && $options.makeFolder.apply($options, arguments);\n    })\n  }, [$options.isFolder ? (_openBlock(), _createElementBlock(\"span\", _hoisted_1, [$data.isOpen ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [$options.hasGroupOpenSlot ? _renderSlot(_ctx.$slots, \"groupClosed\", {\n    key: 0\n  }) : (_openBlock(), _createElementBlock(\"i\", _hoisted_2))], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [$options.hasGroupCloseSlot ? _renderSlot(_ctx.$slots, \"groupOpened\", {\n    key: 0\n  }) : (_openBlock(), _createElementBlock(\"i\", _hoisted_3))], 64 /* STABLE_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"span\", _hoisted_4, [$options.hasItemSlot ? _renderSlot(_ctx.$slots, \"item\", {\n    key: 0\n  }) : (_openBlock(), _createElementBlock(\"i\", _hoisted_5))])), _createTextVNode(\" \" + _toDisplayString($props.item.name), 1 /* TEXT */)], 34 /* CLASS, NEED_HYDRATION */), $options.isFolder ? _withDirectives((_openBlock(), _createElementBlock(\"ul\", _hoisted_6, [$props.item.children ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList($props.item.children, function (child, index) {\n    return _openBlock(), _createBlock(_component_TreeView, {\n      class: \"\",\n      key: index,\n      item: child\n    }, {\n      groupOpened: _withCtx(function () {\n        return [$options.hasGroupOpenSlot ? _renderSlot(_ctx.$slots, \"groupOpened\", {\n          key: 0\n        }) : (_openBlock(), _createElementBlock(\"i\", _hoisted_7))];\n      }),\n      groupClosed: _withCtx(function () {\n        return [$options.hasGroupOpenSlot ? _renderSlot(_ctx.$slots, \"groupClosed\", {\n          key: 0\n        }) : (_openBlock(), _createElementBlock(\"i\", _hoisted_8))];\n      }),\n      item: _withCtx(function () {\n        return [$options.hasItemSlot ? _renderSlot(_ctx.$slots, \"item\", {\n          key: 0\n        }) : (_openBlock(), _createElementBlock(\"i\", _hoisted_9))];\n      }),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"item\"]);\n  }), 128 /* KEYED_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"<li class=\\\"add\\\" @click=\\\"$emit('add-item', item)\\\">+</li>\")], 512 /* NEED_PATCH */)), [[_vShow, $data.isOpen]]) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","class","_createElementBlock","_createElementVNode","_normalizeClass","bold","$options","isFolder","onClick","_cache","toggle","apply","arguments","onDblclick","makeFolder","_hoisted_1","$data","isOpen","_Fragment","hasGroupOpenSlot","_renderSlot","_ctx","$slots","_hoisted_2","hasGroupCloseSlot","_hoisted_3","_hoisted_4","hasItemSlot","_hoisted_5","_createTextVNode","_toDisplayString","$props","item","name","_hoisted_6","children","_renderList","child","index","_createBlock","_component_TreeView","groupOpened","_withCtx","_hoisted_7","groupClosed","_hoisted_8","_hoisted_9","_","_createCommentVNode"],"sources":["C:\\Users\\brnol\\Documents\\Hospital\\Hospital_equipo\\src\\components\\xray\\treeview\\TreeView.vue"],"sourcesContent":["<template>\r\n  <li>\r\n    <div :class=\"{ bold: isFolder }\" @click=\"toggle\" @dblclick=\"makeFolder\">\r\n      <span v-if=\"isFolder\">\r\n        <template v-if=\"isOpen\">\r\n          <template v-if=\"hasGroupOpenSlot\">\r\n            <slot name=\"groupClosed\" />\r\n          </template>\r\n          <template v-else>\r\n            <i class=\"fas fa-minus-square\"></i>\r\n          </template>\r\n        </template>\r\n        <template v-else>\r\n          <template v-if=\"hasGroupCloseSlot\">\r\n            <slot name=\"groupOpened\" />\r\n          </template>\r\n          <template v-else>\r\n            <i class=\"fas fa-plus-square\"></i>\r\n          </template>\r\n        </template>\r\n      </span>\r\n      <span v-else>\r\n        <template v-if=\"hasItemSlot\">\r\n          <slot name=\"item\"></slot>\r\n        </template>\r\n        <template v-else>\r\n          <i class=\"fas fa-caret-square-right\"></i>\r\n        </template>\r\n      </span>\r\n      {{ item.name }}\r\n    </div>\r\n    <ul class=\"tree\" v-show=\"isOpen\" v-if=\"isFolder\">\r\n      <template v-if=\"item.children\">\r\n        <TreeView class=\"\" v-for=\"(child, index) in item.children\" :key=\"index\" :item=\"child\">\r\n          <template v-slot:groupOpened>\r\n            <template v-if=\"hasGroupOpenSlot\">\r\n              <slot name=\"groupOpened\" />\r\n            </template>\r\n            <template v-else>\r\n              <i class=\"fas fa-plus-square\"></i>\r\n            </template>\r\n          </template>\r\n          <template v-slot:groupClosed>\r\n            <template v-if=\"hasGroupOpenSlot\">\r\n              <slot name=\"groupClosed\" />\r\n            </template>\r\n            <template v-else>\r\n              <i class=\"fas fa-minus-square\"></i>\r\n            </template>\r\n          </template>\r\n          <template v-slot:item>\r\n            <template v-if=\"hasItemSlot\">\r\n              <slot name=\"item\"></slot>\r\n            </template>\r\n            <template v-else>\r\n              <i class=\"fas fa-caret-square-right\"></i>\r\n            </template>\r\n          </template>\r\n        </TreeView>\r\n      </template>\r\n      <!--<li class=\"add\" @click=\"$emit('add-item', item)\">+</li>-->\r\n    </ul>\r\n  </li>\r\n</template>\r\n\r\n<script>\r\nimport TreeView from './TreeView'\r\n\r\nexport default {\r\n  name: 'TreeView',\r\n  props: ['item', 'isOpened'],\r\n  comments: {\r\n    TreeView\r\n  },\r\n  data() {\r\n    return {\r\n      isOpen: !!this.isOpened\r\n    }\r\n  },\r\n  computed: {\r\n    isFolder: function () {\r\n      return this.item.children && this.item.children.length\r\n    },\r\n    hasGroupOpenSlot() {\r\n      return !!this.$slots.groupOpened\r\n    },\r\n    hasGroupCloseSlot() {\r\n      return !!this.$slots.groupClosed\r\n    },\r\n    hasItemSlot() {\r\n      return !!this.$slots.item\r\n    }\r\n  },\r\n  methods: {\r\n    toggle: function () {\r\n      if (this.isFolder) {\r\n        this.isOpen = !this.isOpen\r\n      }\r\n    },\r\n    makeFolder: function () {\r\n      if (!this.isFolder) {\r\n        this.$emit('make-folder', this.item)\r\n        this.isOpen = true\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}