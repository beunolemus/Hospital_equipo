{"ast":null,"code":"import _objectSpread from \"C:/Users/brnol/Documents/Hospital/Hospital_equipo/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport SocialLoginForm from './SocialLoginForm';\nimport { mapState } from 'pinia';\nimport { useStore } from '../../../../store/pinia';\nexport default {\n  name: 'SignUp1Form',\n  components: {\n    SocialLoginForm: SocialLoginForm\n  },\n  props: ['formType'],\n  computed: _objectSpread({}, mapState(useStore, {\n    users: 'usersState'\n  })),\n  data: function data() {\n    return {\n      user: {\n        email: '',\n        password: ''\n      }\n    };\n  },\n  methods: {\n    onSubmit: function onSubmit() {\n      this.$router.replace('/auth/sign-in1');\n    }\n  }\n};","map":{"version":3,"names":["SocialLoginForm","mapState","useStore","name","components","props","computed","_objectSpread","users","data","user","email","password","methods","onSubmit","$router","replace"],"sources":["C:\\Users\\brnol\\Documents\\Hospital\\Hospital_equipo\\src\\views\\AuthPages\\Default\\Forms\\SignUp1Form.vue"],"sourcesContent":["<template>\r\n  <form class=\"mt-4\" novalidate @submit.prevent=\"onSubmit\">\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">Your Full Name</label>\r\n      <input type=\"text\" v-model=\"user.name\" :class=\"'form-control mb-0'\" id=\"name\" aria-describedby=\"emailHelp\" placeholder=\"Your Full Name\" />\r\n      <div class=\"invalid-feedback\"></div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"email\">Email address</label>\r\n      <input type=\"email\" v-model=\"user.email\" :class=\"'form-control mb-0'\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\r\n      <div class=\"invalid-feedback\"></div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"password\">Password</label>\r\n      <input type=\"password\" v-model=\"user.password\" :class=\"'form-control mb-0'\" id=\"password\" placeholder=\"Password\" />\r\n      <div class=\"invalid-feedback\"></div>\r\n    </div>\r\n    <div class=\"d-inline-block w-100\">\r\n      <div class=\"custom-control custom-checkbox d-inline-block mt-2 pt-1\">\r\n        <input type=\"checkbox\" class=\"custom-control-input\" :id=\"formType\" />\r\n        <label class=\"custom-control-label\" :for=\"formType\">I accept <a href=\"#\">Terms and Conditions</a></label>\r\n      </div>\r\n      <button type=\"submit\" class=\"btn btn-primary float-end\">Sign Up</button>\r\n    </div>\r\n    <div class=\"sign-info\">\r\n      <span class=\"dark-color d-inline-block line-height-2\">\r\n        Already Have Account ?\r\n        <router-link to=\"/dark/auth/sign-in1\" class=\"iq-waves-effect pr-4\" v-if=\"$route.meta.dark\"> Sign in </router-link>\r\n        <router-link to=\"/auth/sign-in1\" class=\"iq-waves-effect pr-4\" v-else> Sign in </router-link>\r\n      </span>\r\n      <social-login-form></social-login-form>\r\n    </div>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport SocialLoginForm from './SocialLoginForm'\r\nimport { mapState } from 'pinia'\r\nimport { useStore } from '../../../../store/pinia'\r\nexport default {\r\n  name: 'SignUp1Form',\r\n  components: { SocialLoginForm },\r\n  props: ['formType'],\r\n  computed: {\r\n    ...mapState(useStore, {\r\n      users: 'usersState'\r\n    })\r\n  },\r\n  data: () => ({\r\n    user: {\r\n      email: '',\r\n      password: ''\r\n    }\r\n  }),\r\n  methods: {\r\n    onSubmit() {\r\n      this.$router.replace('/auth/sign-in1')\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";;;AAoCA,OAAOA,eAAc,MAAO,mBAAkB;AAC9C,SAASC,QAAO,QAAS,OAAM;AAC/B,SAASC,QAAO,QAAS,yBAAwB;AACjD,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,UAAU,EAAE;IAAEJ,eAAc,EAAdA;EAAgB,CAAC;EAC/BK,KAAK,EAAE,CAAC,UAAU,CAAC;EACnBC,QAAQ,EAAAC,aAAA,KACHN,QAAQ,CAACC,QAAQ,EAAE;IACpBM,KAAK,EAAE;EACT,CAAC,EACF;EACDC,IAAI,EAAE,SAAAA,KAAA;IAAA,OAAO;MACXC,IAAI,EAAE;QACJC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MACZ;IACF,CAAC;EAAA,CAAC;EACFC,OAAO,EAAE;IACPC,QAAQ,WAAAA,SAAA,EAAG;MACT,IAAI,CAACC,OAAO,CAACC,OAAO,CAAC,gBAAgB;IACvC;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}