{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport { xray } from '../../config/pluginInit';\nimport draggable from 'vuedraggable';\nimport NestedDraggable from '../../components/xray/dragdrop/nested-draggable';\nvar id = 1;\nvar idGlobal = 8;\nvar message = ['vue.draggable', 'draggable', 'component', 'based', 'Sortablejs'];\nexport default {\n  name: 'DragDropDemo',\n  mounted: function mounted() {\n    xray.index();\n  },\n  components: {\n    draggable: draggable,\n    NestedDraggable: NestedDraggable\n  },\n  display: 'DragDropDemo',\n  order: 0,\n  data: function data() {\n    return {\n      enabled: true,\n      list: [{\n        name: 'John',\n        id: 0\n      }, {\n        name: 'Joao',\n        id: 1\n      }, {\n        name: 'Jean',\n        id: 2\n      }],\n      dragging1: false,\n      list1: [{\n        name: 'John',\n        id: 1\n      }, {\n        name: 'Joao',\n        id: 2\n      }, {\n        name: 'Jean',\n        id: 3\n      }, {\n        name: 'Gerard',\n        id: 4\n      }],\n      list2: [{\n        name: 'Juan',\n        id: 5\n      }, {\n        name: 'Edgard',\n        id: 6\n      }, {\n        name: 'Johnson',\n        id: 7\n      }],\n      list3: [{\n        name: 'dog 1',\n        id: 1\n      }, {\n        name: 'dog 2',\n        id: 2\n      }, {\n        name: 'dog 3',\n        id: 3\n      }, {\n        name: 'dog 4',\n        id: 4\n      }],\n      list4: [{\n        name: 'cat 5',\n        id: 5\n      }, {\n        name: 'cat 6',\n        id: 6\n      }, {\n        name: 'cat 7',\n        id: 7\n      }],\n      transitionList: message.map(function (name, index) {\n        return {\n          name: name,\n          order: index + 1\n        };\n      }),\n      drag: false,\n      headers: ['id', 'name', 'sport'],\n      list5: [{\n        id: 1,\n        name: 'Abby',\n        sport: 'basket'\n      }, {\n        id: 2,\n        name: 'Brooke',\n        sport: 'foot'\n      }, {\n        id: 3,\n        name: 'Courtenay',\n        sport: 'volley'\n      }, {\n        id: 4,\n        name: 'David',\n        sport: 'rugby'\n      }],\n      dragging: true,\n      nestedList: [{\n        name: 'task 1',\n        tasks: [{\n          name: 'task 2',\n          tasks: []\n        }]\n      }, {\n        name: 'task 3',\n        tasks: [{\n          name: 'task 4',\n          tasks: []\n        }]\n      }, {\n        name: 'task 5',\n        tasks: []\n      }]\n    };\n  },\n  computed: {\n    draggingInfo: function draggingInfo() {\n      return this.dragging ? 'under drag' : '';\n    },\n    dragOptions: function dragOptions() {\n      return {\n        animation: 200,\n        group: 'description',\n        disabled: false,\n        ghostClass: 'ghost'\n      };\n    }\n  },\n  methods: {\n    log: function log() {},\n    checkMove: function checkMove() {},\n    add: function add() {\n      this.list.push({\n        name: 'Juan ' + id,\n        id: id++\n      });\n    },\n    replace: function replace() {\n      this.list = [{\n        name: 'Edgard',\n        id: id++\n      }];\n    },\n    cloneDog: function cloneDog(_ref) {\n      var id = _ref.id;\n      return {\n        id: idGlobal++,\n        name: \"cat \".concat(id)\n      };\n    },\n    removeAt: function removeAt(idx) {\n      this.list.splice(idx, 1);\n    },\n    sort: function sort() {\n      this.transitionList = this.transitionList.sort(function (a, b) {\n        return a.order - b.order;\n      });\n    }\n  }\n};","map":{"version":3,"names":["xray","draggable","NestedDraggable","id","idGlobal","message","name","mounted","index","components","display","order","data","enabled","list","dragging1","list1","list2","list3","list4","transitionList","map","drag","headers","list5","sport","dragging","nestedList","tasks","computed","draggingInfo","dragOptions","animation","group","disabled","ghostClass","methods","log","checkMove","add","push","replace","cloneDog","_ref","concat","removeAt","idx","splice","sort","a","b"],"sources":["C:\\Users\\brnol\\Documents\\Hospital\\Hospital_equipo\\src\\views\\Plugins\\DragDropDemo.vue"],"sourcesContent":["<template>\r\n  <b-container fluid>\r\n    <b-row>\r\n      <b-col cols=\"6\">\r\n        <iq-card>\r\n          <template v-slot:headerTitle>\r\n            <h4 class=\"card-title\">Basic Dragdrop Example</h4>\r\n          </template>\r\n          <template v-slot:headerAction>\r\n            <a class=\"text-primary float-right\" v-b-toggle.collapse-1 role=\"button\">\r\n              <i class=\"ri-code-s-slash-line\" />\r\n            </a>\r\n          </template>\r\n          <template v-slot:body>\r\n            <b-collapse id=\"collapse-1\" class=\"mb-2\">\r\n              <div class=\"card\">\r\n                <kbd class=\"bg-dark\">\r\n                  <!--                  <a href=\"javascript:void(0)\" v-b-tooltip.hover data-copy-target=\"#basic-Min-datepicker\" title=\"Copy\" class=\"text-white float-right\" data-copy=\"true\">Copy</a>-->\r\n                  <pre class=\"text-white\" id=\"basic-dragdrop\"><code>\r\n&#x3C;template&#x3E;\r\n  &#x3C;div class=&#x22;row&#x22;&#x3E;\r\n    &#x3C;div class=&#x22;col-12&#x22;&#x3E;\r\n      &#x3C;div class=&#x22;form-group d-flex justify-content-between align-items-center&#x22;&#x3E;\r\n        &#x3C;div class=&#x22;form-check&#x22;&#x3E;\r\n          &#x3C;input\r\n            id=&#x22;disabled&#x22;\r\n            type=&#x22;checkbox&#x22;\r\n            v-model=&#x22;enabled&#x22;\r\n            class=&#x22;form-check-input&#x22;\r\n          /&#x3E;\r\n          &#x3C;label class=&#x22;form-check-label&#x22; for=&#x22;disabled&#x22;&#x3E;Drag and Drop enabled&#x3C;/label&#x3E;\r\n        &#x3C;/div&#x3E;\r\n        &#x3C;div\r\n          class=&#x22;buttons&#x22;\r\n          aria-label=&#x22;Basic example&#x22;\r\n        &#x3E;\r\n          &#x3C;button class=&#x22;btn btn-primary btn-sm&#x22; @click=&#x22;add&#x22;&#x3E;Add&#x3C;/button&#x3E;&#x26;nbsp;\r\n          &#x3C;button class=&#x22;btn btn-primary btn-sm&#x22; @click=&#x22;replace&#x22;&#x3E;Replace&#x3C;/button&#x3E;\r\n        &#x3C;/div&#x3E;\r\n      &#x3C;/div&#x3E;\r\n    &#x3C;/div&#x3E;\r\n  &#x3C;/div&#x3E;\r\n  &#x3C;div class=&#x22;row&#x22;&#x3E;\r\n    &#x3C;div class=&#x22;col-12&#x22;&#x3E;\r\n      &#x3C;h5 class=&#x22;mb-2&#x22;&#x3E;Draggable&#x3C;/h5&#x3E;\r\n\r\n      &#x3C;draggable\r\n        :list=&#x22;list&#x22;\r\n        :disabled=&#x22;!enabled&#x22;\r\n        class=&#x22;list-group&#x22;\r\n        ghost-class=&#x22;ghost&#x22;\r\n        :move=&#x22;checkMove&#x22;\r\n        @start=&#x22;dragging1 = true&#x22;\r\n        @end=&#x22;dragging1 = false&#x22;\r\n      &#x3E;\r\n        &#x3C;div\r\n          class=&#x22;list-group-item&#x22;\r\n          v-for=&#x22;element in list&#x22;\r\n          :key=&#x22;element.name&#x22;\r\n        &#x3E;\r\n        &#x3C;/div&#x3E;\r\n      &#x3C;/draggable&#x3E;\r\n    &#x3C;/div&#x3E;\r\n  &#x3C;/div&#x3E;\r\n&#x3C;/template&#x3E;\r\n&#x3C;script&#x3E;\r\nimport draggable from &#x27;vuedraggable&#x27;\r\nlet id = 1\r\nexport default {\r\n  name: &#x27;DragDropDemo&#x27;,\r\n  display:&#x27;DragDropDemo&#x27;,\r\n  order: 0,\r\n  components: {\r\n  draggable\r\n  },\r\n  data(){\r\n    return {\r\n      enabled: true,\r\n      list: [\r\n        { name: &#x22;John&#x22;, id: 0 },\r\n        { name: &#x22;Joao&#x22;, id: 1 },\r\n        { name: &#x22;Jean&#x22;, id: 2 }\r\n      ],\r\n      dragging: false\r\n    };\r\n  },\r\n  computed: {\r\n    draggingInfo() {\r\n      return this.dragging ? &#x22;under drag&#x22; : &#x22;&#x22;;\r\n    }\r\n  },\r\n  methods: {\r\n    add () {\r\n      this.list.push({ name: &#x22;Juan &#x22; + id, id: id++ });\r\n    },\r\n    replace () {\r\n      this.list = [{ name: &#x22;Edgard&#x22;, id: id++ }];\r\n    },\r\n    checkMove (e) {\r\n      window.console.log(&#x22;Future index: &#x22; + e.draggedContext.futureIndex);\r\n    }\r\n  }\r\n}\r\n&#x3C;/script&#x3E;\r\n</code></pre>\r\n                </kbd>\r\n              </div>\r\n            </b-collapse>\r\n            <template>\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <div class=\"form-group d-flex justify-content-between align-items-center\">\r\n                    <div class=\"form-check\">\r\n                      <input id=\"disabled\" type=\"checkbox\" v-model=\"enabled\" class=\"form-check-input\" />\r\n                      <label class=\"form-check-label\" for=\"disabled\">Drag and Drop enabled</label>\r\n                    </div>\r\n                    <div class=\"buttons\" aria-label=\"Basic example\">\r\n                      <button class=\"btn btn-primary btn-sm\" @click=\"add\">Add</button>&nbsp;\r\n                      <button class=\"btn btn-primary btn-sm\" @click=\"replace\">Replace</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <h5 class=\"mb-2\">Draggable {{ draggingInfo }}</h5>\r\n\r\n                  <draggable :list=\"list\" :disabled=\"!enabled\" class=\"list-group\" ghost-class=\"ghost\" :move=\"checkMove\" @start=\"dragging1 = true\" @end=\"dragging1 = false\">\r\n                    <div class=\"list-group-item\" v-for=\"element in list\" :key=\"element.name\">\r\n                      {{ element.name }}\r\n                    </div>\r\n                  </draggable>\r\n                </div>\r\n              </div>\r\n            </template>\r\n          </template>\r\n        </iq-card>\r\n      </b-col>\r\n      <b-col cols=\"6\">\r\n        <iq-card>\r\n          <template v-slot:headerTitle>\r\n            <h4 class=\"card-title\">Two Lists Dragdrop Example</h4>\r\n          </template>\r\n          <template v-slot:headerAction>\r\n            <a class=\"text-primary float-right\" v-b-toggle.collapse-2 role=\"button\">\r\n              <i class=\"ri-code-s-slash-line\" />\r\n            </a>\r\n          </template>\r\n          <template v-slot:body>\r\n            <b-collapse id=\"collapse-2\" class=\"mb-2\">\r\n              <div class=\"card\">\r\n                <kbd class=\"bg-dark\">\r\n                  <!--                  <a href=\"javascript:void(0)\" v-b-tooltip.hover data-copy-target=\"#basic-Min-datepicker\" title=\"Copy\" class=\"text-white float-right\" data-copy=\"true\">Copy</a>-->\r\n                  <pre class=\"text-white\" id=\"two-lists-dragdrop\"><code>\r\n&#x3C;template&#x3E;\r\n  &#x3C;div class=&#x22;row&#x22;&#x3E;\r\n    &#x3C;div class=&#x22;col-6&#x22;&#x3E;\r\n      &#x3C;h5 class=&#x22;mb-2&#x22;&#x3E;Draggable 1&#x3C;/h5&#x3E;\r\n      &#x3C;draggable class=&#x22;list-group&#x22; :list=&#x22;list1&#x22; group=&#x22;people&#x22; @change=&#x22;log&#x22;&#x3E;\r\n        &#x3C;div\r\n          class=&#x22;list-group-item&#x22;\r\n          v-for=&#x22;(element, index) in list1&#x22;\r\n          :key=&#x22;element.name&#x22;\r\n        &#x3E;\r\n        &#x3C;/div&#x3E;\r\n      &#x3C;/draggable&#x3E;\r\n    &#x3C;/div&#x3E;\r\n\r\n    &#x3C;div class=&#x22;col-6&#x22;&#x3E;\r\n      &#x3C;h5 class=&#x22;mb-2&#x22;&#x3E;Draggable 2&#x3C;/h5&#x3E;\r\n      &#x3C;draggable class=&#x22;list-group&#x22; :list=&#x22;list2&#x22; group=&#x22;people&#x22; @change=&#x22;log&#x22;&#x3E;\r\n        &#x3C;div\r\n          class=&#x22;list-group-item&#x22;\r\n          v-for=&#x22;(element, index) in list2&#x22;\r\n          :key=&#x22;element.name&#x22;\r\n        &#x3E;\r\n        &#x3C;/div&#x3E;\r\n      &#x3C;/draggable&#x3E;\r\n    &#x3C;/div&#x3E;\r\n  &#x3C;/div&#x3E;\r\n&#x3C;/template&#x3E;\r\n&#x3C;script&#x3E;\r\nimport draggable from &#x27;vuedraggable&#x27;\r\nlet id = 1\r\nexport default {\r\n  name: &#x27;DragDropDemo&#x27;,\r\n  display:&#x27;DragDropDemo&#x27;,\r\n  order: 0,\r\n  components: {\r\n  draggable\r\n  },\r\n  data(){\r\n    return {\r\n      enabled: true,\r\n      list1: [\r\n        { name: &#x22;John&#x22;, id: 1 },\r\n        { name: &#x22;Joao&#x22;, id: 2 },\r\n        { name: &#x22;Jean&#x22;, id: 3 },\r\n        { name: &#x22;Gerard&#x22;, id: 4 }\r\n      ],\r\n      list2: [\r\n        { name: &#x22;Juan&#x22;, id: 5 },\r\n        { name: &#x22;Edgard&#x22;, id: 6 },\r\n        { name: &#x22;Johnson&#x22;, id: 7 }\r\n      ],\r\n      dragging: false\r\n    };\r\n  },\r\n  computed: {\r\n    draggingInfo() {\r\n      return this.dragging ? &#x22;under drag&#x22; : &#x22;&#x22;;\r\n    }\r\n  },\r\n  methods: {\r\n    add () {\r\n      this.list.push({ name: &#x22;Juan &#x22; + id, id: id++ });\r\n    },\r\n    replace () {\r\n      this.list = [{ name: &#x22;Edgard&#x22;, id: id++ }];\r\n    },\r\n    checkMove (e) {\r\n      window.console.log(&#x22;Future index: &#x22; + e.draggedContext.futureIndex);\r\n    }\r\n  }\r\n}\r\n&#x3C;/script&#x3E;\r\n</code></pre>\r\n                </kbd>\r\n              </div>\r\n            </b-collapse>\r\n            <template>\r\n              <div class=\"row\">\r\n                <div class=\"col-6\">\r\n                  <h5 class=\"mb-2\">Draggable 1</h5>\r\n                  <draggable class=\"list-group\" :list=\"list1\" group=\"people\" @change=\"log\">\r\n                    <div class=\"list-group-item\" v-for=\"(element, index) in list1\" :key=\"element.name\">{{ element.name }} {{ index }}</div>\r\n                  </draggable>\r\n                </div>\r\n\r\n                <div class=\"col-6\">\r\n                  <h5 class=\"mb-2\">Draggable 2</h5>\r\n                  <draggable class=\"list-group\" :list=\"list2\" group=\"people\" @change=\"log\">\r\n                    <div class=\"list-group-item\" v-for=\"(element, index) in list2\" :key=\"element.name\">{{ element.name }} {{ index }}</div>\r\n                  </draggable>\r\n                </div>\r\n              </div>\r\n            </template>\r\n          </template>\r\n        </iq-card>\r\n      </b-col>\r\n      <b-col cols=\"6\">\r\n        <iq-card>\r\n          <template v-slot:headerTitle>\r\n            <h4 class=\"card-title\">Transitions Dragdrop Example</h4>\r\n          </template>\r\n          <template v-slot:headerAction>\r\n            <a class=\"text-primary float-right\" v-b-toggle.collapse-5 role=\"button\">\r\n              <i class=\"ri-code-s-slash-line\" />\r\n            </a>\r\n          </template>\r\n          <template v-slot:body>\r\n            <b-collapse id=\"collapse-5\" class=\"mb-2\">\r\n              <div class=\"card\">\r\n                <kbd class=\"bg-dark\">\r\n                  <!--                  <a href=\"javascript:void(0)\" v-b-tooltip.hover data-copy-target=\"#basic-Min-datepicker\" title=\"Copy\" class=\"text-white float-right\" data-copy=\"true\">Copy</a>-->\r\n                  <pre class=\"text-white\" id=\"transitions-dragdrop\"><code>\r\n&#x3C;template&#x3E;\r\n  &#x3C;div class=&#x22;row&#x22;&#x3E;\r\n    &#x3C;div class=&#x22;col-12&#x22;&#x3E;\r\n      &#x3C;button class=&#x22;btn btn-primary&#x22; @click=&#x22;sort&#x22;&#x3E;\r\n        To original order\r\n      &#x3C;/button&#x3E;\r\n    &#x3C;/div&#x3E;\r\n  &#x3C;/div&#x3E;\r\n  &#x3C;div class=&#x22;row&#x22;&#x3E;\r\n    &#x3C;div class=&#x22;col-12&#x22;&#x3E;\r\n      &#x3C;h5&#x3E;Transition&#x3C;/h5&#x3E;\r\n      &#x3C;draggable\r\n          class=&#x22;list-group&#x22;\r\n          tag=&#x22;ul&#x22;\r\n          v-model=&#x22;transitionList&#x22;\r\n          v-bind=&#x22;dragOptions&#x22;\r\n          @start=&#x22;drag = true&#x22;\r\n          @end=&#x22;drag = false&#x22;&#x3E;\r\n        &#x3C;transition-group type=&#x22;transition&#x22; :name=&#x22;!drag ? &#x27;flip-list&#x27; : null&#x22;&#x3E;\r\n          &#x3C;li class=&#x22;list-group-item&#x22; v-for=&#x22;element in transitionList&#x22; :key=&#x22;element.order&#x22;&#x3E;\r\n            &#x3C;i :class=&#x22; element.fixed ? &#x27;fa fa-anchor&#x27; : &#x27;glyphicon glyphicon-pushpin&#x27; &#x22; @click=&#x22;element.fixed = !element.fixed&#x22; aria-hidden=&#x22;true&#x22; &#x3E;&#x3C;/i&#x3E;\r\n          &#x3C;/li&#x3E;\r\n        &#x3C;/transition-group&#x3E;\r\n      &#x3C;/draggable&#x3E;\r\n    &#x3C;/div&#x3E;\r\n  &#x3C;/div&#x3E;\r\n&#x3C;/template&#x3E;\r\n&#x3C;script&#x3E;\r\nimport draggable from &#x27;vuedraggable&#x27;\r\nconst message = [\r\n  &#x22;vue.draggable&#x22;,\r\n  &#x22;draggable&#x22;,\r\n  &#x22;component&#x22;,\r\n  &#x22;for&#x22;,\r\n  &#x22;vue.js 2.0&#x22;,\r\n  &#x22;based&#x22;,\r\n  &#x22;on&#x22;,\r\n  &#x22;Sortablejs&#x22;\r\n];\r\nexport default {\r\n  name: &#x27;DragDropDemo&#x27;,\r\n  display:&#x27;DragDropDemo&#x27;,\r\n  order: 0,\r\n  components: {\r\n    draggable\r\n  },\r\n  data(){\r\n    return {\r\n      transitionList: message.map((name, index) =&#x3E; {\r\n        return { name, order: index + 1 };\r\n      }),\r\n      drag: false\r\n    },\r\n  }\r\n  computed: {\r\n    draggingInfo() {\r\n      return this.dragging ? &#x22;under drag&#x22; : &#x22;&#x22;;\r\n    }\r\n  },\r\n  methods: {\r\n    sort () {\r\n      this.transitionList = this.transitionList.sort((a, b) =&#x3E; a.order - b.order)\r\n    }\r\n  }\r\n}\r\n&#x3C;/script&#x3E;\r\n</code></pre>\r\n                </kbd>\r\n              </div>\r\n            </b-collapse>\r\n            <template>\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <div class=\"d-flex justify-content-between\">\r\n                    <h5 class=\"mb-2\">Transition</h5>\r\n                    <button class=\"btn btn-primary btn-sm mb-2\" @click=\"sort\">To original order</button>\r\n                  </div>\r\n                  <draggable class=\"list-group\" tag=\"ul\" v-model=\"transitionList\" v-bind=\"dragOptions\" @start=\"drag = true\" @end=\"drag = false\">\r\n                    <transition-group type=\"transition\" :name=\"!drag ? 'flip-list' : null\">\r\n                      <li class=\"list-group-item\" v-for=\"element in transitionList\" :key=\"element.order\">\r\n                        <i :class=\"element.fixed ? 'fa fa-anchor' : 'glyphicon glyphicon-pushpin'\" @click=\"element.fixed = !element.fixed\" aria-hidden=\"true\"></i>\r\n                        {{ element.name }}\r\n                      </li>\r\n                    </transition-group>\r\n                  </draggable>\r\n                </div>\r\n              </div>\r\n            </template>\r\n          </template>\r\n        </iq-card>\r\n      </b-col>\r\n      <b-col cols=\"6\">\r\n        <iq-card>\r\n          <template v-slot:headerTitle>\r\n            <h4 class=\"card-title\">Table Column Dragdrop Example</h4>\r\n          </template>\r\n          <template v-slot:headerAction>\r\n            <a class=\"text-primary float-right\" v-b-toggle.collapse-6 role=\"button\">\r\n              <i class=\"ri-code-s-slash-line\" />\r\n            </a>\r\n          </template>\r\n          <template v-slot:body>\r\n            <b-collapse id=\"collapse-6\" class=\"mb-2\">\r\n              <div class=\"card\">\r\n                <kbd class=\"bg-dark\">\r\n                  <!--                  <a href=\"javascript:void(0)\" v-b-tooltip.hover data-copy-target=\"#basic-Min-datepicker\" title=\"Copy\" class=\"text-white float-right\" data-copy=\"true\">Copy</a>-->\r\n                  <pre class=\"text-white\" id=\"table-column-dragdrop\"><code>\r\n&#x3C;template&#x3E;\r\n  &#x3C;div class=&#x22;row&#x22;&#x3E;\r\n    &#x3C;div class=&#x22;col-8&#x22;&#x3E;\r\n    &#x3C;h5&#x3E;Draggable table&#x3C;/h5&#x3E;\r\n    &#x3C;table class=&#x22;table table-striped&#x22;&#x3E;\r\n      &#x3C;thead class=&#x22;thead-dark&#x22;&#x3E;\r\n        &#x3C;draggable v-model=&#x22;headers&#x22; tag=&#x22;tr&#x22;&#x3E;\r\n          &#x3C;th v-for=&#x22;header in headers&#x22; :key=&#x22;header&#x22; scope=&#x22;col&#x22;&#x3E;\r\n          &#x3C;/th&#x3E;\r\n        &#x3C;/draggable&#x3E;\r\n      &#x3C;/thead&#x3E;\r\n    &#x3C;tbody&#x3E;\r\n      &#x3C;tr v-for=&#x22;item in list5&#x22; :key=&#x22;item.name&#x22;&#x3E;\r\n        &#x3C;td v-for=&#x22;header in headers&#x22; :key=&#x22;header&#x22;&#x3E;\r\n        &#x3C;/td&#x3E;\r\n      &#x3C;/tr&#x3E;\r\n    &#x3C;/tbody&#x3E;\r\n    &#x3C;/table&#x3E;\r\n    &#x3C;/div&#x3E;\r\n  &#x3C;/div&#x3E;\r\n&#x3C;/template&#x3E;\r\n&#x3C;script&#x3E;\r\nimport draggable from &#x27;vuedraggable&#x27;\r\n\r\nexport default {\r\n  name: &#x27;DragDropDemo&#x27;,\r\n  display:&#x27;DragDropDemo&#x27;,\r\n  order: 0,\r\n  components: {\r\n    draggable\r\n  },\r\n  data(){\r\n    return {\r\n      headers: [&#x22;id&#x22;, &#x22;name&#x22;, &#x22;sport&#x22;],\r\n      list: [\r\n        { id: 1, name: &#x22;Abby&#x22;, sport: &#x22;basket&#x22; },\r\n        { id: 2, name: &#x22;Brooke&#x22;, sport: &#x22;foot&#x22; },\r\n        { id: 3, name: &#x22;Courtenay&#x22;, sport: &#x22;volley&#x22; },\r\n        { id: 4, name: &#x22;David&#x22;, sport: &#x22;rugby&#x22; }\r\n      ],\r\n      dragging: false\r\n    }\r\n  }\r\n}\r\n&#x3C;/script&#x3E;\r\n</code></pre>\r\n                </kbd>\r\n              </div>\r\n            </b-collapse>\r\n            <template>\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <h5 class=\"mb-2\">Draggable table</h5>\r\n\r\n                  <table class=\"table table-striped\">\r\n                    <thead class=\"thead-dark\">\r\n                      <draggable v-model=\"headers\" tag=\"tr\">\r\n                        <th v-for=\"header in headers\" :key=\"header\" scope=\"col\"><i class=\"fas fa-arrows-alt\"></i>{{ header }}</th>\r\n                      </draggable>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr v-for=\"item in list5\" :key=\"item.name\">\r\n                        <td v-for=\"header in headers\" :key=\"header\">\r\n                          {{ item[header] }}\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </template>\r\n          </template>\r\n        </iq-card>\r\n      </b-col>\r\n      <b-col cols=\"6\">\r\n        <iq-card>\r\n          <template v-slot:headerTitle>\r\n            <h4 class=\"card-title\">Custom Clone Dragdrop Example</h4>\r\n          </template>\r\n          <template v-slot:headerAction>\r\n            <a class=\"text-primary float-right\" v-b-toggle.collapse-3 role=\"button\">\r\n              <i class=\"ri-code-s-slash-line\" />\r\n            </a>\r\n          </template>\r\n          <template v-slot:body>\r\n            <b-collapse id=\"collapse-3\" class=\"mb-2\">\r\n              <div class=\"card\">\r\n                <kbd class=\"bg-dark\">\r\n                  <!--                  <a href=\"javascript:void(0)\" v-b-tooltip.hover data-copy-target=\"#basic-Min-datepicker\" title=\"Copy\" class=\"text-white float-right\" data-copy=\"true\">Copy</a>-->\r\n                  <pre class=\"text-white\" id=\"custom-clone-dragdrop\"><code>\r\n&#x3C;template&#x3E;\r\n  &#x3C;div class=&#x22;row&#x22;&#x3E;\r\n      &#x3C;div class=&#x22;col-6&#x22;&#x3E;\r\n        &#x3C;h5 class=&#x22;mb-2&#x22;&#x3E;Draggable 1&#x3C;/h5&#x3E;\r\n        &#x3C;draggable\r\n          class=&#x22;dragArea list-group&#x22;\r\n          :list=&#x22;list3&#x22;\r\n          :group=&#x22;{ name: &#x27;people&#x27;, pull: &#x27;clone&#x27;, put: false }&#x22;\r\n          :clone=&#x22;cloneDog&#x22;\r\n          @change=&#x22;log&#x22;\r\n        &#x3E;\r\n          &#x3C;div class=&#x22;list-group-item&#x22; v-for=&#x22;element in list3&#x22; :key=&#x22;element.id&#x22;&#x3E;\r\n          &#x3C;/div&#x3E;\r\n        &#x3C;/draggable&#x3E;\r\n      &#x3C;/div&#x3E;\r\n\r\n      &#x3C;div class=&#x22;col-6&#x22;&#x3E;\r\n        &#x3C;h5 class=&#x22;mb-2&#x22;&#x3E;Draggable 2&#x3C;/h5&#x3E;\r\n        &#x3C;draggable\r\n          class=&#x22;dragArea list-group&#x22;\r\n          :list=&#x22;list4&#x22;\r\n          group=&#x22;people&#x22;\r\n          @change=&#x22;log&#x22;\r\n        &#x3E;\r\n          &#x3C;div class=&#x22;list-group-item&#x22; v-for=&#x22;element in list4&#x22; :key=&#x22;element.id&#x22;&#x3E;\r\n          &#x3C;/div&#x3E;\r\n        &#x3C;/draggable&#x3E;\r\n      &#x3C;/div&#x3E;\r\n    &#x3C;/div&#x3E;\r\n&#x3C;/template&#x3E;\r\n&#x3C;script&#x3E;\r\nimport draggable from &#x27;vuedraggable&#x27;\r\nlet idGlobal = 8\r\nexport default {\r\n  name: &#x27;DragDropDemo&#x27;,\r\n  display:&#x27;DragDropDemo&#x27;,\r\n  order: 0,\r\n  components: {\r\n    draggable\r\n  },\r\n  data(){\r\n    return {\r\n      enabled: true,\r\n      list3: [\r\n        { name: &#x27;dog 1&#x27;, id: 1 },\r\n        { name: &#x27;dog 2&#x27;, id: 2 },\r\n        { name: &#x27;dog 3&#x27;, id: 3 },\r\n        { name: &#x27;dog 4&#x27;, id: 4 }\r\n      ],\r\n      list4: [\r\n        { name: &#x27;cat 5&#x27;, id: 5 },\r\n        { name: &#x27;cat 6&#x27;, id: 6 },\r\n        { name: &#x27;cat 7&#x27;, id: 7 }\r\n      ],\r\n      dragging: false\r\n    };\r\n    },\r\n    computed: {\r\n      draggingInfo() {\r\n        return this.dragging ? &#x22;under drag&#x22; : &#x22;&#x22;;\r\n      }\r\n    },\r\n    methods: {\r\n      cloneDog  ({ id }) {\r\n      return {\r\n        id: idGlobal++,\r\n        name: `cat ${id}`\r\n    }\r\n  }\r\n}\r\n&#x3C;/script&#x3E;\r\n</code></pre>\r\n                </kbd>\r\n              </div>\r\n            </b-collapse>\r\n            <template>\r\n              <div class=\"row\">\r\n                <div class=\"col-6\">\r\n                  <h5 class=\"mb-2\">Draggable 1</h5>\r\n                  <draggable class=\"dragArea list-group\" :list=\"list3\" :group=\"{ name: 'people', pull: 'clone', put: false }\" :clone=\"cloneDog\" @change=\"log\">\r\n                    <div class=\"list-group-item\" v-for=\"element in list3\" :key=\"element.id\">\r\n                      {{ element.name }}\r\n                    </div>\r\n                  </draggable>\r\n                </div>\r\n\r\n                <div class=\"col-6\">\r\n                  <h5 class=\"mb-2\">Draggable 2</h5>\r\n                  <draggable class=\"dragArea list-group\" :list=\"list4\" group=\"people\" @change=\"log\">\r\n                    <div class=\"list-group-item\" v-for=\"element in list4\" :key=\"element.id\">\r\n                      {{ element.name }}\r\n                    </div>\r\n                  </draggable>\r\n                </div>\r\n              </div>\r\n            </template>\r\n          </template>\r\n        </iq-card>\r\n      </b-col>\r\n      <b-col cols=\"6\">\r\n        <iq-card>\r\n          <template v-slot:headerTitle>\r\n            <h4 class=\"card-title\">Nested Dragdrop Example</h4>\r\n          </template>\r\n          <template v-slot:headerAction>\r\n            <a class=\"text-primary float-right\" v-b-toggle.collapse-4 role=\"button\">\r\n              <i class=\"ri-code-s-slash-line\" />\r\n            </a>\r\n          </template>\r\n          <template v-slot:body>\r\n            <b-collapse id=\"collapse-4\" class=\"mb-2\">\r\n              <div class=\"card\">\r\n                <kbd class=\"bg-dark\">\r\n                  <!--                  <a href=\"javascript:void(0)\" v-b-tooltip.hover data-copy-target=\"#basic-Min-datepicker\" title=\"Copy\" class=\"text-white float-right\" data-copy=\"true\">Copy</a>-->\r\n                  <pre class=\"text-white\" id=\"handle-dragdrop\"><code>\r\n&#x3C;template&#x3E;\r\n  &#x3C;nested-draggable :tasks=&#x22;nestedList&#x22; /&#x3E;\r\n&#x3C;/template&#x3E;\r\n&#x3C;script&#x3E;\r\nimport NestedDraggable from &#x27;@component/xray/dragdrop/nested-draggable&#x27;\r\nexport default{\r\n  components: { NestedDraggable },\r\n  data () {\r\n    return {\r\n      nestedList: [\r\n        {\r\n          name: &#x27;task 1&#x27;,\r\n          tasks: [\r\n            {\r\n              name: &#x27;task 2&#x27;,\r\n              tasks: []\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          name: &#x27;task 3&#x27;,\r\n          tasks: [\r\n            {\r\n              name: &#x27;task 4&#x27;,\r\n              tasks: []\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          name: &#x27;task 5&#x27;,\r\n          tasks: []\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n&#x3C;/script&#x3E;\r\n</code></pre>\r\n                </kbd>\r\n              </div>\r\n            </b-collapse>\r\n            <template>\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <h5 class=\"mb-2\">Nested Draggable</h5>\r\n                  <nested-draggable :tasks=\"nestedList\" />\r\n                </div>\r\n              </div>\r\n            </template>\r\n          </template>\r\n        </iq-card>\r\n      </b-col>\r\n    </b-row>\r\n  </b-container>\r\n</template>\r\n<script>\r\nimport { xray } from '../../config/pluginInit'\r\nimport draggable from 'vuedraggable'\r\nimport NestedDraggable from '../../components/xray/dragdrop/nested-draggable'\r\n\r\nlet id = 1\r\nlet idGlobal = 8\r\nconst message = ['vue.draggable', 'draggable', 'component', 'based', 'Sortablejs']\r\n\r\nexport default {\r\n  name: 'DragDropDemo',\r\n  mounted() {\r\n    xray.index()\r\n  },\r\n  components: {\r\n    draggable,\r\n    NestedDraggable\r\n  },\r\n  display: 'DragDropDemo',\r\n  order: 0,\r\n  data() {\r\n    return {\r\n      enabled: true,\r\n      list: [\r\n        { name: 'John', id: 0 },\r\n        { name: 'Joao', id: 1 },\r\n        { name: 'Jean', id: 2 }\r\n      ],\r\n      dragging1: false,\r\n      list1: [\r\n        { name: 'John', id: 1 },\r\n        { name: 'Joao', id: 2 },\r\n        { name: 'Jean', id: 3 },\r\n        { name: 'Gerard', id: 4 }\r\n      ],\r\n      list2: [\r\n        { name: 'Juan', id: 5 },\r\n        { name: 'Edgard', id: 6 },\r\n        { name: 'Johnson', id: 7 }\r\n      ],\r\n      list3: [\r\n        { name: 'dog 1', id: 1 },\r\n        { name: 'dog 2', id: 2 },\r\n        { name: 'dog 3', id: 3 },\r\n        { name: 'dog 4', id: 4 }\r\n      ],\r\n      list4: [\r\n        { name: 'cat 5', id: 5 },\r\n        { name: 'cat 6', id: 6 },\r\n        { name: 'cat 7', id: 7 }\r\n      ],\r\n      transitionList: message.map((name, index) => {\r\n        return { name, order: index + 1 }\r\n      }),\r\n      drag: false,\r\n      headers: ['id', 'name', 'sport'],\r\n      list5: [\r\n        { id: 1, name: 'Abby', sport: 'basket' },\r\n        { id: 2, name: 'Brooke', sport: 'foot' },\r\n        { id: 3, name: 'Courtenay', sport: 'volley' },\r\n        { id: 4, name: 'David', sport: 'rugby' }\r\n      ],\r\n      dragging: true,\r\n      nestedList: [\r\n        {\r\n          name: 'task 1',\r\n          tasks: [\r\n            {\r\n              name: 'task 2',\r\n              tasks: []\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          name: 'task 3',\r\n          tasks: [\r\n            {\r\n              name: 'task 4',\r\n              tasks: []\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          name: 'task 5',\r\n          tasks: []\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  computed: {\r\n    draggingInfo() {\r\n      return this.dragging ? 'under drag' : ''\r\n    },\r\n    dragOptions() {\r\n      return {\r\n        animation: 200,\r\n        group: 'description',\r\n        disabled: false,\r\n        ghostClass: 'ghost'\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    log() {},\r\n    checkMove() {},\r\n    add() {\r\n      this.list.push({ name: 'Juan ' + id, id: id++ })\r\n    },\r\n    replace() {\r\n      this.list = [{ name: 'Edgard', id: id++ }]\r\n    },\r\n    cloneDog({ id }) {\r\n      return {\r\n        id: idGlobal++,\r\n        name: `cat ${id}`\r\n      }\r\n    },\r\n    removeAt(idx) {\r\n      this.list.splice(idx, 1)\r\n    },\r\n    sort() {\r\n      this.transitionList = this.transitionList.sort((a, b) => a.order - b.order)\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}