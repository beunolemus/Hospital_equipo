{"ast":null,"code":"/**\r\n * A module which defines functionality related to Category Axis Break.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { AxisBreak } from \"./AxisBreak\";\nimport { registry } from \"../../core/Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Base class to define \"breaks\" in axes\r\n * @see {@link ICategoryAxisBreakEvents} for a list of available events\r\n * @see {@link ICategoryAxisBreakAdapters} for a list of available Adapters\r\n */\nvar CategoryAxisBreak = /** @class */function (_super) {\n  __extends(CategoryAxisBreak, _super);\n  /**\r\n   * Constructor\r\n   */\n  function CategoryAxisBreak() {\n    var _this = _super.call(this) || this;\n    _this.className = \"CategoryAxisBreak\";\n    _this.properties.startLocation = 0.5;\n    _this.properties.endLocation = 0.5;\n    _this.applyTheme();\n    return _this;\n  }\n  Object.defineProperty(CategoryAxisBreak.prototype, \"startPosition\", {\n    /**\r\n     * Pixel position of the break's start.\r\n     *\r\n     * @return Position (px)\r\n     * @readonly\r\n     */\n    get: function get() {\n      if (this.axis) {\n        return this.axis.indexToPosition(this.adjustedStartValue, this.startLocation);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CategoryAxisBreak.prototype, \"endPosition\", {\n    /**\r\n     * Pixel position of the break's end.\r\n     *\r\n     * @return Position (px)\r\n     * @readonly\r\n     */\n    get: function get() {\n      if (this.axis) {\n        return this.axis.indexToPosition(this.adjustedEndValue, this.endLocation);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CategoryAxisBreak.prototype, \"startCategory\", {\n    /**\r\n     * @return Start category\r\n     */\n    get: function get() {\n      return this.getPropertyValue(\"startCategory\");\n    },\n    /**\r\n     * A category break starts on.\r\n     *\r\n     * @param value Start category\r\n     */\n    set: function set(value) {\n      if (this.setPropertyValue(\"startCategory\", value)) {\n        if (this.axis) {\n          this.axis.invalidateDataItems();\n          this.axis.invalidateSeries();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CategoryAxisBreak.prototype, \"endCategory\", {\n    /**\r\n     * @return End category\r\n     */\n    get: function get() {\n      return this.getPropertyValue(\"endCategory\");\n    },\n    /**\r\n     * A category break ends on.\r\n     *\r\n     * @param value  End category\r\n     */\n    set: function set(value) {\n      if (this.setPropertyValue(\"endCategory\", value)) {\n        if (this.axis) {\n          this.axis.invalidateDataItems();\n          this.axis.invalidateSeries();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CategoryAxisBreak.prototype, \"startValue\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function get() {\n      var category = this.getPropertyValue(\"startCategory\");\n      if (category) {\n        return this.axis.categoryToIndex(category);\n      } else {\n        return this.getPropertyValue(\"startValue\");\n      }\n    },\n    /**\r\n     * An index of start category.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function set(value) {\n      if (this.setPropertyValue(\"startValue\", value)) {\n        if (this.axis) {\n          this.axis.invalidateDataItems();\n          this.axis.invalidateSeries();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CategoryAxisBreak.prototype, \"endValue\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function get() {\n      var category = this.getPropertyValue(\"endCategory\");\n      if (category) {\n        return this.axis.categoryToIndex(category);\n      } else {\n        return this.getPropertyValue(\"endValue\");\n      }\n    },\n    /**\r\n     * An index of end category or a end value.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function set(value) {\n      if (this.setPropertyValue(\"endValue\", value)) {\n        if (this.axis) {\n          this.axis.invalidateDataItems();\n          this.axis.invalidateSeries();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CategoryAxisBreak.prototype, \"startLocation\", {\n    /**\r\n     * @return Break start location\r\n     */\n    get: function get() {\n      return this.getPropertyValue(\"startLocation\");\n    },\n    /**\r\n     * Indicates where within starting category break should begin.\r\n     *\r\n     * Values range from `0` (start) to `1` (end), with default being `0.5` (middle).\r\n     *\r\n     * E.g. if you want to a break to fully encompass start and end categories,\r\n     * you should set `startLocation = 0` and `endLocation = 1`.\r\n     *\r\n     * @since 4.9.17\r\n     * @default 0.5\r\n     * @param  value  Break start location\r\n     */\n    set: function set(value) {\n      if (this.setPropertyValue(\"startLocation\", value)) {\n        if (this.axis) {\n          this.axis.invalidateDataItems();\n          this.axis.invalidateSeries();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CategoryAxisBreak.prototype, \"endLocation\", {\n    /**\r\n     * @return Break end location\r\n     */\n    get: function get() {\n      return this.getPropertyValue(\"endLocation\");\n    },\n    /**\r\n     * Indicates where within ending category break should end.\r\n     *\r\n     * Values range from `0` (start) to `1` (end), with default being `0.5` (middle).\r\n     *\r\n     * E.g. if you want to a break to fully encompass start and end categories,\r\n     * you should set `startLocation = 0` and `endLocation = 1`.\r\n     *\r\n     * @since 4.9.17\r\n     * @default 0.5\r\n     * @param  value  Break end location\r\n     */\n    set: function set(value) {\n      if (this.setPropertyValue(\"endLocation\", value)) {\n        if (this.axis) {\n          this.axis.invalidateDataItems();\n          this.axis.invalidateSeries();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return CategoryAxisBreak;\n}(AxisBreak);\nexport { CategoryAxisBreak };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"CategoryAxisBreak\"] = CategoryAxisBreak;","map":{"version":3,"names":["AxisBreak","registry","CategoryAxisBreak","_super","__extends","_this","call","className","properties","startLocation","endLocation","applyTheme","Object","defineProperty","prototype","get","axis","indexToPosition","adjustedStartValue","adjustedEndValue","getPropertyValue","set","value","setPropertyValue","invalidateDataItems","invalidateSeries","category","categoryToIndex","registeredClasses"],"sources":["../../../../../src/.internal/charts/axes/CategoryAxisBreak.ts"],"sourcesContent":["/**\r\n * A module which defines functionality related to Category Axis Break.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\nimport { AxisBreak, IAxisBreakProperties, IAxisBreakAdapters, IAxisBreakEvents } from \"./AxisBreak\";\r\nimport { CategoryAxis } from \"./CategoryAxis\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[CategoryAxisBreak]].\r\n */\r\nexport interface ICategoryAxisBreakProperties extends IAxisBreakProperties {\r\n\r\n\t/**\r\n\t * Category break starts on.\r\n\t */\r\n\tstartCategory?: string;\r\n\r\n\t/**\r\n\t * Category break ends on.\r\n\t */\r\n\tendCategory?: string;\r\n\r\n\t/**\r\n\t * Location where break starts within cell (0-1).\r\n\t */\r\n\tstartLocation?: number;\r\n\r\n\t/**\r\n\t * Location where break ends within cell (0-1).\r\n\t */\r\n\tendLocation?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[CategoryAxisBreak]].\r\n */\r\nexport interface ICategoryAxisBreakEvents extends IAxisBreakEvents { }\r\n\r\n/**\r\n * Defines adapters for [[CategoryAxisBreak]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICategoryAxisBreakAdapters extends IAxisBreakAdapters, ICategoryAxisBreakProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Base class to define \"breaks\" in axes\r\n * @see {@link ICategoryAxisBreakEvents} for a list of available events\r\n * @see {@link ICategoryAxisBreakAdapters} for a list of available Adapters\r\n */\r\nexport class CategoryAxisBreak extends AxisBreak {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ICategoryAxisBreakProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICategoryAxisBreakAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ICategoryAxisBreakEvents;\r\n\r\n\t/**\r\n\t * Defines the type of the Axis this break is used for.\r\n\t */\r\n\tpublic _axisType: CategoryAxis;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"CategoryAxisBreak\";\r\n\t\tthis.properties.startLocation = 0.5;\r\n\t\tthis.properties.endLocation = 0.5;\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Pixel position of the break's start.\r\n\t *\r\n\t * @return Position (px)\r\n\t * @readonly\r\n\t */\r\n\tpublic get startPosition(): number {\r\n\t\tif (this.axis) {\r\n\t\t\treturn this.axis.indexToPosition(this.adjustedStartValue, this.startLocation);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Pixel position of the break's end.\r\n\t *\r\n\t * @return Position (px)\r\n\t * @readonly\r\n\t */\r\n\tpublic get endPosition(): number {\r\n\t\tif (this.axis) {\r\n\t\t\treturn this.axis.indexToPosition(this.adjustedEndValue, this.endLocation);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A category break starts on.\r\n\t *\r\n\t * @param value Start category\r\n\t */\r\n\tpublic set startCategory(value: string) {\r\n\t\tif (this.setPropertyValue(\"startCategory\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataItems();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Start category\r\n\t */\r\n\tpublic get startCategory(): string {\r\n\t\treturn this.getPropertyValue(\"startCategory\");\r\n\t}\r\n\r\n\t/**\r\n\t * A category break ends on.\r\n\t *\r\n\t * @param value  End category\r\n\t */\r\n\tpublic set endCategory(value: string) {\r\n\t\tif (this.setPropertyValue(\"endCategory\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataItems();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return End category\r\n\t */\r\n\tpublic get endCategory(): string {\r\n\t\treturn this.getPropertyValue(\"endCategory\");\r\n\t}\r\n\r\n\t/**\r\n\t * An index of start category.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set startValue(value: number) {\r\n\t\tif (this.setPropertyValue(\"startValue\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataItems();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get startValue(): number {\r\n\t\tlet category: string = this.getPropertyValue(\"startCategory\");\r\n\t\tif (category) {\r\n\t\t\treturn this.axis.categoryToIndex(category);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.getPropertyValue(\"startValue\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * An index of end category or a end value.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set endValue(value: number) {\r\n\t\tif (this.setPropertyValue(\"endValue\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataItems();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get endValue(): number {\r\n\t\tlet category: string = this.getPropertyValue(\"endCategory\");\r\n\t\tif (category) {\r\n\t\t\treturn this.axis.categoryToIndex(category);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.getPropertyValue(\"endValue\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates where within starting category break should begin.\r\n\t *\r\n\t * Values range from `0` (start) to `1` (end), with default being `0.5` (middle).\r\n\t *\r\n\t * E.g. if you want to a break to fully encompass start and end categories,\r\n\t * you should set `startLocation = 0` and `endLocation = 1`.\r\n\t *\r\n\t * @since 4.9.17\r\n\t * @default 0.5\r\n\t * @param  value  Break start location\r\n\t */\r\n\tpublic set startLocation(value: number) {\r\n\t\tif (this.setPropertyValue(\"startLocation\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataItems();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Break start location\r\n\t */\r\n\tpublic get startLocation(): number {\r\n\t\treturn this.getPropertyValue(\"startLocation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates where within ending category break should end.\r\n\t *\r\n\t * Values range from `0` (start) to `1` (end), with default being `0.5` (middle).\r\n\t *\r\n\t * E.g. if you want to a break to fully encompass start and end categories,\r\n\t * you should set `startLocation = 0` and `endLocation = 1`.\r\n\t *\r\n\t * @since 4.9.17\r\n\t * @default 0.5\r\n\t * @param  value  Break end location\r\n\t */\r\n\tpublic set endLocation(value: number) {\r\n\t\tif (this.setPropertyValue(\"endLocation\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataItems();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Break end location\r\n\t */\r\n\tpublic get endLocation(): number {\r\n\t\treturn this.getPropertyValue(\"endLocation\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CategoryAxisBreak\"] = CategoryAxisBreak;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}