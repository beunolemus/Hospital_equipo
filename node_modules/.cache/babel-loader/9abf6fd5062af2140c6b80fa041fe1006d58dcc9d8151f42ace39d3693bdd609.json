{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/**\r\n * XY series module.\r\n */\nimport { __extends, __values } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Series, SeriesDataItem } from \"./Series\";\nimport { Sprite, visualProperties } from \"../../core/Sprite\";\nimport { ValueAxis } from \"../axes/ValueAxis\";\nimport { Dictionary } from \"../../core/utils/Dictionary\";\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\nimport { XYChart } from \"../types/XYChart\";\nimport { CategoryAxis } from \"../axes/CategoryAxis\";\nimport { DateAxis } from \"../axes/DateAxis\";\nimport { registry } from \"../../core/Registry\";\nimport * as $iter from \"../../core/utils/Iterator\";\nimport * as $math from \"../../core/utils/Math\";\nimport * as $utils from \"../../core/utils/Utils\";\nimport * as $type from \"../../core/utils/Type\";\nimport * as $time from \"../../core/utils/Time\";\nimport * as $array from \"../../core/utils/Array\";\nimport * as $object from \"../../core/utils/Object\";\nimport * as $path from \"../../core/rendering/Path\";\nimport { options } from \"../../core/Options\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Defines a [[DataItem]] for [[XYSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\nvar XYSeriesDataItem = /** @class */function (_super) {\n  __extends(XYSeriesDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n  function XYSeriesDataItem() {\n    var _this = _super.call(this) || this;\n    _this.className = \"XYSeriesDataItem\";\n    _this.values.customValue = {};\n    _this.values.valueX = {\n      stack: 0\n    };\n    _this.values.valueY = {\n      stack: 0\n    };\n    _this.values.openValueX = {};\n    _this.values.openValueY = {};\n    _this.values.dateX = {};\n    _this.values.dateY = {};\n    _this.values.openDateX = {};\n    _this.values.openDateY = {};\n    _this.setLocation(\"dateX\", 0.5, 0);\n    _this.setLocation(\"dateY\", 0.5, 0);\n    _this.setLocation(\"categoryX\", 0.5, 0);\n    _this.setLocation(\"categoryY\", 0.5, 0);\n    _this.applyTheme();\n    return _this;\n  }\n  Object.defineProperty(XYSeriesDataItem.prototype, \"valueX\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function get() {\n      return this.values.valueX.value;\n    },\n    /**\r\n     * Item's numeric value on X value axis.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function set(value) {\n      this.setValue(\"valueX\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"customValue\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function get() {\n      return this.values.customValue.value;\n    },\n    /**\r\n     * Item's custom numeric value.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function set(value) {\n      this.setValue(\"customValue\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"valueY\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function get() {\n      return this.values.valueY.value;\n    },\n    /**\r\n     * Item's numeric value on Y value axis.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function set(value) {\n      this.setValue(\"valueY\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"dateX\", {\n    /**\r\n     * @return Date\r\n     */\n    get: function get() {\n      return this.getDate(\"dateX\");\n    },\n    /**\r\n     * Item's date value on X date-based axis.\r\n     *\r\n     * @param date  Date\r\n     */\n    set: function set(date) {\n      this.setDate(\"dateX\", date);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"dateY\", {\n    /**\r\n     * @return Date\r\n     */\n    get: function get() {\n      return this.getDate(\"dateY\");\n    },\n    /**\r\n     * Item's date value on Y date-based axis.\r\n     *\r\n     * @param date  Date\r\n     */\n    set: function set(date) {\n      this.setDate(\"dateY\", date);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"categoryX\", {\n    /**\r\n     * @return Category\r\n     */\n    get: function get() {\n      return this.categories.categoryX;\n    },\n    /**\r\n     * Item's category on X category axis.\r\n     *\r\n     * @param category  Category\r\n     */\n    set: function set(category) {\n      this.setCategory(\"categoryX\", category);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"categoryY\", {\n    /**\r\n     * @return Category\r\n     */\n    get: function get() {\n      return this.categories.categoryY;\n    },\n    /**\r\n     * Item's category on Y category axis.\r\n     *\r\n     * @param category  Category\r\n     */\n    set: function set(category) {\n      this.setCategory(\"categoryY\", category);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"openValueX\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function get() {\n      return this.values.openValueX.value;\n    },\n    /**\r\n     * Item's open numeric value on X value axis.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function set(value) {\n      this.setValue(\"openValueX\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"openValueY\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function get() {\n      return this.values.openValueY.value;\n    },\n    /**\r\n     * Item's open numeric value on Y value axis.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function set(value) {\n      this.setValue(\"openValueY\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"openDateX\", {\n    /**\r\n     * @return Date\r\n     */\n    get: function get() {\n      return this.getDate(\"openDateX\");\n    },\n    /**\r\n     * Item's open date value on X date-based axis.\r\n     *\r\n     * @param date  Date\r\n     */\n    set: function set(date) {\n      this.setDate(\"openDateX\", date);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"openDateY\", {\n    /**\r\n     * @return Date\r\n     */\n    get: function get() {\n      return this.getDate(\"openDateY\");\n    },\n    /**\r\n     * Item's open date value on Y date-based axis.\r\n     *\r\n     * @param date  Date\r\n     */\n    set: function set(date) {\n      this.setDate(\"openDateY\", date);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"openCategoryX\", {\n    /**\r\n     * @return Category\r\n     */\n    get: function get() {\n      return this.categories.openCategoryX;\n    },\n    /**\r\n     * Item's open category on X category axis.\r\n     *\r\n     * @param category  Category\r\n     */\n    set: function set(category) {\n      this.setCategory(\"openCategoryX\", category);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"openCategoryY\", {\n    /**\r\n     * @return Category\r\n     */\n    get: function get() {\n      return this.categories.openCategoryY;\n    },\n    /**\r\n     * Item's open category on Y category axis.\r\n     *\r\n     * @param category  Category\r\n     */\n    set: function set(category) {\n      this.setCategory(\"openCategoryY\", category);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Return smallest value out of all item's value fields.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param fields      Fields to check in\r\n   * @param working     Include working (temporary) values\r\n   * @param stackValue  If item is in a stack, the value item starts as\r\n   * @return Value\r\n   */\n  XYSeriesDataItem.prototype.getMin = function (fields, working, stackValue) {\n    var _this = this;\n    //if (this.visible) {  // dumped because of non smooth zooming\n    var min;\n    if (!$type.isNumber(stackValue)) {\n      stackValue = 0;\n    }\n    $array.each(fields, function (field) {\n      var value;\n      if (working) {\n        value = _this.getWorkingValue(field);\n      } else {\n        value = _this.getValue(field);\n      }\n      value += stackValue;\n      if (value < min || !$type.isNumber(min)) {\n        min = value;\n      }\n    });\n    return min;\n    //}\n  };\n  /**\r\n   * Return biggest value out of all item's value fields.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param fields      Fields to check in\r\n   * @param working     Include working (temporary) values\r\n   * @param stackValue  If item is in a stack, the value item starts as\r\n   * @return Value\r\n   */\n  XYSeriesDataItem.prototype.getMax = function (fields, working, stackValue) {\n    var _this = this;\n    //if (this.visible) { // dumped because of non smooth zooming\n    var max;\n    if (!$type.isNumber(stackValue)) {\n      stackValue = 0;\n    }\n    $array.each(fields, function (field) {\n      var value;\n      if (working) {\n        value = _this.getWorkingValue(field);\n      } else {\n        value = _this.getValue(field);\n      }\n      value += stackValue;\n      if (value > max || !$type.isNumber(max)) {\n        max = value;\n      }\n    });\n    return max;\n    //}\n  };\n  return XYSeriesDataItem;\n}(SeriesDataItem);\nexport { XYSeriesDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Defines Series for [[XYChart]].\r\n *\r\n * @see {@link IXYSeriesEvents} for a list of available Events\r\n * @see {@link IXYSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\nvar XYSeries = /** @class */function (_super) {\n  __extends(XYSeries, _super);\n  /**\r\n   * Constructor\r\n   */\n  function XYSeries() {\n    var _this = _super.call(this) || this;\n    /**\r\n     * Indicates which of the series' `dataFields` to calculate aggregate values\r\n     * for.\r\n     *\r\n     * Available data fields for all [[XYSeries]] are:\r\n     * `valueX`, `valueY`, `openValueX`, and `openValueY`.\r\n     *\r\n     * [[CandlestickSeries]] adds:\r\n     * `lowValueX`, `lowValueY`, `highValueX`, and `highValueY`.\r\n     *\r\n     * Available options:\r\n     * `\"open\"`, `\"close\"`, `\"low\"`, `\"high\"`, `\"average\"`, `\"sum\"`.\r\n     *\r\n     * Defaults are as follows:\r\n     * * `valueX`: `\"close\"`\r\n     * * `valueY`: `\"close\"`\r\n     * * `openValueX`: `\"open\"`\r\n     * * `openValueY`: `\"open\"`\r\n     * * `lowValueX`: `\"low\"`\r\n     * * `lowValueY`: `\"low\"`\r\n     * * `highValueX`: `\"high\"`\r\n     * * `highValueY`: `\"high\"`\r\n     *\r\n     * Is required only if data being plotted on a `DateAxis` and\r\n     * its `groupData` is set to `true`.\r\n     *\r\n     * ```TypeScript\r\n     * let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n     * dateAxis.groupData = true;\r\n     *\r\n     * let valueAxis = chart.xAxes.push(new am4charts.valueAxis());\r\n     *\r\n     * let series = chart.series.push(new am4charts.LineSeries());\r\n     * series.dataFields.dateX = \"date\";\r\n     * series.dataFields.valueY = \"value\";\r\n     * series.groupFields.valueY = \"average\";\r\n     * ```\r\n     * ```JavaScript\r\n     * var dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n     * dateAxis.groupData = true;\r\n     *\r\n     * var valueAxis = chart.xAxes.push(new am4charts.valueAxis());\r\n     *\r\n     * var series = chart.series.push(new am4charts.LineSeries());\r\n     * series.dataFields.dateX = \"date\";\r\n     * series.dataFields.valueY = \"value\";\r\n     * series.groupFields.valueY = \"average\";\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"xAxes\": [{\r\n     *     \"type\": \"DateAxis\",\r\n     *     \"groupData\": true\r\n     *   }],\r\n     *   \"yAxes\": [{\r\n     *     \"type\": \"ValueAxis\"\r\n     *   }],\r\n     *   \"series\": [{\r\n     *     \"type\": \"LineSeries\",\r\n     *     \"dataFields\": {\r\n     *       \"dateX\": \"date\",\r\n     *       \"valueY\": \"value\"\r\n     *     },\r\n     *     \"groupFields\": {\r\n     *       \"valueY\": \"average\"\r\n     *     }\r\n     *   }]\r\n     * }\r\n     * ```\r\n     *\r\n     * The above setup will ensure, that if there are many data items within\r\n     * selected range, they will be grouped into aggregated data points, using\r\n     * average value of all the values.\r\n     *\r\n     * For example if we have 2 years worth of daily data (~700 data items), when\r\n     * fully zoomed out, the chart would show ~100 data items instead: one for\r\n     * each week in those two years.\r\n     *\r\n     * Grouping will occur automatically, based on current selection range, and\r\n     * will change dynamically when user zooms in/out the chart.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/date-axis/#Dynamic_data_item_grouping} for more information about dynamic data item grouping.\r\n     * @since 4.7.0\r\n     */\n    _this.groupFields = {};\n    /**\r\n     * X axis the series is attached to.\r\n     */\n    _this._xAxis = new MutableValueDisposer();\n    /**\r\n     * Y axis the series is attached to.\r\n     */\n    _this._yAxis = new MutableValueDisposer();\n    /**\r\n     * [_xValueFields description]\r\n     *\r\n     * @todo Description\r\n     */\n    _this._xValueFields = [];\n    /**\r\n     * [_yValueFields description]\r\n     *\r\n     * @todo Description\r\n     */\n    _this._yValueFields = [];\n    /**\r\n     * @ignore\r\n     */\n    _this._baseInterval = {};\n    /**\r\n     * @ignore\r\n     */\n    _this.dataGrouped = false;\n    /**\r\n     * @ignore\r\n     */\n    _this.usesShowFields = false;\n    /**\r\n     * @ignore\r\n     */\n    _this._dataSetChanged = false;\n    _this._maxxX = 100000;\n    _this._maxxY = 100000;\n    _this._propertiesChanged = false;\n    /**\r\n     * @ignore\r\n     */\n    _this.outOfRange = false;\n    _this.className = \"XYSeries\";\n    _this.isMeasured = false;\n    _this.groupFields.valueX = \"close\";\n    _this.groupFields.valueY = \"close\";\n    _this.groupFields.customValue = \"close\";\n    _this.groupFields.openValueX = \"open\";\n    _this.groupFields.openValueY = \"open\";\n    _this.cursorTooltipEnabled = true;\n    _this.cursorHoverEnabled = true;\n    _this.excludeFromTotal = false;\n    _this.mainContainer.mask = new Sprite();\n    _this.mainContainer.mask.setElement(_this.paper.add(\"path\"));\n    _this.stacked = false;\n    _this.snapTooltip = false;\n    _this._showBullets = false;\n    _this.tooltip.pointerOrientation = \"horizontal\";\n    _this.properties.stackToNegative = true;\n    _this.hideTooltipWhileZooming = true;\n    _this.setPropertyValue(\"maskBullets\", true);\n    _this.tooltip.events.on(\"hidden\", function () {\n      _this.returnBulletDefaultState();\n    }, undefined, false);\n    _this._disposers.push(_this._xAxis);\n    _this._disposers.push(_this._yAxis);\n    _this.observe(visualProperties, function () {\n      if (_this.inited) {\n        _this._propertiesChanged = true;\n        if (_this.legendDataItem) {\n          _this.legendDataItem.childrenCreated = false;\n        }\n        if (_this.chart && _this.chart.legend) {\n          _this.chart.legend.invalidateDataItems();\n        }\n        _this.invalidate();\n      }\n    }, undefined, false);\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * Sets defaults that instantiate some objects that rely on parent, so they\r\n   * cannot be set in constructor.\r\n   */\n  XYSeries.prototype.applyInternalDefaults = function () {\n    _super.prototype.applyInternalDefaults.call(this);\n    if (!$type.hasValue(this.readerTitle)) {\n      this.readerTitle = this.language.translate(\"X/Y Series\");\n    }\n  };\n  /**\r\n   * Returns a new/empty DataItem of the type appropriate for this object.\r\n   *\r\n   * @see {@link DataItem}\r\n   * @return Data Item\r\n   */\n  XYSeries.prototype.createDataItem = function () {\n    return new XYSeriesDataItem();\n  };\n  /**\r\n   * @ignore\r\n   */\n  XYSeries.prototype.resetExtremes = function () {\n    this._tmin.clear();\n    this._tmax.clear();\n    this._smin.clear();\n    this._smax.clear();\n  };\n  /**\r\n   * @ignore\r\n   */\n  XYSeries.prototype.dataChangeUpdate = function () {\n    this.dataGrouped = false;\n    this._baseInterval = {};\n    this._currentDataSetId = \"\";\n    this.resetExtremes();\n    if (this.xAxis) {\n      this.xAxis.seriesDataChangeUpdate(this);\n    }\n    if (this.yAxis) {\n      this.yAxis.seriesDataChangeUpdate(this);\n    }\n  };\n  /**\r\n   * (Re)validates the series' data.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  XYSeries.prototype.validateData = function () {\n    this._baseInterval = {};\n    var dataFields = this.dataFields;\n    if (dataFields.valueYShow || dataFields.openValueXShow || dataFields.openValueXShow || dataFields.openValueYShow) {\n      this.usesShowFields = true;\n    } else {\n      this.usesShowFields = false;\n    }\n    this.defineFields();\n    if (this.data.length > 0) {\n      this.dataChangeUpdate();\n    }\n    _super.prototype.validateData.call(this);\n    this.updateItemReaderText();\n    if (this.chart) {\n      if (!$type.hasValue(this.dataFields[this._xField]) || !$type.hasValue(this.dataFields[this._yField])) {\n        throw Error(\"Data fields for series \\\"\" + (this.name ? this.name : this.uid) + \"\\\" are not properly defined.\");\n      }\n    }\n    // 4.7.21 solves 51540\n    if (this.inited && this.isHidden) {\n      this.hide(0);\n    }\n    this.dataGrouped = false;\n  };\n  /**\r\n   * Processes data item.\r\n   *\r\n   * @param dataItem     Data item\r\n   * @param dataContext  Raw data\r\n   * @param index        Index of the data item\r\n   */\n  XYSeries.prototype.processDataItem = function (dataItem, dataContext) {\n    try {\n      _super.prototype.processDataItem.call(this, dataItem, dataContext);\n      this.xAxis.processSeriesDataItem(dataItem, \"X\");\n      this.yAxis.processSeriesDataItem(dataItem, \"Y\");\n      this.setInitialWorkingValues(dataItem);\n    } catch (e) {\n      if (this._chart) {\n        this._chart.raiseCriticalError(e);\n      }\n    }\n  };\n  /**\r\n   *\r\n   * When validating raw data, instead of processing data item, we update it\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param item\r\n   */\n  XYSeries.prototype.updateDataItem = function (dataItem) {\n    _super.prototype.updateDataItem.call(this, dataItem);\n    //dataItem.events.disable();\n    this.xAxis.processSeriesDataItem(dataItem, \"X\");\n    this.yAxis.processSeriesDataItem(dataItem, \"Y\");\n    //dataItem.events.enable();\t\t\n  };\n  /**\r\n   * Inits data item's working values.\r\n   *\r\n   * @param dataItem  Data item\r\n   * @param index     Data item's index\r\n   */\n  XYSeries.prototype.setInitialWorkingValues = function (dataItem) {};\n  /**\r\n   * @ignore\r\n   */\n  XYSeries.prototype.disposeData = function () {\n    _super.prototype.disposeData.call(this);\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n    if (xAxis) {\n      var dataItemsX = this.dataItemsByAxis.getKey(xAxis.uid);\n      if (dataItemsX) {\n        dataItemsX.clear();\n      }\n      if (xAxis instanceof CategoryAxis) {\n        this.clearCatAxis(xAxis);\n      }\n    }\n    if (yAxis) {\n      var dataItemsY = this.dataItemsByAxis.getKey(yAxis.uid);\n      if (dataItemsY) {\n        dataItemsY.clear();\n      }\n      if (yAxis instanceof CategoryAxis) {\n        this.clearCatAxis(yAxis);\n      }\n    }\n  };\n  /**\r\n   * @ignore\r\n   */\n  XYSeries.prototype.clearCatAxis = function (axis) {\n    var uid = this.uid;\n    axis.dataItems.each(function (dataItem) {\n      if (dataItem.seriesDataItems[uid]) {\n        dataItem.seriesDataItems[uid] = [];\n      }\n    });\n  };\n  /**\r\n   * Sets up which data fields to use for data access.\r\n   */\n  XYSeries.prototype.defineFields = function () {\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n    if (xAxis && yAxis) {\n      var xAxisFieldName = xAxis.axisFieldName;\n      var xField = xAxisFieldName + \"X\";\n      var xOpenField = \"open\" + $utils.capitalize(xAxisFieldName) + \"X\";\n      var yAxisFieldName = yAxis.axisFieldName;\n      var yField = yAxisFieldName + \"Y\";\n      var yOpenField = \"open\" + $utils.capitalize(yAxisFieldName) + \"Y\";\n      this._xField = xField;\n      this._yField = yField;\n      if (this.dataFields[xOpenField]) {\n        this._xOpenField = xOpenField;\n      }\n      if (this.dataFields[yOpenField]) {\n        this._yOpenField = yOpenField;\n      }\n      if (!this.dataFields[yOpenField] && this.baseAxis == yAxis) {\n        this._yOpenField = yField;\n      }\n      if (!this.dataFields[xOpenField] && this.baseAxis == xAxis) {\n        this._xOpenField = xField;\n      }\n      if (this.stacked && this.baseAxis == xAxis) {\n        this._xOpenField = xField;\n      }\n      if (this.stacked && this.baseAxis == yAxis) {\n        this._yOpenField = yField;\n      }\n      if (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n        if (!this._yOpenField) {\n          this._yOpenField = yField;\n        }\n      }\n      this._xValueFields = [];\n      this._yValueFields = [];\n      this.addValueField(xAxis, this._xValueFields, this._xField);\n      this.addValueField(xAxis, this._xValueFields, this._xOpenField);\n      this.addValueField(yAxis, this._yValueFields, this._yField);\n      this.addValueField(yAxis, this._yValueFields, this._yOpenField);\n    }\n  };\n  /**\r\n   * [axis description]\r\n   *\r\n   * @todo Description\r\n   * @param axis    Axis\r\n   * @param fields  Fields (?)\r\n   * @param field   Field\r\n   */\n  XYSeries.prototype.addValueField = function (axis, fields, field) {\n    if (axis instanceof ValueAxis) {\n      if ($type.hasValue(this.dataFields[field]) && fields.indexOf(field) == -1) {\n        fields.push(field);\n      }\n    }\n  };\n  /**\r\n   * Sets category field from the category axis.\r\n   *\r\n   * User might set field for category axis only, but not for series. In such\r\n   * case, we take field value from axis and set it for series.\r\n   *\r\n   * @param field  Field\r\n   * @param axis   Axis\r\n   */\n  XYSeries.prototype.setCategoryAxisField = function (field, axis) {\n    if (!$type.hasValue(this.dataFields[field])) {\n      this.dataFields[field] = axis.dataFields.category;\n    }\n  };\n  /**\r\n   * Sets date field from the date axis.\r\n   *\r\n   * User might set field for category axis only, but not for series. In such\r\n   * case, we take field value from axis and set it for series.\r\n   *\r\n   * @param field  Field\r\n   * @param axis   Axis\r\n   */\n  XYSeries.prototype.setDateAxisField = function (field, axis) {\n    if (!$type.hasValue(this.dataFields[field])) {\n      this.dataFields[field] = axis.dataFields.date;\n    }\n  };\n  /**\r\n   * Performs after-draw tasks, e.g. creates masks.\r\n   */\n  XYSeries.prototype.afterDraw = function () {\n    _super.prototype.afterDraw.call(this);\n    this.createMask();\n  };\n  /**\r\n   * Create a mask for the series.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  XYSeries.prototype.createMask = function () {\n    // this mask from which we cut out ranges. does not work well if ranges overlap.\n    if (this.mainContainer.mask) {\n      var path_1 = this.getMaskPath();\n      // @todo: this approach won't work well on circluar or other non x/y axes\n      $iter.each(this.axisRanges.iterator(), function (range) {\n        if (range.axisFill.fillPath) {\n          range.axisFill.validate();\n          path_1 += range.axisFill.fillPath;\n        }\n      });\n      this.mainContainer.mask.path = path_1;\n    }\n  };\n  /**\r\n   * Returns an SVG path to use as series mask.\r\n   *\r\n   * @return SVG path\r\n   */\n  XYSeries.prototype.getMaskPath = function () {\n    if (this.xAxis && this.yAxis) {\n      return $path.rectToPath({\n        x: 0,\n        y: 0,\n        width: this.xAxis.axisLength,\n        height: this.yAxis.axisLength\n      });\n    }\n    return \"\";\n  };\n  /**\r\n   * Returns axis data field to use.\r\n   *\r\n   * @param axis  Axis\r\n   * @return Field name\r\n   */\n  XYSeries.prototype.getAxisField = function (axis) {\n    if (axis == this.xAxis) {\n      return this.xField;\n    }\n    if (axis == this.yAxis) {\n      return this.yField;\n    }\n  };\n  /**\r\n   * Validates data items.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  XYSeries.prototype.validateDataItems = function () {\n    var chart = this.chart;\n    if (chart) {\n      this._maxxX = $math.max(100000, chart.plotContainer.maxWidth * 2);\n      this._maxxY = $math.max(100000, chart.plotContainer.maxHeight * 2);\n    }\n    // this helps date axis to check which baseInterval we should use\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n    if (xAxis && yAxis) {\n      xAxis.updateAxisBySeries();\n      yAxis.updateAxisBySeries();\n    }\n    _super.prototype.validateDataItems.call(this);\n    if (xAxis && yAxis) {\n      xAxis.postProcessSeriesDataItems(this);\n      yAxis.postProcessSeriesDataItems(this);\n    }\n  };\n  /**\r\n   * Validates data range.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  XYSeries.prototype.validateDataRange = function () {\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n    if (xAxis && yAxis) {\n      if (xAxis.dataRangeInvalid) {\n        xAxis.validateDataRange();\n      }\n      if (yAxis.dataRangeInvalid) {\n        yAxis.validateDataRange();\n      }\n    }\n    _super.prototype.validateDataRange.call(this);\n  };\n  /**\r\n   * (Re)validates the whole series, effectively causing it to redraw.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  XYSeries.prototype.validate = function () {\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n    if (xAxis && yAxis) {\n      if (xAxis.invalid) {\n        xAxis.validate();\n      }\n      if (yAxis.invalid) {\n        yAxis.validate();\n      }\n      this.y = yAxis.pixelY;\n      this.x = xAxis.pixelX;\n      this._showBullets = true;\n      var minBulletDistance = this.minBulletDistance;\n      if ($type.isNumber(minBulletDistance)) {\n        if (this.baseAxis.axisLength / (this.endIndex - this.startIndex) < minBulletDistance) {\n          this._showBullets = false;\n        }\n      }\n    }\n    this.updateTooltip();\n    if (xAxis instanceof DateAxis && xAxis.groupData && !this.dataGrouped || yAxis instanceof DateAxis && yAxis.groupData && !this.dataGrouped) {\n      return;\n    }\n    _super.prototype.validate.call(this);\n    var chart = this.chart;\n    var maskBullets = this.maskBullets;\n    if (chart && maskBullets) {\n      if (chart.className == \"XYChart\") {\n        if (chart.leftAxesContainer.layout == \"vertical\" || chart.rightAxesContainer.layout == \"vertical\") {\n          if (this.yAxis) {\n            this.bulletsContainer.mask = this.yAxis.renderer.gridContainer;\n          } else {\n            this.bulletsContainer.mask = undefined;\n          }\n        }\n        if (chart.topAxesContainer.layout == \"horizontal\" || chart.bottomAxesContainer.layout == \"horizontal\") {\n          if (this.xAxis) {\n            this.bulletsContainer.mask = this.xAxis.renderer.gridContainer;\n          } else {\n            this.bulletsContainer.mask = undefined;\n          }\n        }\n      }\n    }\n  };\n  Object.defineProperty(XYSeries.prototype, \"xAxis\", {\n    /**\r\n     * @return Axis\r\n     */\n    get: function get() {\n      if (this.chart) {\n        if (!this._xAxis.get()) {\n          var axis = this.chart.xAxes.getIndex(0);\n          if (!axis) {\n            throw Error(\"There are no X axes on chart.\");\n          }\n          this.xAxis = axis;\n        }\n        return this._xAxis.get();\n      }\n    },\n    /**\r\n     * X axis the series is attached to.\r\n     *\r\n     * @param axis  Axis\r\n     */\n    set: function set(axis) {\n      this.setXAxis(axis);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  XYSeries.prototype.setXAxis = function (axis) {\n    var oldAxis = this._xAxis.get();\n    if (oldAxis != axis) {\n      if (oldAxis) {\n        this.dataItemsByAxis.removeKey(oldAxis.uid);\n        // TODO why is this here ?\n        this._xAxis.dispose();\n        // temp @todo: why it is not disposed?\n        oldAxis.series.removeValue(this);\n      }\n      this._xAxis.set(axis, axis.registerSeries(this));\n      this.dataItemsByAxis.setKey(axis.uid, new Dictionary());\n      this.invalidateData();\n    }\n  };\n  Object.defineProperty(XYSeries.prototype, \"yAxis\", {\n    /**\r\n     * @return Axis\r\n     */\n    get: function get() {\n      if (this.chart) {\n        if (!this._yAxis.get()) {\n          var axis = this.chart.yAxes.getIndex(0);\n          if (!axis) {\n            throw Error(\"There are no Y axes on chart.\");\n          }\n          this.yAxis = axis;\n        }\n        return this._yAxis.get();\n      }\n    },\n    /**\r\n     * Y axis the series is attached to.\r\n     *\r\n     * @param axis  Axis\r\n     */\n    set: function set(axis) {\n      this.setYAxis(axis);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  XYSeries.prototype.setYAxis = function (axis) {\n    var oldAxis = this._yAxis.get();\n    if (oldAxis != axis) {\n      if (oldAxis) {\n        this.dataItemsByAxis.removeKey(oldAxis.uid);\n        // TODO why is this here ?\n        this._yAxis.dispose();\n        // temp @todo: why it is not disposed?\n        oldAxis.series.removeValue(this);\n      }\n      this._yAxis.set(axis, axis.registerSeries(this));\n      if (axis.chart instanceof XYChart) {\n        axis.chart.handleYAxisSet(this);\n      }\n      this.dataItemsByAxis.setKey(axis.uid, new Dictionary());\n      this.invalidateData();\n    }\n  };\n  Object.defineProperty(XYSeries.prototype, \"baseAxis\", {\n    /**\r\n     * @return Axis\r\n     */\n    get: function get() {\n      var xAxis = this.xAxis;\n      var yAxis = this.yAxis;\n      if (!this._baseAxis && xAxis && yAxis) {\n        if (yAxis instanceof DateAxis) {\n          this._baseAxis = yAxis;\n        }\n        if (xAxis instanceof DateAxis) {\n          this._baseAxis = xAxis;\n        }\n        if (yAxis instanceof CategoryAxis) {\n          this._baseAxis = yAxis;\n        }\n        if (xAxis instanceof CategoryAxis) {\n          this._baseAxis = xAxis;\n        }\n        if (!this._baseAxis) {\n          this._baseAxis = xAxis;\n        }\n      }\n      return this._baseAxis;\n    },\n    /**\r\n     * The main (base) axis.\r\n     *\r\n     * This is the axis that series fills will go to, or grow animations will\r\n     * happen from.\r\n     *\r\n     * @param value  Axis\r\n     */\n    set: function set(value) {\n      if (this._baseAxis != value) {\n        this._baseAxis = value;\n        this.invalidate();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Adds one or several (array) of data items to the existing data.\r\n   *\r\n   * @param rawDataItem One or many raw data item objects\r\n   */\n  XYSeries.prototype.addData = function (rawDataItem, removeCount, skipRaw) {\n    _super.prototype.addData.call(this, rawDataItem, removeCount, skipRaw);\n    var scrollbarSeries = this.scrollbarSeries;\n    if (scrollbarSeries) {\n      this.scrollbarSeries.addData(rawDataItem, removeCount, true);\n      this.scrollbarSeries._parseDataFrom = this._parseDataFrom;\n    }\n  };\n  XYSeries.prototype.setData = function (value) {\n    _super.prototype.setData.call(this, value);\n    if (this.scrollbarSeries) {\n      this.scrollbarSeries.setData(value);\n    }\n  };\n  /**\r\n   * Makes the chart use particular data set.\r\n   *\r\n   * If `id` is not provided or there is no such data set, main data will be\r\n   * used.\r\n   *\r\n   * @ignore\r\n   * @since 4.7.0\r\n   * @param  id  Data set id\r\n   */\n  XYSeries.prototype.setDataSet = function (id) {\n    var changed = _super.prototype.setDataSet.call(this, id);\n    if (changed) {\n      this._dataSetChanged = true;\n      var dataItems = this.dataItems;\n      this.resetExtremes();\n      if (dataItems && dataItems.length > 0) {\n        var xAxis = this.xAxis;\n        var yAxis = this.yAxis;\n        this._prevStartIndex = undefined;\n        this._prevEndIndex = undefined;\n        this._startIndex = undefined;\n        this._endIndex = undefined;\n        if (!this.appeared) {\n          this.processValues(false); // this will slow down!\n        }\n        if (xAxis instanceof DateAxis && xAxis == this.baseAxis) {\n          this._tmin.setKey(xAxis.uid, dataItems.getIndex(0).dateX.getTime());\n          this._tmax.setKey(xAxis.uid, dataItems.getIndex(dataItems.length - 1).dateX.getTime());\n          this.dispatch(\"extremeschanged\");\n        }\n        if (yAxis instanceof DateAxis && yAxis == this.baseAxis) {\n          this._tmin.setKey(yAxis.uid, dataItems.getIndex(0).dateY.getTime());\n          this._tmax.setKey(yAxis.uid, dataItems.getIndex(dataItems.length - 1).dateY.getTime());\n          this.dispatch(\"extremeschanged\");\n        }\n      }\n    }\n    return changed;\n  };\n  /**\r\n   * Processes values after data items' were added.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItems  Data items\r\n   */\n  XYSeries.prototype.processValues = function (working) {\n    _super.prototype.processValues.call(this, working);\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n    if (!xAxis || !yAxis) {\n      return;\n    }\n    var dataItems = this.dataItems;\n    var minX = Infinity;\n    var maxX = -Infinity;\n    var minY = Infinity;\n    var maxY = -Infinity;\n    var startIndex = this.startIndex;\n    var endIndex = this.endIndex;\n    var workingStartIndex = startIndex;\n    var workingEndIndex = endIndex;\n    if (!working) {\n      startIndex = 0;\n      endIndex = this.dataItems.length;\n    }\n    for (var i = startIndex; i < endIndex; i++) {\n      var dataItem = dataItems.getIndex(i);\n      this.getStackValue(dataItem, working);\n      var stackX = dataItem.getValue(\"valueX\", \"stack\");\n      var stackY = dataItem.getValue(\"valueY\", \"stack\");\n      if (!working) {\n        stackX = dataItem.getValue(\"valueX\", \"stackTrue\");\n        stackY = dataItem.getValue(\"valueY\", \"stackTrue\");\n      }\n      minX = $math.min(dataItem.getMin(this._xValueFields, working, stackX), minX);\n      minY = $math.min(dataItem.getMin(this._yValueFields, working, stackY), minY);\n      maxX = $math.max(dataItem.getMax(this._xValueFields, working, stackX), maxX);\n      maxY = $math.max(dataItem.getMax(this._yValueFields, working, stackY), maxY);\n      // if it's stacked, pay attention to stack value\n      if (this.stacked) {\n        if (this.baseAxis == xAxis) {\n          if (stackY < minY) {\n            minY = stackY;\n          }\n          if (stackY > maxY) {\n            maxY = stackY;\n          }\n        }\n        if (this.baseAxis == yAxis) {\n          if (stackX < minX) {\n            minX = stackX;\n          }\n          if (stackX > maxX) {\n            maxX = stackX;\n          }\n        }\n      }\n    }\n    // this is mainly for value axis to calculate total and perecent.total of each series category\n    xAxis.processSeriesDataItems();\n    yAxis.processSeriesDataItems();\n    var xAxisId = xAxis.uid;\n    var yAxisId = yAxis.uid;\n    if (this.xAxis instanceof ValueAxis && (minX == Infinity || maxX == -Infinity)) {\n      this._smin.setKey(xAxisId, undefined);\n      this._smax.setKey(xAxisId, undefined);\n      this.dispatchImmediately(\"selectionextremeschanged\");\n      return;\n    }\n    if (this.yAxis instanceof ValueAxis && (minY == Infinity || maxY == -Infinity)) {\n      this._smin.setKey(yAxisId, undefined);\n      this._smax.setKey(yAxisId, undefined);\n      this.dispatchImmediately(\"selectionextremeschanged\");\n      return;\n    }\n    if (!working) {\n      if (this._tmin.getKey(xAxisId) != minX || this._tmax.getKey(xAxisId) != maxX || this._tmin.getKey(yAxisId) != minY || this._tmax.getKey(yAxisId) != maxY) {\n        this._tmin.setKey(xAxisId, minX);\n        this._tmax.setKey(xAxisId, maxX);\n        this._tmin.setKey(yAxisId, minY);\n        this._tmax.setKey(yAxisId, maxY);\n        var stackedSeries = this.stackedSeries;\n        if (stackedSeries) {\n          if (stackedSeries.isDisposed()) {\n            this.stackedSeries = undefined;\n          } else {\n            stackedSeries.processValues(false);\n          }\n        }\n        this.dispatchImmediately(\"extremeschanged\");\n      }\n    }\n    if (startIndex != workingStartIndex || endIndex != workingEndIndex) {\n      minX = Infinity;\n      maxX = -Infinity;\n      minY = Infinity;\n      maxY = -Infinity;\n      for (var i = workingStartIndex; i < workingEndIndex; i++) {\n        var dataItem = dataItems.getIndex(i);\n        this.getStackValue(dataItem, working);\n        var stackX = dataItem.getValue(\"valueX\", \"stack\");\n        var stackY = dataItem.getValue(\"valueY\", \"stack\");\n        if (!working) {\n          stackX = dataItem.getValue(\"valueX\", \"stackTrue\");\n          stackY = dataItem.getValue(\"valueY\", \"stackTrue\");\n        }\n        minX = $math.min(dataItem.getMin(this._xValueFields, working, stackX), minX);\n        minY = $math.min(dataItem.getMin(this._yValueFields, working, stackY), minY);\n        maxX = $math.max(dataItem.getMax(this._xValueFields, working, stackX), maxX);\n        maxY = $math.max(dataItem.getMax(this._yValueFields, working, stackY), maxY);\n        // if it's stacked, pay attention to stack value\n        if (this.stacked) {\n          if (this.baseAxis == xAxis) {\n            if (stackY < minY) {\n              minY = stackY;\n            }\n            if (stackY > maxY) {\n              maxY = stackY;\n            }\n          }\n          if (this.baseAxis == yAxis) {\n            if (stackX < minX) {\n              minX = stackX;\n            }\n            if (stackX > maxX) {\n              maxX = stackX;\n            }\n          }\n        }\n      }\n    }\n    if (this.xAxis instanceof ValueAxis && (minX == Infinity || maxX == -Infinity)) {\n      this._smin.setKey(xAxisId, undefined);\n      this._smax.setKey(xAxisId, undefined);\n      this.dispatchImmediately(\"selectionextremeschanged\");\n      return;\n    }\n    if (this.yAxis instanceof ValueAxis && (minY == Infinity || maxY == -Infinity)) {\n      this._smin.setKey(yAxisId, undefined);\n      this._smax.setKey(yAxisId, undefined);\n      this.dispatchImmediately(\"selectionextremeschanged\");\n      return;\n    }\n    if (this._smin.getKey(xAxisId) != minX || this._smax.getKey(xAxisId) != maxX || this._smin.getKey(yAxisId) != minY || this._smax.getKey(yAxisId) != maxY) {\n      this._smin.setKey(xAxisId, minX);\n      this._smax.setKey(xAxisId, maxX);\n      this._smin.setKey(yAxisId, minY);\n      this._smax.setKey(yAxisId, maxY);\n      if (this.appeared || this.start != 0 || this.end != 1 || this.dataItems != this.mainDataSet) {\n        /// new, helps to handle issues with change percent\n        var changed = false;\n        if (yAxis instanceof ValueAxis && !(yAxis instanceof DateAxis)) {\n          var tmin = this._tmin.getKey(yAxisId);\n          if (!$type.isNumber(tmin) || (this.usesShowFields || this._dataSetChanged || xAxis instanceof DateAxis && xAxis.groupData && this.isShowing) && minY < tmin || this.stackedSeries && !this.isHidden && !working) {\n            this._tmin.setKey(yAxisId, minY);\n            changed = true;\n          }\n          var tmax = this._tmax.getKey(yAxisId);\n          if (!$type.isNumber(tmax) || (this.usesShowFields || this._dataSetChanged || xAxis instanceof DateAxis && xAxis.groupData && this.isShowing) && maxY > tmax || this.stackedSeries && !this.isHidden && !working) {\n            this._tmax.setKey(yAxisId, maxY);\n            changed = true;\n          }\n        }\n        if (xAxis instanceof ValueAxis && !(xAxis instanceof DateAxis)) {\n          var tmin = this._tmin.getKey(xAxisId);\n          if (!$type.isNumber(tmin) || (this.usesShowFields || this._dataSetChanged || yAxis instanceof DateAxis && yAxis.groupData && this.isShowing) && minX < tmin || this.stackedSeries && !this.isHidden && !working) {\n            this._tmin.setKey(xAxisId, minX);\n            changed = true;\n          }\n          var tmax = this._tmax.getKey(xAxisId);\n          if (!$type.isNumber(tmax) || (this.usesShowFields || this._dataSetChanged || yAxis instanceof DateAxis && yAxis.groupData && this.isShowing) && maxX > tmax || this.stackedSeries && !this.isHidden && !working) {\n            this._tmax.setKey(xAxisId, maxX);\n            changed = true;\n          }\n        }\n        if (changed) {\n          this.dispatchImmediately(\"extremeschanged\");\n        }\n        if (this.start == 0 && this.end == 1) {\n          // yes, its ok. otherwise min/max won't be updated when zooming out\n          this._dataSetChanged = false;\n        }\n        this.dispatchImmediately(\"selectionextremeschanged\");\n      }\n    }\n    if (!working && this.stacked) {\n      this.processValues(true);\n    }\n  };\n  /**\r\n   * Hides element's [[Tooltip]].\r\n   *\r\n   * @see {@link Tooltip}\r\n   */\n  XYSeries.prototype.hideTooltip = function (duration) {\n    _super.prototype.hideTooltip.call(this, duration);\n    this.returnBulletDefaultState();\n    this._prevTooltipDataItem = undefined;\n  };\n  /**\r\n   * Shows series tooltip at specific position.\r\n   *\r\n   * @param xPosition  X\r\n   * @param yPosition  Y\r\n   */\n  XYSeries.prototype.showTooltipAtPosition = function (xPosition, yPosition) {\n    var dataItem;\n    if (this.visible && !this.isHiding && !this.isShowing) {\n      var xAxis = this._xAxis.get();\n      var yAxis = this._yAxis.get();\n      if (xAxis == this.baseAxis) {\n        dataItem = xAxis.getSeriesDataItem(this, xAxis.toAxisPosition(xPosition), this.snapTooltip);\n      }\n      if (yAxis == this.baseAxis) {\n        dataItem = yAxis.getSeriesDataItem(this, yAxis.toAxisPosition(yPosition), this.snapTooltip);\n      }\n      var point = this.showTooltipAtDataItem(dataItem);\n      if (point) {\n        return point;\n      }\n      // so that if tooltip is shown on columns or bullets for it not to be hidden\n      if (!this.tooltipText && !this.tooltipHTML) {\n        return;\n      }\n    }\n    this.hideTooltip();\n  };\n  XYSeries.prototype.getAdjustedXLocation = function (dataItem, field, bulletLocationX) {\n    return dataItem.locations[field];\n  };\n  XYSeries.prototype.getAdjustedYLocation = function (dataItem, field, bulletLocationY) {\n    return dataItem.locations[field];\n  };\n  /**\r\n   * Shows series tooltip at specific dataItem.\r\n   *\r\n   * @param dataItem\r\n   */\n  XYSeries.prototype.showTooltipAtDataItem = function (dataItem) {\n    var e_1, _a;\n    var cursor = this.chart.cursor;\n    if (cursor && cursor.hideSeriesTooltipsOnSelection && cursor.selection.visible && cursor.downPoint) {\n      this.hideTooltip();\n      return;\n    }\n    this.returnBulletDefaultState(dataItem);\n    if (dataItem && dataItem.visible) {\n      this.updateLegendValue(dataItem);\n      if (this.cursorTooltipEnabled) {\n        this.tooltipDataItem = dataItem;\n        // todo: add tooltipXField and tooltipYField.\n        var tooltipXField = this.tooltipXField;\n        var tooltipYField = this.tooltipYField;\n        if ($type.hasValue(dataItem[tooltipXField]) && $type.hasValue(dataItem[tooltipYField])) {\n          var tooltipPoint = this.getPoint(dataItem, tooltipXField, tooltipYField, this.getAdjustedXLocation(dataItem, tooltipXField), this.getAdjustedYLocation(dataItem, tooltipYField));\n          if (tooltipPoint) {\n            if (this.chart.className == \"XYChart\" && (tooltipPoint.y < -1 || tooltipPoint.y > this.yAxis.pixelHeight + 1 || tooltipPoint.x < -1 || tooltipPoint.x > this.xAxis.pixelWidth + 1)) {\n              // void\n            } else {\n              this.tooltipX = tooltipPoint.x;\n              this.tooltipY = tooltipPoint.y;\n              if (this._prevTooltipDataItem != dataItem) {\n                this.dispatchImmediately(\"tooltipshownat\", {\n                  type: \"tooltipshownat\",\n                  target: this,\n                  dataItem: dataItem\n                });\n                this._prevTooltipDataItem = dataItem;\n              }\n              if (this.cursorHoverEnabled) {\n                try {\n                  for (var _b = __values(dataItem.sprites), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var sprite = _c.value;\n                    if (!sprite.parent.visible || sprite.isHidden || sprite.__disabled || sprite.disabled || sprite.isHiding) {} else {\n                      if (!sprite.interactions.isRealHover) {\n                        sprite.dispatchImmediately(\"over\");\n                        sprite.interactions.isRealHover = true;\n                      }\n                      sprite.isHover = true;\n                    }\n                  }\n                } catch (e_1_1) {\n                  e_1 = {\n                    error: e_1_1\n                  };\n                } finally {\n                  try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                  } finally {\n                    if (e_1) throw e_1.error;\n                  }\n                }\n              }\n              if (this.showTooltip()) {\n                return $utils.spritePointToSvg({\n                  x: tooltipPoint.x,\n                  y: tooltipPoint.y\n                }, this);\n              }\n              return;\n            }\n          }\n        }\n      }\n    } else {\n      this.updateLegendValue(dataItem, true);\n    }\n  };\n  /**\r\n   * Returns default state to bullets when tooltip is shown at some other data\r\n   * item or hidden\r\n   */\n  XYSeries.prototype.returnBulletDefaultState = function (dataItem) {\n    var e_2, _a;\n    if (this._prevTooltipDataItem && this._prevTooltipDataItem != dataItem) {\n      try {\n        for (var _b = __values(this._prevTooltipDataItem.sprites), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var sprite = _c.value;\n          if (!sprite.isDisposed()) {\n            var fireEvent = sprite.interactions.isRealHover;\n            sprite.isHover = false;\n            if (fireEvent) {\n              sprite.dispatchImmediately(\"out\");\n            }\n          } else {\n            this._prevTooltipDataItem = undefined;\n          }\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    }\n  };\n  XYSeries.prototype.shouldCreateBullet = function (dataItem, bulletTemplate) {\n    // use series xField/yField if bullet doesn't have fields set\n    var xField = bulletTemplate.xField;\n    if (!$type.hasValue(xField)) {\n      xField = this.xField;\n    }\n    var yField = bulletTemplate.yField;\n    if (!$type.hasValue(yField)) {\n      yField = this.yField;\n    }\n    if (this.xAxis instanceof ValueAxis && !dataItem.hasValue([xField]) || this.yAxis instanceof ValueAxis && !dataItem.hasValue([yField])) {\n      return false;\n    }\n    if (bulletTemplate.disabled) {\n      var disabledField = bulletTemplate.propertyFields.disabled;\n      var dataContext = dataItem.dataContext;\n      if (dataContext && dataContext[disabledField] === false) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  };\n  /**\r\n   * @ignore\r\n   */\n  XYSeries.prototype.updateTooltip = function () {\n    if (!this.hideTooltipWhileZooming && this.tooltip && !this.tooltip.isHidden && !this.isHiding && !this.isHidden && this.tooltipDataItem) {\n      this.showTooltipAtDataItem(this.tooltipDataItem);\n    }\n  };\n  /**\r\n   * @ignore\r\n   */\n  XYSeries.prototype.positionBullet = function (bullet) {\n    _super.prototype.positionBullet.call(this, bullet);\n    var dataItem = bullet.dataItem;\n    // use series xField/yField if bullet doesn't have fields set\n    var xField = bullet.xField;\n    if (!$type.hasValue(xField)) {\n      xField = this.xField;\n    }\n    var yField = bullet.yField;\n    if (!$type.hasValue(yField)) {\n      yField = this.yField;\n    }\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n    if (xAxis instanceof ValueAxis && !dataItem.hasValue([xField]) || yAxis instanceof ValueAxis && !dataItem.hasValue([yField])) {\n      bullet.visible = false;\n    } else {\n      var bulletLocationX = this.getBulletLocationX(bullet, xField);\n      var bulletLocationY = this.getBulletLocationY(bullet, yField);\n      var point = this.getPoint(dataItem, xField, yField, bulletLocationX, bulletLocationY);\n      if (point) {\n        var xOpenField = this.xOpenField;\n        var yOpenField = this.yOpenField;\n        var positionX = void 0;\n        var positionY = void 0;\n        if (xAxis instanceof DateAxis) {\n          if (!$type.isNumber(bulletLocationX)) {\n            bulletLocationX = 0;\n          }\n          var openValue = void 0;\n          var closeValue = dataItem.getWorkingValue(xField);\n          if (!xOpenField) {\n            if (xAxis == this.baseAxis) {\n              openValue = xAxis.baseValue;\n            }\n          } else {\n            openValue = dataItem.getWorkingValue(xOpenField);\n          }\n          if (!$type.isNumber(openValue)) {\n            openValue = closeValue;\n          }\n          var stack = dataItem.getValue(\"valueX\", \"stack\");\n          openValue += stack;\n          closeValue += stack;\n          if (openValue == closeValue) {\n            var baseInterval = xAxis.baseInterval;\n            var dateFormatter = xAxis.dateFormatter;\n            openValue = $time.round(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.firstDayOfWeek, dateFormatter.utc, undefined, dateFormatter.timezoneMinutes, dateFormatter.timezone).getTime();\n            closeValue = $time.add(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.utc).getTime();\n          }\n          var middleValue = void 0;\n          if (xAxis == this.baseAxis) {\n            middleValue = openValue + (closeValue - openValue) * bulletLocationX;\n          } else {\n            middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationX);\n          }\n          positionX = xAxis.valueToPosition(middleValue);\n        } else if (xAxis instanceof ValueAxis) {\n          if (!$type.isNumber(bulletLocationX)) {\n            bulletLocationX = 0;\n          }\n          var openValue = void 0;\n          var closeValue = dataItem.getWorkingValue(xField);\n          if (!xOpenField) {\n            openValue = xAxis.baseValue;\n          } else {\n            openValue = dataItem.getWorkingValue(xOpenField);\n          }\n          var stack = dataItem.getValue(\"valueX\", \"stack\");\n          openValue += stack;\n          closeValue += stack;\n          var middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationX);\n          positionX = xAxis.valueToPosition(middleValue);\n        } else if (xAxis instanceof CategoryAxis) {\n          var rightLocation = this.getAdjustedXLocation(dataItem, xField, bullet.locationX);\n          var leftLocation = this.getAdjustedXLocation(dataItem, xOpenField, bullet.locationX);\n          positionX = xAxis.categoryToPosition(dataItem[xField], rightLocation);\n          var openPositionX = void 0;\n          if (xOpenField) {\n            openPositionX = xAxis.categoryToPosition(dataItem[xOpenField], leftLocation);\n          }\n          if (!$type.isNumber(openPositionX)) {\n            openPositionX = 1;\n          }\n          positionX = openPositionX + (positionX - openPositionX) * bulletLocationX;\n        }\n        if (yAxis instanceof DateAxis) {\n          if (!$type.isNumber(bulletLocationY)) {\n            bulletLocationY = 0;\n          }\n          var openValue = void 0;\n          var closeValue = dataItem.getWorkingValue(yField);\n          if (!yOpenField) {\n            if (yAxis == this.baseAxis) {\n              openValue = yAxis.baseValue;\n            }\n          } else {\n            openValue = dataItem.getWorkingValue(yOpenField);\n          }\n          if (!$type.isNumber(openValue)) {\n            openValue = closeValue;\n          }\n          var stack = dataItem.getValue(\"valueY\", \"stack\");\n          openValue += stack;\n          closeValue += stack;\n          if (openValue == closeValue) {\n            var baseInterval = yAxis.baseInterval;\n            var dateFormatter = yAxis.dateFormatter;\n            openValue = $time.round(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.firstDayOfWeek, dateFormatter.utc, undefined, dateFormatter.timezoneMinutes, dateFormatter.timezone).getTime();\n            closeValue = $time.add(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.utc).getTime();\n          }\n          var middleValue = void 0;\n          if (yAxis == this.baseAxis) {\n            middleValue = openValue + (closeValue - openValue) * bulletLocationY;\n          } else {\n            middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationY);\n          }\n          positionY = yAxis.valueToPosition(middleValue);\n        } else if (yAxis instanceof ValueAxis) {\n          if (!$type.isNumber(bulletLocationY)) {\n            bulletLocationY = 0;\n          }\n          var openValue = void 0;\n          var closeValue = dataItem.getWorkingValue(yField);\n          if (!yOpenField) {\n            openValue = yAxis.baseValue;\n          } else {\n            openValue = dataItem.getWorkingValue(yOpenField);\n          }\n          var stack = dataItem.getValue(\"valueY\", \"stack\");\n          openValue += stack;\n          closeValue += stack;\n          var middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationY);\n          positionY = yAxis.valueToPosition(middleValue);\n        } else if (yAxis instanceof CategoryAxis) {\n          positionY = yAxis.categoryToPosition(dataItem[yField], bulletLocationY);\n          var topLocation = this.getAdjustedYLocation(dataItem, yField, bullet.locationY);\n          var bottomLocation = this.getAdjustedYLocation(dataItem, yOpenField, bullet.locationY);\n          positionY = yAxis.categoryToPosition(dataItem[yField], topLocation);\n          var openPositionY = void 0;\n          if (yOpenField) {\n            openPositionY = yAxis.categoryToPosition(dataItem[yOpenField], bottomLocation);\n          }\n          if (!$type.isNumber(openPositionY)) {\n            openPositionY = 1;\n          }\n          positionY = openPositionY + (positionY - openPositionY) * bulletLocationY;\n        }\n        bullet.visible = true;\n        this.positionBulletReal(bullet, positionX, positionY);\n      } else {\n        bullet.visible = false;\n      }\n    }\n  };\n  XYSeries.prototype.positionBulletReal = function (bullet, positionX, positionY) {\n    bullet.x = this.xAxis.renderer.positionToPoint(positionX, positionY).x;\n    bullet.y = this.yAxis.renderer.positionToPoint(positionY, positionX).y;\n  };\n  /**\r\n   * returns bullet x location\r\n   * @ignore\r\n   */\n  XYSeries.prototype.getBulletLocationX = function (bullet, field) {\n    var bulletLocation = bullet.locationX;\n    var dataItem = bullet.dataItem;\n    if (!$type.isNumber(bulletLocation)) {\n      bulletLocation = dataItem.workingLocations[field];\n    }\n    return bulletLocation;\n  };\n  /**\r\n   * Returns bullet x location\r\n   * @ignore\r\n   */\n  XYSeries.prototype.getBulletLocationY = function (bullet, field) {\n    var bulletLocation = bullet.locationY;\n    var dataItem = bullet.dataItem;\n    if (!$type.isNumber(bulletLocation)) {\n      bulletLocation = dataItem.workingLocations[field];\n    }\n    return bulletLocation;\n  };\n  /**\r\n   * This method must be called if you update Series' data fields that might\r\n   * affect stacking of the series.\r\n   *\r\n   * Since individual `dataField` changes are not being monitored, you need\r\n   * todo it manually for changes to take affect.\r\n   *\r\n   * @since 4.7.21\r\n   */\n  XYSeries.prototype.updateStacking = function () {\n    var _this = this;\n    this.invalidateDataItems();\n    if (this.chart) {\n      this.chart.series.each(function (series) {\n        if (series.baseAxis == _this.baseAxis) {\n          series.stackedSeries = undefined;\n          series.invalidateDataItems();\n          series.invalidateProcessedData();\n        }\n      });\n    }\n  };\n  Object.defineProperty(XYSeries.prototype, \"stacked\", {\n    /**\r\n     * @return Can be stacked?\r\n     */\n    get: function get() {\n      return this.getPropertyValue(\"stacked\");\n    },\n    /**\r\n     * Can items from this series be included into stacks?\r\n     *\r\n     * Note: proper stacking is only possible if series have the same number\r\n     * of data items. To ensure this, don't set data directly on series\r\n     * but do this on chart instead.\r\n     *\r\n     * @default false\r\n     * @param stacked  Can be stacked?\r\n     */\n    set: function set(stacked) {\n      if (this.setPropertyValue(\"stacked\", stacked, true)) {\n        this.updateStacking();\n        var xAxis = this.xAxis;\n        var yAxis = this.yAxis;\n        if (!stacked) {\n          var field_1;\n          if (xAxis != this.baseAxis && xAxis instanceof ValueAxis) {\n            field_1 = this.xField;\n          }\n          if (yAxis != this.baseAxis && yAxis instanceof ValueAxis) {\n            field_1 = this.yField;\n          }\n          if (field_1) {\n            this.dataItems.each(function (dataItem) {\n              dataItem.setCalculatedValue(field_1, 0, \"stack\");\n              dataItem.setCalculatedValue(field_1, 0, \"stackTrue\");\n            });\n          }\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"snapTooltip\", {\n    /**\r\n     * @return Should snap?\r\n     */\n    get: function get() {\n      return this.getPropertyValue(\"snapTooltip\");\n    },\n    /**\r\n     * Should the nearest tooltip be shown if no data item is found on the\r\n     * current cursor position? In order this to work, you should set snapTooltip = false on the series baseAxis.\r\n     *\r\n     * @default false\r\n     * @param value  Should snap?\r\n     */\n    set: function set(value) {\n      this.setPropertyValue(\"snapTooltip\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Shows hidden series.\r\n   *\r\n   * @param duration  Duration of reveal animation (ms)\r\n   * @return Animation\r\n   */\n  XYSeries.prototype.show = function (duration) {\n    var _this = this;\n    if (this.isHidden) {\n      if (this.appeared && this.xAxis instanceof DateAxis && this.xAxis.groupData) {\n        this._tmin.setKey(this.yAxis.uid, undefined);\n        this._tmax.setKey(this.yAxis.uid, undefined);\n      }\n      if (this.appeared && this.yAxis instanceof DateAxis && this.yAxis.groupData) {\n        this._tmin.setKey(this.xAxis.uid, undefined);\n        this._tmax.setKey(this.xAxis.uid, undefined);\n      }\n    }\n    var fields;\n    if (this.xAxis instanceof ValueAxis && this.xAxis != this.baseAxis) {\n      fields = this._xValueFields;\n    }\n    if (this.yAxis instanceof ValueAxis && this.yAxis != this.baseAxis) {\n      fields = this._yValueFields;\n    }\n    var startIndex = this.startIndex;\n    var endIndex = this.endIndex;\n    var delay = 0;\n    var interpolationDuration = this.defaultState.transitionDuration;\n    if ($type.isNumber(duration)) {\n      interpolationDuration = duration;\n    }\n    if (!options.animationsEnabled) {\n      interpolationDuration = 0;\n    }\n    var anim;\n    $iter.each($iter.indexed(this.dataItems.iterator()), function (a) {\n      var i = a[0];\n      var dataItem = a[1];\n      var realDuration = interpolationDuration;\n      if (i < _this.startIndex - 10 || i > _this.endIndex + 10) {\n        realDuration = 0;\n        delay = 0;\n      }\n      if (_this.sequencedInterpolation && realDuration > 0) {\n        delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\n      }\n      anim = dataItem.show(realDuration, delay, fields);\n    });\n    // other data sets\n    this.dataSets.each(function (key, dataSet) {\n      if (dataSet != _this.dataItems) {\n        dataSet.each(function (dataItem) {\n          dataItem.events.disable();\n          dataItem.show(0, 0, fields);\n          dataItem.events.enable();\n        });\n      }\n    });\n    if (this.mainDataSet != this.dataItems) {\n      this.mainDataSet.each(function (dataItem) {\n        dataItem.events.disable();\n        dataItem.show(0, 0, fields);\n        dataItem.events.enable();\n      });\n    }\n    var animation = _super.prototype.show.call(this, duration);\n    if (anim && !anim.isFinished()) {\n      animation = anim;\n    }\n    if (this.hidden) {\n      this.dispatchImmediately(\"selectionextremeschanged\");\n      this.hidden = false;\n    }\n    return animation;\n  };\n  /**\r\n   * Hides series.\r\n   *\r\n   * @param duration  Duration of hiding animation (ms)\r\n   * @return Animation\r\n   */\n  XYSeries.prototype.hide = function (duration) {\n    var _this = this;\n    var fields;\n    var value;\n    var xAxis = this.xAxis;\n    if (xAxis instanceof ValueAxis && xAxis != this.baseAxis) {\n      fields = this._xValueFields;\n      // animate to zero if 0 is within zoomMin/zoomMax\n      if (this.stacked || xAxis.minZoomed < xAxis.baseValue && xAxis.maxZoomed > xAxis.baseValue || this.stackedSeries) {\n        value = xAxis.baseValue;\n      } else {\n        value = xAxis.min;\n      }\n    }\n    var yAxis = this.yAxis;\n    if (yAxis instanceof ValueAxis && yAxis != this.baseAxis) {\n      fields = this._yValueFields;\n      // animate to zero if 0 is within zoomMin/zoomMax\n      if (this.stacked || yAxis.minZoomed < yAxis.baseValue && yAxis.maxZoomed > yAxis.baseValue || this.stackedSeries) {\n        value = yAxis.baseValue;\n      } else {\n        value = yAxis.min;\n      }\n    }\n    //if ($type.hasValue(fields)) {\n    var startIndex = this.startIndex;\n    var endIndex = this.endIndex;\n    var interpolationDuration = this.hiddenState.transitionDuration;\n    if ($type.isNumber(duration)) {\n      interpolationDuration = duration;\n    }\n    if (!options.animationsEnabled) {\n      interpolationDuration = 0;\n    }\n    var delay = 0;\n    var anim;\n    $iter.each($iter.indexed(this.dataItems.iterator()), function (a) {\n      var i = a[0];\n      var dataItem = a[1];\n      var realDuration = interpolationDuration;\n      if (i < _this.startIndex - 10 || i > _this.endIndex + 10) {\n        realDuration = 0;\n      }\n      if (realDuration == 0) {\n        dataItem.hide(0, 0, value, fields);\n      } else {\n        if (_this.sequencedInterpolation && realDuration > 0) {\n          delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\n        }\n        anim = dataItem.hide(realDuration, delay, value, fields);\n      }\n    });\n    // other data sets\n    this.dataSets.each(function (key, dataSet) {\n      if (dataSet != _this.dataItems) {\n        dataSet.each(function (dataItem) {\n          dataItem.events.disable();\n          dataItem.hide(0, 0, value, fields);\n          dataItem.events.enable();\n        });\n      }\n    });\n    if (this.mainDataSet != this.dataItems) {\n      this.mainDataSet.each(function (dataItem) {\n        dataItem.events.disable();\n        dataItem.hide(0, 0, value, fields);\n        dataItem.events.enable();\n      });\n    }\n    var animation = _super.prototype.hide.call(this, interpolationDuration);\n    if (animation && !animation.isFinished()) {\n      animation.delay(delay);\n    }\n    if (anim && !anim.isFinished()) {\n      animation = anim;\n    }\n    if (this.appeared) {\n      this.dispatch(\"selectionextremeschanged\");\n    }\n    // helps to avoid flicker. otherwise columns will show up at full size and only on next frame will animate from 0\n    this.validateDataElements();\n    //}\n    return animation;\n  };\n  /**\r\n   * [handleDataItemWorkingValueChange description]\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  XYSeries.prototype.handleDataItemWorkingValueChange = function (dataItem, name) {\n    _super.prototype.handleDataItemWorkingValueChange.call(this, dataItem, name);\n    // to calculate stack values\n    var axisSeries = this.baseAxis.series;\n    $iter.each(axisSeries.iterator(), function (series) {\n      if (series.stacked || series.stackedSeries) {\n        series.invalidateProcessedData();\n      }\n    });\n  };\n  /**\r\n   * [getStackValue description]\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description\r\n   * @param dataItem  Data item\r\n   */\n  XYSeries.prototype.getStackValue = function (dataItem, working) {\n    // todo: here wer stack x and y values only. question is - what should we do with other values, like openX, openY?\n    // if this series is not stacked or new stack begins, return.\n    var _this = this;\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n    if (!this.stacked || !xAxis || !yAxis) {\n      return;\n    } else {\n      // it might seem that it's better to go through base axis series, but we do not maintain the same order as in chart.series there.\n      var chart = this.chart;\n      var index = chart.series.indexOf(this);\n      var field_2;\n      if (xAxis != this.baseAxis && xAxis instanceof ValueAxis) {\n        field_2 = this.xField;\n      }\n      if (yAxis != this.baseAxis && yAxis instanceof ValueAxis) {\n        field_2 = this.yField;\n      }\n      if (!field_2) {\n        return;\n      }\n      //this is good for removing series, otherwise stack values will remain the same and chart won't pay atention when adding/removing series\t\t\t\n      dataItem.setCalculatedValue(field_2, 0, \"stack\");\n      dataItem.setCalculatedValue(field_2, 0, \"stackTrue\");\n      $iter.eachContinue(chart.series.range(0, index).backwards().iterator(), function (prevSeries) {\n        // stacking is only possible if both axes are the same\n        if (prevSeries.xAxis == xAxis && prevSeries.yAxis == yAxis && prevSeries.className == _this.className) {\n          // saving value\n          prevSeries.stackedSeries = _this;\n          var prevDataItem = prevSeries.dataItems.getIndex(dataItem.index); // indexes should match\n          if (prevDataItem && prevDataItem.hasValue(_this._xValueFields) && prevDataItem.hasValue(_this._yValueFields)) {\n            var value = dataItem.getValue(field_2);\n            var prevValue = void 0;\n            var prevStack = prevDataItem.getValue(field_2, \"stackTrue\");\n            if (prevStack == null) {\n              prevStack = 0;\n            }\n            var prevRealValue = prevDataItem.getValue(field_2) + prevStack;\n            prevValue = prevDataItem.getWorkingValue(field_2) + prevDataItem.getValue(field_2, \"stack\");\n            if (_this.stackToNegative) {\n              if (value >= 0 && prevRealValue >= 0 || value < 0 && prevRealValue < 0) {\n                dataItem.setCalculatedValue(field_2, prevValue, \"stack\");\n                dataItem.setCalculatedValue(field_2, prevRealValue, \"stackTrue\");\n                return false;\n              } else if (!prevSeries.stacked) {\n                return false;\n              }\n            } else {\n              dataItem.setCalculatedValue(field_2, prevValue, \"stack\");\n              dataItem.setCalculatedValue(field_2, prevRealValue, \"stackTrue\");\n              return false;\n            }\n          } else if (!prevSeries.stacked) {\n            return false;\n          }\n        }\n        return true;\n      });\n    }\n  };\n  Object.defineProperty(XYSeries.prototype, \"stackToNegative\", {\n    /**\r\n     * @return Stack to base line\r\n     */\n    get: function get() {\n      return this.getPropertyValue(\"stackToNegative\");\n    },\n    /**\r\n     * This setting indicates how negative values are treated in stacked stacked\r\n     * series.\r\n     *\r\n     * If set to `true` (default), negative values will stack on the base line.\r\n     *\r\n     * If set to `false`, negative value will stack in relation to the previous\r\n     * value in the stack.\r\n     *\r\n     * @since 4.9.34\r\n     * @param  value  Stack to base line\r\n     */\n    set: function set(value) {\n      this.setPropertyValue(\"stackToNegative\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"xField\", {\n    /**\r\n     * [xField description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @return [description]\r\n     */\n    get: function get() {\n      return this._xField;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"yField\", {\n    /**\r\n     * [yField description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @return [description]\r\n     */\n    get: function get() {\n      return this._yField;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"xOpenField\", {\n    /**\r\n     * [xOpenField description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @return [description]\r\n     */\n    get: function get() {\n      return this._xOpenField;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"yOpenField\", {\n    /**\r\n     * [yOpenField description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @return [description]\r\n     */\n    get: function get() {\n      return this._yOpenField;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"tooltipXField\", {\n    /**\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @return [description]\r\n     */\n    get: function get() {\n      if (this._tooltipXField) {\n        return this._tooltipXField;\n      }\n      return this._xField;\n    },\n    /**\r\n     * [tooltipXField description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param value [description]\r\n     */\n    set: function set(value) {\n      this._tooltipXField = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"tooltipYField\", {\n    /**\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @return [description]\r\n     */\n    get: function get() {\n      if (this._tooltipYField) {\n        return this._tooltipYField;\n      }\n      return this._yField;\n    },\n    /**\r\n     * [tooltipYField description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param value [description]\r\n     */\n    set: function set(value) {\n      this._tooltipYField = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Returns lowest value in the series for the specific axis.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param axis  Axis\r\n   * @return value\r\n   */\n  XYSeries.prototype.min = function (axis) {\n    return this._tmin.getKey(axis.uid);\n  };\n  /**\r\n   * Returns highest value in the series for the specific axis.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param axis  Axis\r\n   * @return value\r\n   */\n  XYSeries.prototype.max = function (axis) {\n    return this._tmax.getKey(axis.uid);\n  };\n  /**\r\n   * Returns lowest value in the series for the specific axis within current\r\n   * selection.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param axis  Axis\r\n   * @return value\r\n   */\n  XYSeries.prototype.selectionMin = function (axis) {\n    var value = this._smin.getKey(axis.uid);\n    // not good, because bad if there are no items with values in selection\n    //if (!$type.isNumber(value)) {\n    //value = this.min(axis);\n    //}\t\t\n    return value;\n  };\n  /**\r\n   * Returns highest value in the series for the specific axis within current\r\n   * selection.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param axis  Axis\r\n   * @return value\r\n   */\n  XYSeries.prototype.selectionMax = function (axis) {\n    var value = this._smax.getKey(axis.uid);\n    // not good, because bad if there are no items with values in selection\n    //if (!$type.isNumber(value)) {\n    //value = this.max(axis);\n    //}\n    return value;\n  };\n  /**\r\n   * Processes JSON-based config before it is applied to the object.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param config  Config\r\n   */\n  XYSeries.prototype.processConfig = function (config) {\n    if (config) {\n      // Set up base axes\n      if ($type.hasValue(config.baseAxis) && $type.isString(config.baseAxis)) {\n        if (this.map.hasKey(config.baseAxis)) {\n          config.baseAxis = this.map.getKey(config.baseAxis);\n        } else {\n          this.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.baseAxis + \"\\\" found for `baseAxis`.\");\n          delete config.baseAxis;\n        }\n      }\n      // Set up axes\n      if ($type.hasValue(config.xAxis) && $type.isString(config.xAxis)) {\n        if (this.map.hasKey(config.xAxis)) {\n          config.xAxis = this.map.getKey(config.xAxis);\n        } else {\n          this.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.xAxis + \"\\\" found for `xAxis`.\");\n          delete config.xAxis;\n        }\n      }\n      if ($type.hasValue(config.yAxis) && $type.isString(config.yAxis)) {\n        if (this.map.hasKey(config.yAxis)) {\n          config.yAxis = this.map.getKey(config.yAxis);\n        } else {\n          this.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.yAxis + \"\\\" found for `yAxis`.\");\n          delete config.yAxis;\n        }\n      }\n      // Set up axis ranges\n      if ($type.hasValue(config.axisRanges) && $type.isArray(config.axisRanges)) {\n        for (var i = 0, len = config.axisRanges.length; i < len; i++) {\n          var range = config.axisRanges[i];\n          if (!$type.hasValue(range.type)) {\n            range.type = \"AxisDataItem\";\n          }\n          if ($type.hasValue(range.axis) && $type.isString(range.axis) && this.map.hasKey(range.axis)) {\n            range.component = this.map.getKey(range.axis);\n          } else if ($type.hasValue(range.component) && $type.isString(range.component) && this.map.hasKey(range.component)) {\n            range.component = this.map.getKey(range.component);\n          }\n        }\n      }\n      // Parse date fields based on the series fields\n      if (!$type.hasValue(config.dataFields) || !$type.isObject(config.dataFields)) {\n        this.processingErrors.push(\"`dataFields` is not set for series [\" + (this.name || \"unnamed\") + \"]\");\n      }\n    }\n    _super.prototype.processConfig.call(this, config);\n  };\n  /**\r\n   * Returns an [[IPoint]] coordinates of the specific Serie's data point.\r\n   *\r\n   * @param    dataItem   Data item\r\n   * @param    xKey       Name of X data field\r\n   * @param    yKey       Name of Y data field\r\n   * @param    locationX  X location\r\n   * @param    locationY  Y location\r\n   * @param    stackKeyX  ?\r\n   * @param    stackKeyY  ?\r\n   * @returns             Coordinates\r\n   */\n  XYSeries.prototype.getPoint = function (dataItem, xKey, yKey, locationX, locationY, stackKeyX, stackKeyY) {\n    if (this.xAxis && this.yAxis) {\n      var x = this.xAxis.getX(dataItem, xKey, locationX);\n      var y = this.yAxis.getY(dataItem, yKey, locationY);\n      x = $math.fitToRange(x, -this._maxxX, this._maxxX); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\n      y = $math.fitToRange(y, -this._maxxY, this._maxxY); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\n      return {\n        x: x,\n        y: y\n      };\n    }\n  };\n  /**\r\n   * Updates item reader text based on the type and set up of axis.\r\n   */\n  XYSeries.prototype.updateItemReaderText = function () {\n    // We do not want to overwrite this if `itemReaderText` was changed by\n    // user code.\n    if (this._itemReaderTextChanged) {\n      return;\n    }\n    var text = \"\";\n    $object.each(this.dataFields, function (key, val) {\n      text += \"{\" + key + \"} \";\n    });\n    this.itemReaderText = text;\n    this._itemReaderTextChanged = false;\n  };\n  Object.defineProperty(XYSeries.prototype, \"cursorTooltipEnabled\", {\n    /**\r\n     * @return Display tooltip?\r\n     */\n    get: function get() {\n      return this.getPropertyValue(\"cursorTooltipEnabled\");\n    },\n    /**\r\n     * Indicates if series should display a tooltip for chart's cursor.\r\n     *\r\n     * If set to `true` (default), the tooltips set for all series item's\r\n     * elements like columns and bullets will be automatically shown\r\n     * when [[XYCursor]] passes over category/date, even if its not hovered\r\n     * directly over the item.\r\n     *\r\n     * Set this to `false` to disable such behavior and display item-specific\r\n     * tooltips only when hovered directly over them\r\n     *\r\n     * @default true\r\n     * @param value Display tooltip?\r\n     */\n    set: function set(value) {\n      this.setPropertyValue(\"cursorTooltipEnabled\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"cursorHoverEnabled\", {\n    /**\r\n     * @return Hover enabled?\r\n     */\n    get: function get() {\n      return this.getPropertyValue(\"cursorHoverEnabled\");\n    },\n    /**\r\n     * Indicates if series should apply hover state on bullets/columns/etc when\r\n     * cursor is over the data item.\r\n     *\r\n     * If set to `true` (default) and chart cursor is enabled on th chart,\r\n     * hovering over date/category will trigger hover states on related Series\r\n     * items like bullets and columns.\r\n     *\r\n     * @default true\r\n     * @since 4.2.2\r\n     * @param  value  Hover enabled?\r\n     */\n    set: function set(value) {\n      this.setPropertyValue(\"cursorHoverEnabled\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"excludeFromTotal\", {\n    /**\r\n     * @return Exclude from totals?\r\n     */\n    get: function get() {\n      return this.getPropertyValue(\"excludeFromTotal\");\n    },\n    /**\r\n     * Indicates if series' values should be excluded when calculating totals.\r\n     *\r\n     * @default false\r\n     * @since 4.4.9\r\n     * @param  value  Exclude from totals?\r\n     */\n    set: function set(value) {\n      this.setPropertyValue(\"excludeFromTotal\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"hideTooltipWhileZooming\", {\n    /**\r\n     * @return Hide tooltip while zooming?\r\n     */\n    get: function get() {\n      return this.getPropertyValue(\"hideTooltipWhileZooming\");\n    },\n    /**\r\n     * Indicates if series' tooltip should be hidden while series axis range is\r\n     * animating (zooming).\r\n     *\r\n     * @default true\r\n     * @since 4.7.16\r\n     * @param  value  Hide tooltip while zooming?\r\n     */\n    set: function set(value) {\n      this.setPropertyValue(\"hideTooltipWhileZooming\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"maskBullets\", {\n    /**\r\n     * @return Mask bullets?\r\n     */\n    get: function get() {\n      return this.getPropertyValue(\"maskBullets\");\n    },\n    /**\r\n     * Indicates if series' bullets should be masked.\r\n     *\r\n     * @default true\r\n     * @since 4.7.17\r\n     * @param  value  Mask bullets?\r\n     */\n    set: function set(value) {\n      this.setPropertyValue(\"maskBullets\", value);\n      var chart = this.chart;\n      if (chart) {\n        if (value) {\n          this.bulletsContainer.parent = chart.bulletsContainer;\n        } else {\n          this.bulletsContainer.parent = chart.axisBulletsContainer;\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Copies all properties from another instance of [[Series]].\r\n   *\r\n   * @param source  Source series\r\n   */\n  XYSeries.prototype.copyFrom = function (source) {\n    this.groupFields = $utils.copyProperties(source.groupFields, {});\n    _super.prototype.copyFrom.call(this, source);\n  };\n  /**\r\n   * Destroys this object and all related data.\r\n   */\n  XYSeries.prototype.dispose = function () {\n    if (this.scrollbarSeries) {\n      this.scrollbarSeries.dispose();\n    }\n    _super.prototype.dispose.call(this);\n  };\n  return XYSeries;\n}(Series);\nexport { XYSeries };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"XYSeries\"] = XYSeries;\nregistry.registeredClasses[\"XYSeriesDataItem\"] = XYSeriesDataItem;","map":{"version":3,"names":["Series","SeriesDataItem","Sprite","visualProperties","ValueAxis","Dictionary","MutableValueDisposer","XYChart","CategoryAxis","DateAxis","registry","$iter","$math","$utils","$type","$time","$array","$object","$path","options","XYSeriesDataItem","_super","__extends","_this","call","className","values","customValue","valueX","stack","valueY","openValueX","openValueY","dateX","dateY","openDateX","openDateY","setLocation","applyTheme","Object","defineProperty","prototype","get","value","set","setValue","getDate","date","setDate","categories","categoryX","category","setCategory","categoryY","openCategoryX","openCategoryY","getMin","fields","working","stackValue","min","isNumber","each","field","getWorkingValue","getValue","getMax","max","XYSeries","groupFields","_xAxis","_yAxis","_xValueFields","_yValueFields","_baseInterval","dataGrouped","usesShowFields","_dataSetChanged","_maxxX","_maxxY","_propertiesChanged","outOfRange","isMeasured","cursorTooltipEnabled","cursorHoverEnabled","excludeFromTotal","mainContainer","mask","setElement","paper","add","stacked","snapTooltip","_showBullets","tooltip","pointerOrientation","properties","stackToNegative","hideTooltipWhileZooming","setPropertyValue","events","on","returnBulletDefaultState","undefined","_disposers","push","observe","inited","legendDataItem","childrenCreated","chart","legend","invalidateDataItems","invalidate","applyInternalDefaults","hasValue","readerTitle","language","translate","createDataItem","resetExtremes","_tmin","clear","_tmax","_smin","_smax","dataChangeUpdate","_currentDataSetId","xAxis","seriesDataChangeUpdate","yAxis","validateData","dataFields","valueYShow","openValueXShow","openValueYShow","defineFields","data","length","updateItemReaderText","_xField","_yField","Error","name","uid","isHidden","hide","processDataItem","dataItem","dataContext","processSeriesDataItem","setInitialWorkingValues","e","_chart","raiseCriticalError","updateDataItem","disposeData","dataItemsX","dataItemsByAxis","getKey","clearCatAxis","dataItemsY","axis","dataItems","seriesDataItems","xAxisFieldName","axisFieldName","xField","xOpenField","capitalize","yAxisFieldName","yField","yOpenField","_xOpenField","_yOpenField","baseAxis","addValueField","indexOf","setCategoryAxisField","setDateAxisField","afterDraw","createMask","path_1","getMaskPath","axisRanges","iterator","range","axisFill","fillPath","validate","path","rectToPath","x","y","width","axisLength","height","getAxisField","validateDataItems","plotContainer","maxWidth","maxHeight","updateAxisBySeries","postProcessSeriesDataItems","validateDataRange","dataRangeInvalid","invalid","pixelY","pixelX","minBulletDistance","endIndex","startIndex","updateTooltip","groupData","maskBullets","leftAxesContainer","layout","rightAxesContainer","bulletsContainer","renderer","gridContainer","topAxesContainer","bottomAxesContainer","xAxes","getIndex","setXAxis","oldAxis","removeKey","dispose","series","removeValue","registerSeries","setKey","invalidateData","yAxes","setYAxis","handleYAxisSet","_baseAxis","addData","rawDataItem","removeCount","skipRaw","scrollbarSeries","_parseDataFrom","setData","setDataSet","id","changed","_prevStartIndex","_prevEndIndex","_startIndex","_endIndex","appeared","processValues","getTime","dispatch","minX","Infinity","maxX","minY","maxY","workingStartIndex","workingEndIndex","i","getStackValue","stackX","stackY","processSeriesDataItems","xAxisId","yAxisId","dispatchImmediately","stackedSeries","isDisposed","start","end","mainDataSet","tmin","isShowing","tmax","hideTooltip","duration","_prevTooltipDataItem","showTooltipAtPosition","xPosition","yPosition","visible","isHiding","getSeriesDataItem","toAxisPosition","point","showTooltipAtDataItem","tooltipText","tooltipHTML","getAdjustedXLocation","bulletLocationX","locations","getAdjustedYLocation","bulletLocationY","cursor","hideSeriesTooltipsOnSelection","selection","downPoint","updateLegendValue","tooltipDataItem","tooltipXField","tooltipYField","tooltipPoint","getPoint","pixelHeight","pixelWidth","tooltipX","tooltipY","type","target","_b","__values","sprites","_c","next","done","sprite","parent","__disabled","disabled","interactions","isRealHover","isHover","showTooltip","spritePointToSvg","fireEvent","shouldCreateBullet","bulletTemplate","disabledField","propertyFields","positionBullet","bullet","getBulletLocationX","getBulletLocationY","positionX","positionY","openValue","closeValue","baseValue","baseInterval","dateFormatter","round","Date","timeUnit","count","firstDayOfWeek","utc","timezoneMinutes","timezone","middleValue","valueToPosition","rightLocation","locationX","leftLocation","categoryToPosition","openPositionX","topLocation","locationY","bottomLocation","openPositionY","positionBulletReal","positionToPoint","bulletLocation","workingLocations","updateStacking","invalidateProcessedData","getPropertyValue","field_1","setCalculatedValue","show","delay","interpolationDuration","defaultState","transitionDuration","animationsEnabled","anim","indexed","a","realDuration","sequencedInterpolation","sequencedInterpolationDelay","dataSets","key","dataSet","disable","enable","animation","isFinished","hidden","minZoomed","maxZoomed","hiddenState","validateDataElements","handleDataItemWorkingValueChange","axisSeries","index","field_2","eachContinue","backwards","prevSeries","prevDataItem","prevValue","prevStack","prevRealValue","_tooltipXField","_tooltipYField","selectionMin","selectionMax","processConfig","config","isString","map","hasKey","processingErrors","isArray","len","component","isObject","xKey","yKey","stackKeyX","stackKeyY","getX","getY","fitToRange","_itemReaderTextChanged","text","val","itemReaderText","axisBulletsContainer","copyFrom","source","copyProperties","registeredClasses"],"sources":["../../../../../src/.internal/charts/series/XYSeries.ts"],"sourcesContent":["/**\r\n * XY series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Series, SeriesDataItem, ISeriesProperties, ISeriesDataFields, ISeriesAdapters, ISeriesEvents } from \"./Series\";\r\nimport { Sprite, visualProperties } from \"../../core/Sprite\";\r\nimport { Axis } from \"../axes/Axis\";\r\nimport { AxisRenderer } from \"../axes/AxisRenderer\";\r\nimport { ValueAxis } from \"../axes/ValueAxis\";\r\nimport { Dictionary } from \"../../core/utils/Dictionary\";\r\nimport { List } from \"../../core/utils/List\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { XYChart } from \"../types/XYChart\";\r\nimport { XYCursor } from \"../cursors/XYCursor\";\r\nimport { CategoryAxis } from \"../axes/CategoryAxis\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { DateAxis } from \"../axes/DateAxis\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\nimport { CalculatedValue } from \"../../core/Component\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $time from \"../../core/utils/Time\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport { ITimeInterval } from \"../../core/defs/ITimeInterval\";\r\nimport { options } from \"../../core/Options\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[XYSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class XYSeriesDataItem extends SeriesDataItem {\r\n\r\n\t/**\r\n\t * [_minX description]\r\n\t *\r\n\t * @todo Descripion\r\n\t */\r\n\tprotected _minX: number;\r\n\r\n\t/**\r\n\t * [_maxX description]\r\n\t *\r\n\t * @todo Descripion\r\n\t */\r\n\tprotected _maxX: number;\r\n\r\n\t/**\r\n\t * [_minY description]\r\n\t *\r\n\t * @todo Descripion\r\n\t */\r\n\tprotected _minY: number;\r\n\r\n\t/**\r\n\t * [_maxY description]\r\n\t *\r\n\t * @todo Descripion\r\n\t */\r\n\tprotected _maxY: number;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t * \r\n\t * @ignore\r\n\t */\r\n\tpublic _component!: XYSeries;\r\n\r\n\t/**\r\n\t * References to any aggregate data items this data item is part of.\r\n\t *\r\n\t * @ignore\r\n\t * @since 4.7.0\r\n\t */\r\n\tpublic groupDataItems: this[];\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"XYSeriesDataItem\";\r\n\r\n\t\tthis.values.customValue = {};\r\n\r\n\t\tthis.values.valueX = { stack: 0 };\r\n\t\tthis.values.valueY = { stack: 0 };\r\n\t\tthis.values.openValueX = {};\r\n\t\tthis.values.openValueY = {};\r\n\r\n\t\tthis.values.dateX = {};\r\n\t\tthis.values.dateY = {};\r\n\t\tthis.values.openDateX = {};\r\n\t\tthis.values.openDateY = {};\r\n\r\n\t\tthis.setLocation(\"dateX\", 0.5, 0);\r\n\t\tthis.setLocation(\"dateY\", 0.5, 0);\r\n\r\n\t\tthis.setLocation(\"categoryX\", 0.5, 0);\r\n\t\tthis.setLocation(\"categoryY\", 0.5, 0);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Item's numeric value on X value axis.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set valueX(value: number) {\r\n\t\tthis.setValue(\"valueX\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get valueX(): number {\r\n\t\treturn this.values.valueX.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's custom numeric value.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set customValue(value: number) {\r\n\t\tthis.setValue(\"customValue\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get customValue(): number {\r\n\t\treturn this.values.customValue.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's numeric value on Y value axis.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set valueY(value: number) {\r\n\t\tthis.setValue(\"valueY\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get valueY(): number {\r\n\t\treturn this.values.valueY.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's date value on X date-based axis.\r\n\t *\r\n\t * @param date  Date\r\n\t */\r\n\tpublic set dateX(date: Date) {\r\n\t\tthis.setDate(\"dateX\", date);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Date\r\n\t */\r\n\tpublic get dateX(): Date {\r\n\t\treturn this.getDate(\"dateX\");\r\n\t}\r\n\r\n\t/**\r\n\t * Item's date value on Y date-based axis.\r\n\t *\r\n\t * @param date  Date\r\n\t */\r\n\tpublic set dateY(date: Date) {\r\n\t\tthis.setDate(\"dateY\", date);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Date\r\n\t */\r\n\tpublic get dateY(): Date {\r\n\t\treturn this.getDate(\"dateY\");\r\n\t}\r\n\r\n\t/**\r\n\t * Item's category on X category axis.\r\n\t *\r\n\t * @param category  Category\r\n\t */\r\n\tpublic set categoryX(category: string) {\r\n\t\tthis.setCategory(\"categoryX\", category);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Category\r\n\t */\r\n\tpublic get categoryX(): string {\r\n\t\treturn this.categories.categoryX;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's category on Y category axis.\r\n\t *\r\n\t * @param category  Category\r\n\t */\r\n\tpublic set categoryY(category: string) {\r\n\t\tthis.setCategory(\"categoryY\", category);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Category\r\n\t */\r\n\tpublic get categoryY(): string {\r\n\t\treturn this.categories.categoryY;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's open numeric value on X value axis.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set openValueX(value: number) {\r\n\t\tthis.setValue(\"openValueX\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get openValueX(): number {\r\n\t\treturn this.values.openValueX.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's open numeric value on Y value axis.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set openValueY(value: number) {\r\n\t\tthis.setValue(\"openValueY\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get openValueY(): number {\r\n\t\treturn this.values.openValueY.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's open date value on X date-based axis.\r\n\t *\r\n\t * @param date  Date\r\n\t */\r\n\tpublic set openDateX(date: Date) {\r\n\t\tthis.setDate(\"openDateX\", date);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Date\r\n\t */\r\n\tpublic get openDateX(): Date {\r\n\t\treturn this.getDate(\"openDateX\");\r\n\t}\r\n\r\n\t/**\r\n\t * Item's open date value on Y date-based axis.\r\n\t *\r\n\t * @param date  Date\r\n\t */\r\n\tpublic set openDateY(date: Date) {\r\n\t\tthis.setDate(\"openDateY\", date);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Date\r\n\t */\r\n\tpublic get openDateY(): Date {\r\n\t\treturn this.getDate(\"openDateY\");\r\n\t}\r\n\r\n\t/**\r\n\t * Item's open category on X category axis.\r\n\t *\r\n\t * @param category  Category\r\n\t */\r\n\tpublic set openCategoryX(category: string) {\r\n\t\tthis.setCategory(\"openCategoryX\", category);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Category\r\n\t */\r\n\tpublic get openCategoryX(): string {\r\n\t\treturn this.categories.openCategoryX;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's open category on Y category axis.\r\n\t *\r\n\t * @param category  Category\r\n\t */\r\n\tpublic set openCategoryY(category: string) {\r\n\t\tthis.setCategory(\"openCategoryY\", category);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Category\r\n\t */\r\n\tpublic get openCategoryY(): string {\r\n\t\treturn this.categories.openCategoryY;\r\n\t}\r\n\r\n\t/**\r\n\t * Return smallest value out of all item's value fields.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param fields      Fields to check in\r\n\t * @param working     Include working (temporary) values\r\n\t * @param stackValue  If item is in a stack, the value item starts as\r\n\t * @return Value\r\n\t */\r\n\tpublic getMin(fields: string[], working?: boolean, stackValue?: number): number {\r\n\t\t//if (this.visible) {  // dumped because of non smooth zooming\r\n\t\tlet min: number;\r\n\r\n\t\tif (!$type.isNumber(stackValue)) {\r\n\t\t\tstackValue = 0;\r\n\t\t}\r\n\r\n\t\t$array.each(fields, (field) => {\r\n\t\t\tlet value: number;\r\n\r\n\t\t\tif (working) {\r\n\t\t\t\tvalue = this.getWorkingValue(field);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvalue = this.getValue(field);\r\n\t\t\t}\r\n\r\n\t\t\tvalue += stackValue;\r\n\r\n\t\t\tif (value < min || !$type.isNumber(min)) {\r\n\t\t\t\tmin = value;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn min;\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * Return biggest value out of all item's value fields.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param fields      Fields to check in\r\n\t * @param working     Include working (temporary) values\r\n\t * @param stackValue  If item is in a stack, the value item starts as\r\n\t * @return Value\r\n\t */\r\n\tpublic getMax(fields: string[], working?: boolean, stackValue?: number): number {\r\n\t\t//if (this.visible) { // dumped because of non smooth zooming\r\n\t\tlet max: number;\r\n\r\n\t\tif (!$type.isNumber(stackValue)) {\r\n\t\t\tstackValue = 0;\r\n\t\t}\r\n\r\n\t\t$array.each(fields, (field) => {\r\n\t\t\tlet value: number;\r\n\r\n\t\t\tif (working) {\r\n\t\t\t\tvalue = this.getWorkingValue(field);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvalue = this.getValue(field);\r\n\t\t\t}\r\n\r\n\t\t\tvalue += stackValue;\r\n\r\n\t\t\tif (value > max || !$type.isNumber(max)) {\r\n\t\t\t\tmax = value;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn max;\r\n\t\t//}\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * Defines property set for a [[XYSeries]] tooltip event that contains information about dataItem\r\n */\r\nexport type XYSeriesTooltipEvent = {\r\n\r\n\t/**\r\n\t * Shift in coordinates after dragging.\r\n\t */\r\n\tdataItem: XYSeriesDataItem;\r\n};\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[XYSeries]].\r\n */\r\nexport interface IXYSeriesDataFields extends ISeriesDataFields {\r\n\r\n\t/**\r\n\t * Name of the field in data that holds numeric value for horizontal axis.\r\n\t */\r\n\tvalueX?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds numeric value for vertical axis.\r\n\t */\r\n\tvalueY?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds category for horizontal axis.\r\n\t */\r\n\tcategoryX?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds category for vertical axis.\r\n\t */\r\n\tcategoryY?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds date for horizontal axis.\r\n\t */\r\n\tdateX?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds date for vertical axis.\r\n\t */\r\n\tdateY?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds open numeric value for horizontal\r\n\t * axis.\r\n\t */\r\n\topenValueX?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds open numeric value for vertical\r\n\t * axis.\r\n\t */\r\n\topenValueY?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds open category for horizontal axis.\r\n\t */\r\n\topenCategoryX?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds open category for vertical axis.\r\n\t */\r\n\topenCategoryY?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds open date for horizontal axis.\r\n\t */\r\n\topenDateX?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds open date for vertical axis.\r\n\t */\r\n\topenDateY?: string;\r\n\r\n\t/**\r\n\t * Which calculated field to use to use as a horizontal axis value for the\r\n\t * item.\r\n\t */\r\n\tvalueXShow?: CalculatedValue;\r\n\r\n\t/**\r\n\t * Which calculated field to use to use as a vertical axis value for the\r\n\t * item.\r\n\t */\r\n\tvalueYShow?: CalculatedValue;\r\n\r\n\t/**\r\n\t * Which calculated field to use to use as a horizontal axis open value for\r\n\t * the item.\r\n\t */\r\n\topenValueXShow?: CalculatedValue;\r\n\r\n\t/**\r\n\t * Which calculated field to use to use as a vertical axis open value for\r\n\t * the item.\r\n\t */\r\n\topenValueYShow?: CalculatedValue;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds numeric value for some custom data.\r\n\t */\r\n\tcustomValue?: string;\r\n}\r\n\r\n\r\n/**\r\n * Defines types of the aggregate value.\r\n *\r\n * @since 4.7.0\r\n */\r\nexport type GroupField = \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\";\r\n\r\n/**\r\n * Defines data fields that can be calculated for aggregate values.\r\n * \r\n * @since 4.7.0\r\n */\r\nexport interface IXYSeriesGroupFields {\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `valueX` data field.\r\n\t *\r\n\t * @default \"close\"\r\n\t */\r\n\tvalueX?: GroupField;\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `valueY` data field.\r\n\t * \r\n\t * @default \"close\"\r\n\t */\r\n\tvalueY?: GroupField;\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `customValue` value data field.\r\n\t * \r\n\t * @default \"close\"\r\n\t */\r\n\tcustomValue?: GroupField;\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `openValueX` data field.\r\n\t * \r\n\t * @default \"open\"\r\n\t */\r\n\topenValueX?: GroupField;\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `openValueY` data field.\r\n\t * \r\n\t * @default \"open\"\r\n\t */\r\n\topenValueY?: GroupField;\r\n}\r\n\r\n/**\r\n * Defines properties for [[XYSeries]].\r\n */\r\nexport interface IXYSeriesProperties extends ISeriesProperties {\r\n\r\n\t/**\r\n\t * Can items from this series be included into stacks?\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tstacked?: boolean;\r\n\r\n\t/**\r\n\t * Should the nearest tooltip be shown if no data item is found on the\r\n\t * current cursor position\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tsnapTooltip?: boolean;\r\n\r\n\t/**\r\n\t * Indicates if series should display a tooltip for chart's cursor.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tcursorTooltipEnabled?: boolean;\r\n\r\n\t/**\r\n\t * Indicates if series should apply hover state on bullets/columns/etc when\r\n\t * cursor is over the data item.\r\n\t * \r\n\t * @default true\r\n\t */\r\n\tcursorHoverEnabled?: boolean;\r\n\r\n\t/**\r\n\t * Indicates if series' values should be excluded when calculating totals.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\texcludeFromTotal?: boolean;\r\n\r\n\r\n\t/**\r\n\t * Indicates if series' tooltip should be hidden while series axis range is\r\n\t * animating (zooming)\r\n\t *\r\n\t * @since 4.7.16\r\n\t * @default true\r\n\t */\r\n\thideTooltipWhileZooming?: boolean;\r\n\r\n\t/**\r\n\t * Should series bullets be masked?\r\n\t * @default true\r\n\t * @since 4.7.17\r\n\t */\r\n\tmaskBullets?: boolean;\r\n\r\n\t/**\r\n\t * [boolean description]\r\n\t *\r\n\t * @since 4.9.34\r\n\t * @default true\r\n\t */\r\n\tstackToNegative?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[XYSeries]].\r\n */\r\nexport interface IXYSeriesEvents extends ISeriesEvents {\r\n\t/**\r\n\t * Invoked when series tooltip was shown on some particular data item\r\n\t */\r\n\ttooltipshownat: XYSeriesTooltipEvent;\r\n}\r\n\r\n/**\r\n * Defines adapters for [[XYSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IXYSeriesAdapters extends ISeriesAdapters, IXYSeriesProperties {\r\n\r\n\t/**\r\n\t * Applied to a source value that is being used to calculate aggregate values\r\n\t * for a grouped data item.\r\n\t * \r\n\t * applied only if `groupData = true` is set on the related `DateAxis`.\r\n\t *\r\n\t * @since 4.9.35\r\n\t * @see {@link https://www.amcharts.com/docs/v4/tutorials/using-custom-functions-for-data-item-grouping/} for more information\r\n\t */\r\n\tgroupValue: {\r\n\t\tdataItem: XYSeriesDataItem,\r\n\t\tinterval: ITimeInterval,\r\n\t\tdataField: IXYSeriesDataFields,\r\n\t\tdate: Date,\r\n\t\tvalue: number\r\n\t}\r\n\r\n\t/**\r\n\t * Applied to a calculated aggregate data item and its values, so that\r\n\t * specific logic can be applied to calculation of derivative values.\r\n\t *\r\n\t * User's code needs to modify specific value in `values` object, most\r\n\t * probably `close` as it's the default grouping field.\r\n\t * \r\n\t * Applied only * if `groupData = true` is set on the related `DateAxis`.\r\n\t *\r\n\t * @since 4.9.36\r\n\t * @see {@link https://www.amcharts.com/docs/v4/tutorials/using-custom-functions-for-data-item-grouping/} for more information\r\n\t */\r\n\tgroupDataItem: {\r\n\t\tdataItem: XYSeriesDataItem,\r\n\t\tinterval: ITimeInterval,\r\n\t\tdataField: IXYSeriesDataFields,\r\n\t\tdate: Date,\r\n\t\tvalue: number\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines Series for [[XYChart]].\r\n *\r\n * @see {@link IXYSeriesEvents} for a list of available Events\r\n * @see {@link IXYSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class XYSeries extends Series {\r\n\r\n\t/**\r\n\t * Defines type of the group fields.\r\n\t * \r\n\t * @ignore\r\n\t * @since 4.7.0\r\n\t */\r\n\tpublic _groupFields: IXYSeriesGroupFields;\r\n\r\n\t/**\r\n\t * Indicates which of the series' `dataFields` to calculate aggregate values\r\n\t * for.\r\n\t *\r\n\t * Available data fields for all [[XYSeries]] are:\r\n\t * `valueX`, `valueY`, `openValueX`, and `openValueY`.\r\n\t *\r\n\t * [[CandlestickSeries]] adds:\r\n\t * `lowValueX`, `lowValueY`, `highValueX`, and `highValueY`.\r\n\t *\r\n\t * Available options:\r\n\t * `\"open\"`, `\"close\"`, `\"low\"`, `\"high\"`, `\"average\"`, `\"sum\"`.\r\n\t *\r\n\t * Defaults are as follows:\r\n\t * * `valueX`: `\"close\"`\r\n\t * * `valueY`: `\"close\"`\r\n\t * * `openValueX`: `\"open\"`\r\n\t * * `openValueY`: `\"open\"`\r\n\t * * `lowValueX`: `\"low\"`\r\n\t * * `lowValueY`: `\"low\"`\r\n\t * * `highValueX`: `\"high\"`\r\n\t * * `highValueY`: `\"high\"`\r\n\t *\r\n\t * Is required only if data being plotted on a `DateAxis` and\r\n\t * its `groupData` is set to `true`.\r\n\t *\r\n\t * ```TypeScript\r\n\t * let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n\t * dateAxis.groupData = true;\r\n\t *\r\n\t * let valueAxis = chart.xAxes.push(new am4charts.valueAxis());\r\n\t *\r\n\t * let series = chart.series.push(new am4charts.LineSeries());\r\n\t * series.dataFields.dateX = \"date\";\r\n\t * series.dataFields.valueY = \"value\";\r\n\t * series.groupFields.valueY = \"average\";\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * var dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n\t * dateAxis.groupData = true;\r\n\t *\r\n\t * var valueAxis = chart.xAxes.push(new am4charts.valueAxis());\r\n\t *\r\n\t * var series = chart.series.push(new am4charts.LineSeries());\r\n\t * series.dataFields.dateX = \"date\";\r\n\t * series.dataFields.valueY = \"value\";\r\n\t * series.groupFields.valueY = \"average\";\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"xAxes\": [{\r\n\t *     \"type\": \"DateAxis\",\r\n\t *     \"groupData\": true\r\n\t *   }],\r\n\t *   \"yAxes\": [{\r\n\t *     \"type\": \"ValueAxis\"\r\n\t *   }],\r\n\t *   \"series\": [{\r\n\t *     \"type\": \"LineSeries\",\r\n\t *     \"dataFields\": {\r\n\t *       \"dateX\": \"date\",\r\n\t *       \"valueY\": \"value\"\r\n\t *     },\r\n\t *     \"groupFields\": {\r\n\t *       \"valueY\": \"average\"\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * The above setup will ensure, that if there are many data items within\r\n\t * selected range, they will be grouped into aggregated data points, using\r\n\t * average value of all the values.\r\n\t *\r\n\t * For example if we have 2 years worth of daily data (~700 data items), when\r\n\t * fully zoomed out, the chart would show ~100 data items instead: one for\r\n\t * each week in those two years.\r\n\t *\r\n\t * Grouping will occur automatically, based on current selection range, and\r\n\t * will change dynamically when user zooms in/out the chart.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/date-axis/#Dynamic_data_item_grouping} for more information about dynamic data item grouping.\r\n\t * @since 4.7.0\r\n\t */\r\n\tpublic groupFields: this[\"_groupFields\"] = {};\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: IXYSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IXYSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IXYSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IXYSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: XYSeriesDataItem;\r\n\r\n\t/**\r\n\t * X axis the series is attached to.\r\n\t */\r\n\tprotected _xAxis = new MutableValueDisposer<Axis<AxisRenderer>>();\r\n\r\n\t/**\r\n\t * Y axis the series is attached to.\r\n\t */\r\n\tprotected _yAxis = new MutableValueDisposer<Axis<AxisRenderer>>();\r\n\r\n\t/**\r\n\t * A chart series belongs to.\r\n\t */\r\n\tpublic _chart: XYChart;\r\n\r\n\t/**\r\n\t * The main (base) axis.\r\n\t *\r\n\t * This is the axis that series fills will go to, or grow animations will\r\n\t * happen from.\r\n\t */\r\n\tprotected _baseAxis: Axis;\r\n\r\n\t/**\r\n\t * Total data item count.\r\n\t */\r\n\tprotected _count: Dictionary<string, number>;\r\n\r\n\t/**\r\n\t * Data item count in current selection.\r\n\t */\r\n\tprotected _scount: Dictionary<string, number>;\r\n\r\n\t/**\r\n\t * [_xField description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _xField: string;\r\n\r\n\t/**\r\n\t * [_yField description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _yField: string;\r\n\r\n\t/**\r\n\t * [_xOpenField description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _xOpenField: string;\r\n\r\n\t/**\r\n\t * [_yOpenField description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _yOpenField: string;\r\n\r\n\t/**\r\n\t * [_tooltipXField description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _tooltipXField: string;\r\n\r\n\t/**\r\n\t * [_tooltipYField description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _tooltipYField: string;\r\n\r\n\t/**\r\n\t * [_xValueFields description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _xValueFields: Array<string> = [];\r\n\r\n\t/**\r\n\t * [_yValueFields description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _yValueFields: Array<string> = [];\r\n\r\n\t/**\r\n\t * Series which is stacked on top of this series, if any.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic stackedSeries: XYSeries;\r\n\r\n\t/**\r\n\t * Dataitem of previously shown tooltip, used to avoid multiple\r\n\t * tooltipshownat dispatches.\r\n\t */\r\n\tprotected _prevTooltipDataItem: XYSeriesDataItem;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic _baseInterval: { [index: string]: ITimeInterval } = {};\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic dataGrouped = false;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic usesShowFields: boolean = false;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _dataSetChanged: boolean = false;\r\n\r\n\r\n\tprotected _maxxX: number = 100000;\r\n\tprotected _maxxY: number = 100000;\r\n\r\n\tprotected _propertiesChanged: boolean = false;\r\n\r\n\t/**\r\n\t * If this series was used to create a series for scrollbar, this is a reference to it.\r\n\t */\r\n\tpublic scrollbarSeries: this;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic outOfRange: boolean = false;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"XYSeries\";\r\n\t\tthis.isMeasured = false;\r\n\r\n\r\n\t\tthis.groupFields.valueX = \"close\";\r\n\t\tthis.groupFields.valueY = \"close\";\r\n\t\tthis.groupFields.customValue = \"close\";\r\n\r\n\t\tthis.groupFields.openValueX = \"open\";\r\n\t\tthis.groupFields.openValueY = \"open\";\r\n\r\n\t\tthis.cursorTooltipEnabled = true;\r\n\r\n\t\tthis.cursorHoverEnabled = true;\r\n\t\tthis.excludeFromTotal = false;\r\n\r\n\t\tthis.mainContainer.mask = new Sprite();\r\n\t\tthis.mainContainer.mask.setElement(this.paper.add(\"path\"));\r\n\r\n\t\tthis.stacked = false;\r\n\t\tthis.snapTooltip = false;\r\n\r\n\t\tthis._showBullets = false;\r\n\r\n\t\tthis.tooltip.pointerOrientation = \"horizontal\";\r\n\r\n\t\tthis.properties.stackToNegative = true;\r\n\r\n\t\tthis.hideTooltipWhileZooming = true;\r\n\t\tthis.setPropertyValue(\"maskBullets\", true);\r\n\r\n\t\tthis.tooltip.events.on(\"hidden\", () => {\r\n\t\t\tthis.returnBulletDefaultState();\r\n\t\t}, undefined, false)\r\n\r\n\t\tthis._disposers.push(this._xAxis);\r\n\t\tthis._disposers.push(this._yAxis);\r\n\r\n\t\tthis.observe(visualProperties, () => {\r\n\t\t\tif (this.inited) {\r\n\t\t\t\tthis._propertiesChanged = true;\r\n\t\t\t\tif (this.legendDataItem) {\r\n\t\t\t\t\tthis.legendDataItem.childrenCreated = false;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.chart && this.chart.legend) {\r\n\t\t\t\t\tthis.chart.legend.invalidateDataItems();\r\n\t\t\t\t}\r\n\t\t\t\tthis.invalidate();\r\n\t\t\t}\r\n\t\t}, undefined, false);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"X/Y Series\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new XYSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic resetExtremes() {\r\n\t\tthis._tmin.clear();\r\n\t\tthis._tmax.clear();\r\n\r\n\t\tthis._smin.clear();\r\n\t\tthis._smax.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic dataChangeUpdate() {\r\n\t\tthis.dataGrouped = false;\r\n\t\tthis._baseInterval = {};\r\n\t\tthis._currentDataSetId = \"\";\r\n\r\n\t\tthis.resetExtremes();\r\n\r\n\t\tif (this.xAxis) {\r\n\t\t\tthis.xAxis.seriesDataChangeUpdate(this);\r\n\t\t}\r\n\r\n\t\tif (this.yAxis) {\r\n\t\t\tthis.yAxis.seriesDataChangeUpdate(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the series' data.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\t\tthis._baseInterval = {};\r\n\t\tlet dataFields = this.dataFields;\r\n\t\tif (dataFields.valueYShow || dataFields.openValueXShow || dataFields.openValueXShow || dataFields.openValueYShow) {\r\n\t\t\tthis.usesShowFields = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.usesShowFields = false;\r\n\t\t}\r\n\r\n\t\tthis.defineFields();\r\n\r\n\t\tif (this.data.length > 0) {\r\n\t\t\tthis.dataChangeUpdate();\r\n\t\t}\r\n\r\n\t\tsuper.validateData();\r\n\r\n\t\tthis.updateItemReaderText();\r\n\t\tif (this.chart) {\r\n\t\t\tif (!$type.hasValue(this.dataFields[<keyof this[\"_dataFields\"]>this._xField]) || !$type.hasValue(this.dataFields[<keyof this[\"_dataFields\"]>this._yField])) {\r\n\t\t\t\tthrow Error(\"Data fields for series \\\"\" + (this.name ? this.name : this.uid) + \"\\\" are not properly defined.\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 4.7.21 solves 51540\r\n\t\tif (this.inited && this.isHidden) {\r\n\t\t\tthis.hide(0);\r\n\t\t}\r\n\r\n\t\tthis.dataGrouped = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes data item.\r\n\t *\r\n\t * @param dataItem     Data item\r\n\t * @param dataContext  Raw data\r\n\t * @param index        Index of the data item\r\n\t */\r\n\tprotected processDataItem(dataItem: this[\"_dataItem\"], dataContext?: Object): void {\r\n\t\ttry {\r\n\t\t\tsuper.processDataItem(dataItem, dataContext);\r\n\r\n\t\t\tthis.xAxis.processSeriesDataItem(dataItem, \"X\");\r\n\t\t\tthis.yAxis.processSeriesDataItem(dataItem, \"Y\");\r\n\r\n\t\t\tthis.setInitialWorkingValues(dataItem);\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\tif (this._chart) {\r\n\t\t\t\tthis._chart.raiseCriticalError(e);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * When validating raw data, instead of processing data item, we update it\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param item\r\n\t */\r\n\tprotected updateDataItem(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.updateDataItem(dataItem);\r\n\r\n\t\t//dataItem.events.disable();\r\n\t\tthis.xAxis.processSeriesDataItem(dataItem, \"X\");\r\n\t\tthis.yAxis.processSeriesDataItem(dataItem, \"Y\");\r\n\t\t//dataItem.events.enable();\t\t\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Inits data item's working values.\r\n\t *\r\n\t * @param dataItem  Data item\r\n\t * @param index     Data item's index\r\n\t */\r\n\r\n\tprotected setInitialWorkingValues(dataItem: this[\"_dataItem\"]): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic disposeData() {\r\n\t\tsuper.disposeData();\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\r\n\t\tif (xAxis) {\r\n\t\t\tlet dataItemsX = this.dataItemsByAxis.getKey(xAxis.uid);\r\n\t\t\tif (dataItemsX) {\r\n\t\t\t\tdataItemsX.clear();\r\n\t\t\t}\r\n\t\t\tif (xAxis instanceof CategoryAxis) {\r\n\t\t\t\tthis.clearCatAxis(xAxis);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (yAxis) {\r\n\t\t\tlet dataItemsY = this.dataItemsByAxis.getKey(yAxis.uid);\r\n\t\t\tif (dataItemsY) {\r\n\t\t\t\tdataItemsY.clear();\r\n\t\t\t}\r\n\t\t\tif (yAxis instanceof CategoryAxis) {\r\n\t\t\t\tthis.clearCatAxis(yAxis);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected clearCatAxis(axis: CategoryAxis) {\r\n\t\tlet uid = this.uid;\r\n\t\taxis.dataItems.each((dataItem) => {\r\n\t\t\tif (dataItem.seriesDataItems[uid]) {\r\n\t\t\t\tdataItem.seriesDataItems[uid] = [];\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Sets up which data fields to use for data access.\r\n\t */\r\n\tprotected defineFields() {\r\n\t\tlet xAxis: Axis = this.xAxis;\r\n\t\tlet yAxis: Axis = this.yAxis;\r\n\t\tif (xAxis && yAxis) {\r\n\t\t\tlet xAxisFieldName: string = xAxis.axisFieldName;\r\n\t\t\tlet xField: $type.Keyof<this[\"_dataFields\"]> = <$type.Keyof<this[\"_dataFields\"]>>(xAxisFieldName + \"X\");\r\n\t\t\tlet xOpenField: $type.Keyof<this[\"_dataFields\"]> = <$type.Keyof<this[\"_dataFields\"]>>(\"open\" + $utils.capitalize(xAxisFieldName) + \"X\");\r\n\r\n\t\t\tlet yAxisFieldName: string = yAxis.axisFieldName;\r\n\t\t\tlet yField: $type.Keyof<this[\"_dataFields\"]> = <$type.Keyof<this[\"_dataFields\"]>>(yAxisFieldName + \"Y\");\r\n\t\t\tlet yOpenField: $type.Keyof<this[\"_dataFields\"]> = <$type.Keyof<this[\"_dataFields\"]>>(\"open\" + $utils.capitalize(yAxisFieldName) + \"Y\");\r\n\r\n\t\t\tthis._xField = xField;\r\n\t\t\tthis._yField = yField;\r\n\r\n\t\t\tif (this.dataFields[xOpenField]) {\r\n\t\t\t\tthis._xOpenField = xOpenField;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.dataFields[yOpenField]) {\r\n\t\t\t\tthis._yOpenField = yOpenField;\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.dataFields[yOpenField] && this.baseAxis == yAxis) {\r\n\t\t\t\tthis._yOpenField = yField;\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.dataFields[xOpenField] && this.baseAxis == xAxis) {\r\n\t\t\t\tthis._xOpenField = xField;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.stacked && this.baseAxis == xAxis) {\r\n\t\t\t\tthis._xOpenField = xField;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.stacked && this.baseAxis == yAxis) {\r\n\t\t\t\tthis._yOpenField = yField;\r\n\t\t\t}\r\n\r\n\t\t\tif ((xAxis instanceof CategoryAxis) && (yAxis instanceof CategoryAxis)) {\r\n\t\t\t\tif (!this._yOpenField) {\r\n\t\t\t\t\tthis._yOpenField = yField;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._xValueFields = [];\r\n\t\t\tthis._yValueFields = [];\r\n\r\n\t\t\tthis.addValueField(xAxis, <any>this._xValueFields, <any>this._xField);\r\n\t\t\tthis.addValueField(xAxis, <any>this._xValueFields, <any>this._xOpenField);\r\n\r\n\t\t\tthis.addValueField(yAxis, <any>this._yValueFields, <any>this._yField);\r\n\t\t\tthis.addValueField(yAxis, <any>this._yValueFields, <any>this._yOpenField);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [axis description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param axis    Axis\r\n\t * @param fields  Fields (?)\r\n\t * @param field   Field\r\n\t */\r\n\tprotected addValueField<Key extends keyof this[\"_dataFields\"]>(axis: Axis, fields: Array<Key>, field: Key): void {\r\n\t\tif (axis instanceof ValueAxis) {\r\n\t\t\tif ($type.hasValue(this.dataFields[field]) && fields.indexOf(field) == -1) {\r\n\t\t\t\tfields.push(field);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets category field from the category axis.\r\n\t *\r\n\t * User might set field for category axis only, but not for series. In such\r\n\t * case, we take field value from axis and set it for series.\r\n\t *\r\n\t * @param field  Field\r\n\t * @param axis   Axis\r\n\t */\r\n\tprotected setCategoryAxisField<Key extends keyof this[\"_dataFields\"]>(field: Key, axis: CategoryAxis): void {\r\n\t\tif (!$type.hasValue(this.dataFields[field])) {\r\n\t\t\tthis.dataFields[field] = <any>axis.dataFields.category;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets date field from the date axis.\r\n\t *\r\n\t * User might set field for category axis only, but not for series. In such\r\n\t * case, we take field value from axis and set it for series.\r\n\t *\r\n\t * @param field  Field\r\n\t * @param axis   Axis\r\n\t */\r\n\tprotected setDateAxisField<Key extends keyof this[\"_dataFields\"]>(field: Key, axis: DateAxis): void {\r\n\t\tif (!$type.hasValue(this.dataFields[field])) {\r\n\t\t\tthis.dataFields[field] = <any>axis.dataFields.date;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Performs after-draw tasks, e.g. creates masks.\r\n\t */\r\n\tprotected afterDraw(): void {\r\n\t\tsuper.afterDraw();\r\n\t\tthis.createMask();\r\n\t}\r\n\r\n\t/**\r\n\t * Create a mask for the series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic createMask(): void {\r\n\t\t// this mask from which we cut out ranges. does not work well if ranges overlap.\r\n\t\tif (this.mainContainer.mask) {\r\n\t\t\tlet path: string = this.getMaskPath();\r\n\r\n\t\t\t// @todo: this approach won't work well on circluar or other non x/y axes\r\n\t\t\t$iter.each(this.axisRanges.iterator(), (range) => {\r\n\t\t\t\tif (range.axisFill.fillPath) {\r\n\t\t\t\t\trange.axisFill.validate();\r\n\t\t\t\t\tpath += range.axisFill.fillPath;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.mainContainer.mask.path = path;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an SVG path to use as series mask.\r\n\t *\r\n\t * @return SVG path\r\n\t */\r\n\tprotected getMaskPath(): string {\r\n\t\tif (this.xAxis && this.yAxis) {\r\n\t\t\treturn $path.rectToPath({\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0,\r\n\t\t\t\twidth: this.xAxis.axisLength,\r\n\t\t\t\theight: this.yAxis.axisLength\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Returns axis data field to use.\r\n\t *\r\n\t * @param axis  Axis\r\n\t * @return Field name\r\n\t */\r\n\tpublic getAxisField(axis: Axis): string {\r\n\t\tif (axis == this.xAxis) {\r\n\t\t\treturn this.xField;\r\n\t\t}\r\n\t\tif (axis == this.yAxis) {\r\n\t\t\treturn this.yField;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataItems() {\r\n\t\tlet chart = this.chart;\r\n\t\tif (chart) {\r\n\t\t\tthis._maxxX = $math.max(100000, chart.plotContainer.maxWidth * 2);\r\n\t\t\tthis._maxxY = $math.max(100000, chart.plotContainer.maxHeight * 2);\r\n\t\t}\r\n\r\n\t\t// this helps date axis to check which baseInterval we should use\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\t\tif (xAxis && yAxis) {\r\n\t\t\txAxis.updateAxisBySeries();\r\n\t\t\tyAxis.updateAxisBySeries();\r\n\t\t}\r\n\r\n\t\tsuper.validateDataItems();\r\n\r\n\t\tif (xAxis && yAxis) {\r\n\t\t\txAxis.postProcessSeriesDataItems(this);\r\n\t\t\tyAxis.postProcessSeriesDataItems(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data range.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataRange() {\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\r\n\t\tif (xAxis && yAxis) {\r\n\t\t\tif (xAxis.dataRangeInvalid) {\r\n\t\t\t\txAxis.validateDataRange();\r\n\t\t\t}\r\n\r\n\t\t\tif (yAxis.dataRangeInvalid) {\r\n\t\t\t\tyAxis.validateDataRange();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.validateDataRange();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the whole series, effectively causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\r\n\t\tif (xAxis && yAxis) {\r\n\t\t\tif (xAxis.invalid) {\r\n\t\t\t\txAxis.validate();\r\n\t\t\t}\r\n\r\n\t\t\tif (yAxis.invalid) {\r\n\t\t\t\tyAxis.validate();\r\n\t\t\t}\r\n\r\n\t\t\tthis.y = yAxis.pixelY;\r\n\t\t\tthis.x = xAxis.pixelX;\r\n\r\n\r\n\t\t\tthis._showBullets = true;\r\n\t\t\tlet minBulletDistance: number = this.minBulletDistance;\r\n\t\t\tif ($type.isNumber(minBulletDistance)) {\r\n\t\t\t\tif (this.baseAxis.axisLength / (this.endIndex - this.startIndex) < minBulletDistance) {\r\n\t\t\t\t\tthis._showBullets = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.updateTooltip();\r\n\r\n\t\tif ((xAxis instanceof DateAxis && xAxis.groupData && !this.dataGrouped) || (yAxis instanceof DateAxis && yAxis.groupData && !this.dataGrouped)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsuper.validate();\r\n\r\n\t\tlet chart = this.chart;\r\n\t\tlet maskBullets = this.maskBullets;\r\n\t\tif (chart && maskBullets) {\r\n\t\t\tif (chart.className == \"XYChart\") {\r\n\t\t\t\tif (chart.leftAxesContainer.layout == \"vertical\" || chart.rightAxesContainer.layout == \"vertical\") {\r\n\t\t\t\t\tif (this.yAxis) {\r\n\t\t\t\t\t\tthis.bulletsContainer.mask = this.yAxis.renderer.gridContainer;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.bulletsContainer.mask = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (chart.topAxesContainer.layout == \"horizontal\" || chart.bottomAxesContainer.layout == \"horizontal\") {\r\n\t\t\t\t\tif (this.xAxis) {\r\n\t\t\t\t\t\tthis.bulletsContainer.mask = this.xAxis.renderer.gridContainer;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.bulletsContainer.mask = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * X axis the series is attached to.\r\n\t *\r\n\t * @param axis  Axis\r\n\t */\r\n\tpublic set xAxis(axis: Axis) {\r\n\t\tthis.setXAxis(axis);\r\n\t}\r\n\r\n\tprotected setXAxis(axis: Axis) {\r\n\t\tlet oldAxis = this._xAxis.get();\r\n\t\tif (oldAxis != axis) {\r\n\t\t\tif (oldAxis) {\r\n\t\t\t\tthis.dataItemsByAxis.removeKey(oldAxis.uid);\r\n\t\t\t\t// TODO why is this here ?\r\n\t\t\t\tthis._xAxis.dispose();\r\n\t\t\t\t// temp @todo: why it is not disposed?\r\n\t\t\t\toldAxis.series.removeValue(this);\r\n\t\t\t}\r\n\r\n\t\t\tthis._xAxis.set(axis, axis.registerSeries(this));\r\n\r\n\t\t\tthis.dataItemsByAxis.setKey(axis.uid, new Dictionary<string, this[\"_dataItem\"]>());\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Axis\r\n\t */\r\n\tpublic get xAxis(): Axis {\r\n\t\tif (this.chart) {\r\n\t\t\tif (!this._xAxis.get()) {\r\n\t\t\t\tconst axis = this.chart.xAxes.getIndex(0);\r\n\r\n\t\t\t\tif (!axis) {\r\n\t\t\t\t\tthrow Error(\"There are no X axes on chart.\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.xAxis = axis;\r\n\t\t\t}\r\n\t\t\treturn this._xAxis.get();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Y axis the series is attached to.\r\n\t *\r\n\t * @param axis  Axis\r\n\t */\r\n\tpublic set yAxis(axis: Axis) {\r\n\t\tthis.setYAxis(axis);\r\n\t}\r\n\r\n\tprotected setYAxis(axis: Axis) {\r\n\t\tlet oldAxis = this._yAxis.get();\r\n\t\tif (oldAxis != axis) {\r\n\t\t\tif (oldAxis) {\r\n\t\t\t\tthis.dataItemsByAxis.removeKey(oldAxis.uid);\r\n\t\t\t\t// TODO why is this here ?\r\n\t\t\t\tthis._yAxis.dispose();\r\n\t\t\t\t// temp @todo: why it is not disposed?\r\n\t\t\t\toldAxis.series.removeValue(this);\r\n\t\t\t}\r\n\r\n\t\t\tthis._yAxis.set(axis, axis.registerSeries(this));\r\n\r\n\t\t\tif (axis.chart instanceof XYChart) {\r\n\t\t\t\taxis.chart.handleYAxisSet(this);\r\n\t\t\t}\r\n\r\n\t\t\tthis.dataItemsByAxis.setKey(axis.uid, new Dictionary<string, this[\"_dataItem\"]>());\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Axis\r\n\t */\r\n\tpublic get yAxis(): Axis {\r\n\t\tif (this.chart) {\r\n\t\t\tif (!this._yAxis.get()) {\r\n\t\t\t\tconst axis = this.chart.yAxes.getIndex(0);\r\n\r\n\t\t\t\tif (!axis) {\r\n\t\t\t\t\tthrow Error(\"There are no Y axes on chart.\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.yAxis = axis;\r\n\t\t\t}\r\n\r\n\t\t\treturn this._yAxis.get();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The main (base) axis.\r\n\t *\r\n\t * This is the axis that series fills will go to, or grow animations will\r\n\t * happen from.\r\n\t *\r\n\t * @param value  Axis\r\n\t */\r\n\tpublic set baseAxis(value: Axis) {\r\n\t\tif (this._baseAxis != value) {\r\n\t\t\tthis._baseAxis = value;\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Axis\r\n\t */\r\n\tpublic get baseAxis(): Axis {\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\r\n\t\tif (!this._baseAxis && xAxis && yAxis) {\r\n\t\t\tif (yAxis instanceof DateAxis) {\r\n\t\t\t\tthis._baseAxis = yAxis;\r\n\t\t\t}\r\n\r\n\t\t\tif (xAxis instanceof DateAxis) {\r\n\t\t\t\tthis._baseAxis = xAxis;\r\n\t\t\t}\r\n\r\n\t\t\tif (yAxis instanceof CategoryAxis) {\r\n\t\t\t\tthis._baseAxis = yAxis;\r\n\t\t\t}\r\n\r\n\t\t\tif (xAxis instanceof CategoryAxis) {\r\n\t\t\t\tthis._baseAxis = xAxis;\r\n\t\t\t}\r\n\r\n\t\t\tif (!this._baseAxis) {\r\n\t\t\t\tthis._baseAxis = xAxis;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._baseAxis;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds one or several (array) of data items to the existing data.\r\n\t *\r\n\t * @param rawDataItem One or many raw data item objects\r\n\t */\r\n\tpublic addData(rawDataItem: Object | Object[], removeCount?: number, skipRaw?: boolean): void {\r\n\t\tsuper.addData(rawDataItem, removeCount, skipRaw);\r\n\t\tconst scrollbarSeries = this.scrollbarSeries;\r\n\t\tif (scrollbarSeries) {\r\n\t\t\tthis.scrollbarSeries.addData(rawDataItem, removeCount, true);\r\n\t\t\tthis.scrollbarSeries._parseDataFrom = this._parseDataFrom;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprotected setData(value: any[]) {\r\n\t\tsuper.setData(value);\r\n\t\tif (this.scrollbarSeries) {\r\n\t\t\tthis.scrollbarSeries.setData(value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Makes the chart use particular data set.\r\n\t *\r\n\t * If `id` is not provided or there is no such data set, main data will be\r\n\t * used.\r\n\t *\r\n\t * @ignore\r\n\t * @since 4.7.0\r\n\t * @param  id  Data set id\r\n\t */\r\n\tpublic setDataSet(id: string): boolean {\r\n\t\tlet changed = super.setDataSet(id);\r\n\r\n\t\tif (changed) {\r\n\r\n\t\t\tthis._dataSetChanged = true;\r\n\t\t\tlet dataItems = this.dataItems;\r\n\r\n\t\t\tthis.resetExtremes();\r\n\r\n\t\t\tif (dataItems && dataItems.length > 0) {\r\n\r\n\t\t\t\tlet xAxis = this.xAxis;\r\n\t\t\t\tlet yAxis = this.yAxis;\r\n\r\n\t\t\t\tthis._prevStartIndex = undefined;\r\n\t\t\t\tthis._prevEndIndex = undefined;\r\n\t\t\t\tthis._startIndex = undefined;\r\n\t\t\t\tthis._endIndex = undefined;\r\n\r\n\t\t\t\tif (!this.appeared) {\r\n\t\t\t\t\tthis.processValues(false); // this will slow down!\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (xAxis instanceof DateAxis && xAxis == this.baseAxis) {\r\n\t\t\t\t\tthis._tmin.setKey(xAxis.uid, dataItems.getIndex(0).dateX.getTime());\r\n\t\t\t\t\tthis._tmax.setKey(xAxis.uid, dataItems.getIndex(dataItems.length - 1).dateX.getTime());\r\n\t\t\t\t\tthis.dispatch(\"extremeschanged\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (yAxis instanceof DateAxis && yAxis == this.baseAxis) {\r\n\t\t\t\t\tthis._tmin.setKey(yAxis.uid, dataItems.getIndex(0).dateY.getTime());\r\n\t\t\t\t\tthis._tmax.setKey(yAxis.uid, dataItems.getIndex(dataItems.length - 1).dateY.getTime());\r\n\t\t\t\t\tthis.dispatch(\"extremeschanged\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn changed;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Processes values after data items' were added.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItems  Data items\r\n\t */\r\n\tpublic processValues(working: boolean): void {\r\n\t\tsuper.processValues(working);\r\n\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\r\n\t\tif (!xAxis || !yAxis) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet dataItems = this.dataItems;\r\n\r\n\t\tlet minX = Infinity;\r\n\t\tlet maxX = - Infinity;\r\n\r\n\t\tlet minY = Infinity;\r\n\t\tlet maxY = - Infinity;\r\n\r\n\t\tlet startIndex = this.startIndex;\r\n\t\tlet endIndex = this.endIndex;\r\n\r\n\t\tlet workingStartIndex = startIndex;\r\n\t\tlet workingEndIndex = endIndex;\r\n\r\n\t\tif (!working) {\r\n\t\t\tstartIndex = 0;\r\n\t\t\tendIndex = this.dataItems.length;\r\n\t\t}\r\n\r\n\t\tfor (let i = startIndex; i < endIndex; i++) {\r\n\t\t\tlet dataItem = dataItems.getIndex(i);\r\n\r\n\t\t\tthis.getStackValue(dataItem, working);\r\n\r\n\t\t\tlet stackX = dataItem.getValue(\"valueX\", \"stack\");\r\n\t\t\tlet stackY = dataItem.getValue(\"valueY\", \"stack\");\r\n\r\n\t\t\tif (!working) {\r\n\t\t\t\tstackX = dataItem.getValue(\"valueX\", \"stackTrue\");\r\n\t\t\t\tstackY = dataItem.getValue(\"valueY\", \"stackTrue\");\r\n\t\t\t}\r\n\r\n\t\t\tminX = $math.min(dataItem.getMin(this._xValueFields, working, stackX), minX);\r\n\t\t\tminY = $math.min(dataItem.getMin(this._yValueFields, working, stackY), minY);\r\n\r\n\t\t\tmaxX = $math.max(dataItem.getMax(this._xValueFields, working, stackX), maxX);\r\n\t\t\tmaxY = $math.max(dataItem.getMax(this._yValueFields, working, stackY), maxY);\r\n\r\n\r\n\t\t\t// if it's stacked, pay attention to stack value\r\n\t\t\tif (this.stacked) {\r\n\t\t\t\tif (this.baseAxis == xAxis) {\r\n\t\t\t\t\tif (stackY < minY) {\r\n\t\t\t\t\t\tminY = stackY\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (stackY > maxY) {\r\n\t\t\t\t\t\tmaxY = stackY;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.baseAxis == yAxis) {\r\n\t\t\t\t\tif (stackX < minX) {\r\n\t\t\t\t\t\tminX = stackX;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (stackX > maxX) {\r\n\t\t\t\t\t\tmaxX = stackX;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// this is mainly for value axis to calculate total and perecent.total of each series category\r\n\t\txAxis.processSeriesDataItems();\r\n\t\tyAxis.processSeriesDataItems();\r\n\r\n\t\tlet xAxisId: string = xAxis.uid;\r\n\t\tlet yAxisId: string = yAxis.uid;\r\n\r\n\t\tif (this.xAxis instanceof ValueAxis && (minX == Infinity || maxX == -Infinity)) {\r\n\t\t\tthis._smin.setKey(xAxisId, undefined);\r\n\t\t\tthis._smax.setKey(xAxisId, undefined);\r\n\t\t\tthis.dispatchImmediately(\"selectionextremeschanged\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.yAxis instanceof ValueAxis && (minY == Infinity || maxY == -Infinity)) {\r\n\t\t\tthis._smin.setKey(yAxisId, undefined);\r\n\t\t\tthis._smax.setKey(yAxisId, undefined);\r\n\t\t\tthis.dispatchImmediately(\"selectionextremeschanged\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!working) {\r\n\t\t\tif (this._tmin.getKey(xAxisId) != minX || this._tmax.getKey(xAxisId) != maxX || this._tmin.getKey(yAxisId) != minY || this._tmax.getKey(yAxisId) != maxY) {\r\n\t\t\t\tthis._tmin.setKey(xAxisId, minX);\r\n\t\t\t\tthis._tmax.setKey(xAxisId, maxX);\r\n\t\t\t\tthis._tmin.setKey(yAxisId, minY);\r\n\t\t\t\tthis._tmax.setKey(yAxisId, maxY);\r\n\r\n\t\t\t\tlet stackedSeries = this.stackedSeries;\r\n\t\t\t\tif (stackedSeries) {\r\n\t\t\t\t\tif (stackedSeries.isDisposed()) {\r\n\t\t\t\t\t\tthis.stackedSeries = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tstackedSeries.processValues(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.dispatchImmediately(\"extremeschanged\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (startIndex != workingStartIndex || endIndex != workingEndIndex) {\r\n\t\t\tminX = Infinity;\r\n\t\t\tmaxX = - Infinity;\r\n\r\n\t\t\tminY = Infinity;\r\n\t\t\tmaxY = - Infinity;\r\n\r\n\t\t\tfor (let i = workingStartIndex; i < workingEndIndex; i++) {\r\n\t\t\t\tlet dataItem = dataItems.getIndex(i);\r\n\r\n\t\t\t\tthis.getStackValue(dataItem, working);\r\n\r\n\t\t\t\tlet stackX = dataItem.getValue(\"valueX\", \"stack\");\r\n\t\t\t\tlet stackY = dataItem.getValue(\"valueY\", \"stack\");\r\n\r\n\t\t\t\tif (!working) {\r\n\t\t\t\t\tstackX = dataItem.getValue(\"valueX\", \"stackTrue\");\r\n\t\t\t\t\tstackY = dataItem.getValue(\"valueY\", \"stackTrue\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tminX = $math.min(dataItem.getMin(this._xValueFields, working, stackX), minX);\r\n\r\n\t\t\t\tminY = $math.min(dataItem.getMin(this._yValueFields, working, stackY), minY);\r\n\r\n\t\t\t\tmaxX = $math.max(dataItem.getMax(this._xValueFields, working, stackX), maxX);\r\n\t\t\t\tmaxY = $math.max(dataItem.getMax(this._yValueFields, working, stackY), maxY);\r\n\r\n\t\t\t\t// if it's stacked, pay attention to stack value\r\n\t\t\t\tif (this.stacked) {\r\n\t\t\t\t\tif (this.baseAxis == xAxis) {\r\n\t\t\t\t\t\tif (stackY < minY) {\r\n\t\t\t\t\t\t\tminY = stackY\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (stackY > maxY) {\r\n\t\t\t\t\t\t\tmaxY = stackY;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.baseAxis == yAxis) {\r\n\t\t\t\t\t\tif (stackX < minX) {\r\n\t\t\t\t\t\t\tminX = stackX;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (stackX > maxX) {\r\n\t\t\t\t\t\t\tmaxX = stackX;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.xAxis instanceof ValueAxis && (minX == Infinity || maxX == -Infinity)) {\r\n\t\t\tthis._smin.setKey(xAxisId, undefined);\r\n\t\t\tthis._smax.setKey(xAxisId, undefined);\r\n\t\t\tthis.dispatchImmediately(\"selectionextremeschanged\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.yAxis instanceof ValueAxis && (minY == Infinity || maxY == -Infinity)) {\r\n\t\t\tthis._smin.setKey(yAxisId, undefined);\r\n\t\t\tthis._smax.setKey(yAxisId, undefined);\r\n\t\t\tthis.dispatchImmediately(\"selectionextremeschanged\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this._smin.getKey(xAxisId) != minX || this._smax.getKey(xAxisId) != maxX || this._smin.getKey(yAxisId) != minY || this._smax.getKey(yAxisId) != maxY) {\r\n\t\t\tthis._smin.setKey(xAxisId, minX);\r\n\t\t\tthis._smax.setKey(xAxisId, maxX);\r\n\t\t\tthis._smin.setKey(yAxisId, minY);\r\n\t\t\tthis._smax.setKey(yAxisId, maxY);\r\n\r\n\t\t\tif (this.appeared || this.start != 0 || this.end != 1 || this.dataItems != this.mainDataSet) {\r\n\t\t\t\t/// new, helps to handle issues with change percent\r\n\t\t\t\tlet changed = false;\r\n\r\n\t\t\t\tif (yAxis instanceof ValueAxis && !(yAxis instanceof DateAxis)) {\r\n\t\t\t\t\tlet tmin = this._tmin.getKey(yAxisId);\r\n\r\n\t\t\t\t\tif (!$type.isNumber(tmin) || ((this.usesShowFields || this._dataSetChanged || (xAxis instanceof DateAxis && xAxis.groupData && this.isShowing)) && minY < tmin) || (this.stackedSeries && !this.isHidden && !working)) {\r\n\t\t\t\t\t\tthis._tmin.setKey(yAxisId, minY);\r\n\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet tmax = this._tmax.getKey(yAxisId);\r\n\t\t\t\t\tif (!$type.isNumber(tmax) || ((this.usesShowFields || this._dataSetChanged || (xAxis instanceof DateAxis && xAxis.groupData && this.isShowing)) && maxY > tmax) || (this.stackedSeries && !this.isHidden && !working)) {\r\n\t\t\t\t\t\tthis._tmax.setKey(yAxisId, maxY);\r\n\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (xAxis instanceof ValueAxis && !(xAxis instanceof DateAxis)) {\r\n\t\t\t\t\tlet tmin = this._tmin.getKey(xAxisId);\r\n\t\t\t\t\tif (!$type.isNumber(tmin) || ((this.usesShowFields || this._dataSetChanged || (yAxis instanceof DateAxis && yAxis.groupData && this.isShowing)) && minX < tmin) || (this.stackedSeries && !this.isHidden && !working)) {\r\n\t\t\t\t\t\tthis._tmin.setKey(xAxisId, minX);\r\n\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet tmax = this._tmax.getKey(xAxisId);\r\n\t\t\t\t\tif (!$type.isNumber(tmax) || ((this.usesShowFields || this._dataSetChanged || (yAxis instanceof DateAxis && yAxis.groupData && this.isShowing)) && maxX > tmax) || (this.stackedSeries && !this.isHidden && !working)) {\r\n\t\t\t\t\t\tthis._tmax.setKey(xAxisId, maxX);\r\n\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (changed) {\r\n\t\t\t\t\tthis.dispatchImmediately(\"extremeschanged\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.start == 0 && this.end == 1) {\r\n\t\t\t\t\t// yes, its ok. otherwise min/max won't be updated when zooming out\r\n\t\t\t\t\tthis._dataSetChanged = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.dispatchImmediately(\"selectionextremeschanged\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!working && this.stacked) {\r\n\t\t\tthis.processValues(true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Hides element's [[Tooltip]].\r\n\t *\r\n\t * @see {@link Tooltip}\r\n\t */\r\n\tpublic hideTooltip(duration?: number) {\r\n\t\tsuper.hideTooltip(duration);\r\n\t\tthis.returnBulletDefaultState();\r\n\t\tthis._prevTooltipDataItem = undefined;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Shows series tooltip at specific position.\r\n\t *\r\n\t * @param xPosition  X\r\n\t * @param yPosition  Y\r\n\t */\r\n\tpublic showTooltipAtPosition(xPosition: number, yPosition: number): IPoint {\r\n\r\n\t\tlet dataItem: this[\"_dataItem\"];\r\n\r\n\t\tif (this.visible && !this.isHiding && !this.isShowing) {\r\n\r\n\t\t\tlet xAxis: Axis = this._xAxis.get();\r\n\t\t\tlet yAxis: Axis = this._yAxis.get();\r\n\r\n\t\t\tif (xAxis == this.baseAxis) {\r\n\t\t\t\tdataItem = <this[\"_dataItem\"]>xAxis.getSeriesDataItem(this, xAxis.toAxisPosition(xPosition), this.snapTooltip);\r\n\t\t\t}\r\n\t\t\tif (yAxis == this.baseAxis) {\r\n\t\t\t\tdataItem = <this[\"_dataItem\"]>yAxis.getSeriesDataItem(this, yAxis.toAxisPosition(yPosition), this.snapTooltip);\r\n\t\t\t}\r\n\r\n\t\t\tlet point = this.showTooltipAtDataItem(dataItem);\r\n\r\n\t\t\tif (point) {\r\n\t\t\t\treturn point;\r\n\t\t\t}\r\n\r\n\t\t\t// so that if tooltip is shown on columns or bullets for it not to be hidden\r\n\t\t\tif (!this.tooltipText && !this.tooltipHTML) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.hideTooltip();\r\n\t}\r\n\r\n\tprotected getAdjustedXLocation(dataItem: this[\"_dataItem\"], field: string, bulletLocationX?: number) {\r\n\t\treturn dataItem.locations[field];\r\n\t}\r\n\r\n\tprotected getAdjustedYLocation(dataItem: this[\"_dataItem\"], field: string, bulletLocationY?: number) {\r\n\t\treturn dataItem.locations[field];\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Shows series tooltip at specific dataItem.\r\n\t *\r\n\t * @param dataItem\r\n\t */\r\n\tpublic showTooltipAtDataItem(dataItem: this[\"_dataItem\"]): IPoint {\r\n\r\n\t\tlet cursor = <XYCursor>this.chart.cursor;\r\n\t\tif (cursor && cursor.hideSeriesTooltipsOnSelection && cursor.selection.visible && cursor.downPoint) {\r\n\t\t\tthis.hideTooltip();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.returnBulletDefaultState(dataItem);\r\n\t\tif (dataItem && dataItem.visible) {\r\n\r\n\t\t\tthis.updateLegendValue(dataItem);\r\n\t\t\tif (this.cursorTooltipEnabled) {\r\n\t\t\t\tthis.tooltipDataItem = dataItem;\r\n\r\n\t\t\t\t// todo: add tooltipXField and tooltipYField.\r\n\t\t\t\tlet tooltipXField = this.tooltipXField;\r\n\t\t\t\tlet tooltipYField = this.tooltipYField;\r\n\r\n\t\t\t\tif ($type.hasValue((<any>dataItem)[tooltipXField]) && $type.hasValue((<any>dataItem)[tooltipYField])) {\r\n\r\n\t\t\t\t\tlet tooltipPoint = this.getPoint(dataItem, tooltipXField, tooltipYField, this.getAdjustedXLocation(dataItem, tooltipXField), this.getAdjustedYLocation(dataItem, tooltipYField));\r\n\r\n\t\t\t\t\tif (tooltipPoint) {\r\n\r\n\t\t\t\t\t\tif (this.chart.className == \"XYChart\" && (tooltipPoint.y < -1 || tooltipPoint.y > this.yAxis.pixelHeight + 1 || tooltipPoint.x < -1 || tooltipPoint.x > this.xAxis.pixelWidth + 1)) {\r\n\t\t\t\t\t\t\t// void\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.tooltipX = tooltipPoint.x;\r\n\t\t\t\t\t\t\tthis.tooltipY = tooltipPoint.y;\r\n\r\n\t\t\t\t\t\t\tif (this._prevTooltipDataItem != dataItem) {\r\n\r\n\t\t\t\t\t\t\t\tthis.dispatchImmediately(\"tooltipshownat\", {\r\n\t\t\t\t\t\t\t\t\ttype: \"tooltipshownat\",\r\n\t\t\t\t\t\t\t\t\ttarget: this,\r\n\t\t\t\t\t\t\t\t\tdataItem: dataItem\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\tthis._prevTooltipDataItem = dataItem;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (this.cursorHoverEnabled) {\r\n\t\t\t\t\t\t\t\tfor (let sprite of dataItem.sprites) {\r\n\t\t\t\t\t\t\t\t\tif (!sprite.parent.visible || sprite.isHidden || sprite.__disabled || sprite.disabled || sprite.isHiding) {\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tif (!sprite.interactions.isRealHover) {\r\n\t\t\t\t\t\t\t\t\t\t\tsprite.dispatchImmediately(\"over\");\r\n\t\t\t\t\t\t\t\t\t\t\tsprite.interactions.isRealHover = true;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tsprite.isHover = true;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (this.showTooltip()) {\r\n\t\t\t\t\t\t\t\treturn $utils.spritePointToSvg({ x: tooltipPoint.x, y: tooltipPoint.y }, this);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.updateLegendValue(dataItem, true);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Returns default state to bullets when tooltip is shown at some other data\r\n\t * item or hidden\r\n\t */\r\n\tprotected returnBulletDefaultState(dataItem?: XYSeriesDataItem) {\r\n\t\tif (this._prevTooltipDataItem && this._prevTooltipDataItem != dataItem) {\r\n\t\t\tfor (let sprite of this._prevTooltipDataItem.sprites) {\r\n\t\t\t\tif (!sprite.isDisposed()) {\r\n\t\t\t\t\tconst fireEvent = sprite.interactions.isRealHover;\r\n\t\t\t\t\tsprite.isHover = false;\r\n\t\t\t\t\tif (fireEvent) {\r\n\t\t\t\t\t\tsprite.dispatchImmediately(\"out\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._prevTooltipDataItem = undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected shouldCreateBullet(dataItem: this[\"_dataItem\"], bulletTemplate: Bullet): boolean {\r\n\t\t// use series xField/yField if bullet doesn't have fields set\r\n\t\tlet xField: string = bulletTemplate.xField;\r\n\t\tif (!$type.hasValue(xField)) {\r\n\t\t\txField = this.xField;\r\n\t\t}\r\n\r\n\t\tlet yField: string = bulletTemplate.yField;\r\n\t\tif (!$type.hasValue(yField)) {\r\n\t\t\tyField = this.yField;\r\n\t\t}\r\n\r\n\t\tif ((this.xAxis instanceof ValueAxis && !dataItem.hasValue([xField])) || (this.yAxis instanceof ValueAxis && !dataItem.hasValue([yField]))) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (bulletTemplate.disabled) {\r\n\t\t\tlet disabledField = bulletTemplate.propertyFields.disabled;\r\n\t\t\tlet dataContext = <any>dataItem.dataContext;\r\n\t\t\tif (dataContext && dataContext[disabledField] === false) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateTooltip() {\r\n\t\tif (!this.hideTooltipWhileZooming && this.tooltip && !this.tooltip.isHidden && !this.isHiding && !this.isHidden && this.tooltipDataItem) {\r\n\t\t\tthis.showTooltipAtDataItem(<this[\"_dataItem\"]>this.tooltipDataItem);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic positionBullet(bullet: Bullet) {\r\n\t\tsuper.positionBullet(bullet);\r\n\r\n\t\tlet dataItem: XYSeriesDataItem = <XYSeriesDataItem>bullet.dataItem;\r\n\r\n\t\t// use series xField/yField if bullet doesn't have fields set\r\n\t\tlet xField: string = bullet.xField;\r\n\t\tif (!$type.hasValue(xField)) {\r\n\t\t\txField = this.xField;\r\n\t\t}\r\n\r\n\t\tlet yField: string = bullet.yField;\r\n\t\tif (!$type.hasValue(yField)) {\r\n\t\t\tyField = this.yField;\r\n\t\t}\r\n\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\r\n\t\tif ((xAxis instanceof ValueAxis && !dataItem.hasValue([xField])) || (yAxis instanceof ValueAxis && !dataItem.hasValue([yField]))) {\r\n\t\t\tbullet.visible = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet bulletLocationX: number = this.getBulletLocationX(bullet, xField);\r\n\t\t\tlet bulletLocationY: number = this.getBulletLocationY(bullet, yField);\r\n\r\n\t\t\tlet point = this.getPoint(dataItem, xField, yField, bulletLocationX, bulletLocationY);\r\n\t\t\tif (point) {\r\n\t\t\t\tlet xOpenField = this.xOpenField;\r\n\t\t\t\tlet yOpenField = this.yOpenField;\r\n\r\n\t\t\t\tlet positionX: number;\r\n\t\t\t\tlet positionY: number;\r\n\r\n\r\n\t\t\t\tif (xAxis instanceof DateAxis) {\r\n\r\n\t\t\t\t\tif (!$type.isNumber(bulletLocationX)) {\r\n\t\t\t\t\t\tbulletLocationX = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet openValue: number;\r\n\t\t\t\t\tlet closeValue: number = dataItem.getWorkingValue(xField);\r\n\r\n\t\t\t\t\tif (!xOpenField) {\r\n\t\t\t\t\t\tif (xAxis == this.baseAxis) {\r\n\t\t\t\t\t\t\topenValue = xAxis.baseValue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\topenValue = dataItem.getWorkingValue(xOpenField);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!$type.isNumber(openValue)) {\r\n\t\t\t\t\t\topenValue = closeValue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet stack: number = dataItem.getValue(\"valueX\", \"stack\");\r\n\t\t\t\t\topenValue += stack;\r\n\t\t\t\t\tcloseValue += stack;\r\n\r\n\t\t\t\t\tif (openValue == closeValue) {\r\n\t\t\t\t\t\tlet baseInterval = xAxis.baseInterval;\r\n\t\t\t\t\t\tlet dateFormatter = xAxis.dateFormatter;\r\n\t\t\t\t\t\topenValue = $time.round(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.firstDayOfWeek, dateFormatter.utc, undefined, dateFormatter.timezoneMinutes, dateFormatter.timezone).getTime();\r\n\t\t\t\t\t\tcloseValue = $time.add(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.utc).getTime();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet middleValue: number;\r\n\t\t\t\t\tif (xAxis == this.baseAxis) {\r\n\t\t\t\t\t\tmiddleValue = openValue + (closeValue - openValue) * bulletLocationX;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tmiddleValue = openValue + (closeValue - openValue) * (1 - bulletLocationX);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tpositionX = xAxis.valueToPosition(middleValue);\r\n\t\t\t\t}\r\n\t\t\t\telse if (xAxis instanceof ValueAxis) {\r\n\r\n\t\t\t\t\tif (!$type.isNumber(bulletLocationX)) {\r\n\t\t\t\t\t\tbulletLocationX = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet openValue: number;\r\n\t\t\t\t\tlet closeValue: number = dataItem.getWorkingValue(xField);\r\n\r\n\t\t\t\t\tif (!xOpenField) {\r\n\t\t\t\t\t\topenValue = xAxis.baseValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\topenValue = dataItem.getWorkingValue(xOpenField);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet stack: number = dataItem.getValue(\"valueX\", \"stack\");\r\n\t\t\t\t\topenValue += stack;\r\n\t\t\t\t\tcloseValue += stack;\r\n\r\n\t\t\t\t\tlet middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationX);\r\n\r\n\t\t\t\t\tpositionX = xAxis.valueToPosition(middleValue);\r\n\t\t\t\t}\r\n\t\t\t\telse if (xAxis instanceof CategoryAxis) {\r\n\r\n\t\t\t\t\tlet rightLocation = this.getAdjustedXLocation(dataItem, xField, bullet.locationX);\r\n\t\t\t\t\tlet leftLocation = this.getAdjustedXLocation(dataItem, xOpenField, bullet.locationX);\r\n\r\n\t\t\t\t\tpositionX = xAxis.categoryToPosition((<any>dataItem)[xField], rightLocation);\r\n\t\t\t\t\tlet openPositionX: number;\r\n\r\n\r\n\t\t\t\t\tif (xOpenField) {\r\n\t\t\t\t\t\topenPositionX = xAxis.categoryToPosition((<any>dataItem)[xOpenField], leftLocation);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!$type.isNumber(openPositionX)) {\r\n\t\t\t\t\t\topenPositionX = 1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tpositionX = openPositionX + (positionX - openPositionX) * bulletLocationX;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (yAxis instanceof DateAxis) {\r\n\t\t\t\t\tif (!$type.isNumber(bulletLocationY)) {\r\n\t\t\t\t\t\tbulletLocationY = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet openValue: number;\r\n\t\t\t\t\tlet closeValue: number = dataItem.getWorkingValue(yField);\r\n\r\n\t\t\t\t\tif (!yOpenField) {\r\n\t\t\t\t\t\tif (yAxis == this.baseAxis) {\r\n\t\t\t\t\t\t\topenValue = yAxis.baseValue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\topenValue = dataItem.getWorkingValue(yOpenField);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!$type.isNumber(openValue)) {\r\n\t\t\t\t\t\topenValue = closeValue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet stack: number = dataItem.getValue(\"valueY\", \"stack\");\r\n\t\t\t\t\topenValue += stack;\r\n\t\t\t\t\tcloseValue += stack;\r\n\r\n\t\t\t\t\tif (openValue == closeValue) {\r\n\t\t\t\t\t\tlet baseInterval = yAxis.baseInterval;\r\n\t\t\t\t\t\tlet dateFormatter = yAxis.dateFormatter;\r\n\t\t\t\t\t\topenValue = $time.round(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.firstDayOfWeek, dateFormatter.utc, undefined, dateFormatter.timezoneMinutes, dateFormatter.timezone).getTime();\r\n\t\t\t\t\t\tcloseValue = $time.add(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.utc).getTime();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet middleValue: number;\r\n\r\n\t\t\t\t\tif (yAxis == this.baseAxis) {\r\n\t\t\t\t\t\tmiddleValue = openValue + (closeValue - openValue) * bulletLocationY;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tmiddleValue = openValue + (closeValue - openValue) * (1 - bulletLocationY);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tpositionY = yAxis.valueToPosition(middleValue);\r\n\t\t\t\t}\r\n\t\t\t\telse if (yAxis instanceof ValueAxis) {\r\n\r\n\t\t\t\t\tif (!$type.isNumber(bulletLocationY)) {\r\n\t\t\t\t\t\tbulletLocationY = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet openValue: number;\r\n\t\t\t\t\tlet closeValue: number = dataItem.getWorkingValue(yField);\r\n\r\n\t\t\t\t\tif (!yOpenField) {\r\n\t\t\t\t\t\topenValue = yAxis.baseValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\topenValue = dataItem.getWorkingValue(yOpenField);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet stack: number = dataItem.getValue(\"valueY\", \"stack\");\r\n\t\t\t\t\topenValue += stack;\r\n\t\t\t\t\tcloseValue += stack;\r\n\r\n\t\t\t\t\tlet middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationY);\r\n\r\n\t\t\t\t\tpositionY = yAxis.valueToPosition(middleValue);\r\n\t\t\t\t}\r\n\t\t\t\telse if (yAxis instanceof CategoryAxis) {\r\n\t\t\t\t\tpositionY = yAxis.categoryToPosition((<any>dataItem)[yField], bulletLocationY);\r\n\r\n\t\t\t\t\tlet topLocation = this.getAdjustedYLocation(dataItem, yField, bullet.locationY);\r\n\t\t\t\t\tlet bottomLocation = this.getAdjustedYLocation(dataItem, yOpenField, bullet.locationY);\r\n\r\n\t\t\t\t\tpositionY = yAxis.categoryToPosition((<any>dataItem)[yField], topLocation);\r\n\t\t\t\t\tlet openPositionY: number;\r\n\r\n\t\t\t\t\tif (yOpenField) {\r\n\t\t\t\t\t\topenPositionY = yAxis.categoryToPosition((<any>dataItem)[yOpenField], bottomLocation);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!$type.isNumber(openPositionY)) {\r\n\t\t\t\t\t\topenPositionY = 1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tpositionY = openPositionY + (positionY - openPositionY) * bulletLocationY;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbullet.visible = true;\r\n\t\t\t\tthis.positionBulletReal(bullet, positionX, positionY);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tbullet.visible = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected positionBulletReal(bullet: Sprite, positionX: number, positionY: number) {\r\n\t\tbullet.x = this.xAxis.renderer.positionToPoint(positionX, positionY).x;\r\n\t\tbullet.y = this.yAxis.renderer.positionToPoint(positionY, positionX).y;\r\n\t}\r\n\r\n\t/**\r\n\t * returns bullet x location\r\n\t * @ignore\r\n\t */\r\n\tprotected getBulletLocationX(bullet: Bullet, field: string): number {\r\n\t\tlet bulletLocation: number = bullet.locationX;\r\n\t\tlet dataItem = bullet.dataItem;\r\n\t\tif (!$type.isNumber(bulletLocation)) {\r\n\t\t\tbulletLocation = dataItem.workingLocations[field];\r\n\t\t}\r\n\t\treturn bulletLocation;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns bullet x location\r\n\t * @ignore\r\n\t */\r\n\tprotected getBulletLocationY(bullet: Bullet, field: string): number {\r\n\t\tlet bulletLocation: number = bullet.locationY;\r\n\t\tlet dataItem = bullet.dataItem;\r\n\t\tif (!$type.isNumber(bulletLocation)) {\r\n\t\t\tbulletLocation = dataItem.workingLocations[field];\r\n\t\t}\r\n\t\treturn bulletLocation;\r\n\t}\r\n\r\n\t/**\r\n\t * This method must be called if you update Series' data fields that might\r\n\t * affect stacking of the series.\r\n\t *\r\n\t * Since individual `dataField` changes are not being monitored, you need\r\n\t * todo it manually for changes to take affect.\r\n\t *\r\n\t * @since 4.7.21\r\n\t */\r\n\tpublic updateStacking(): void {\r\n\t\tthis.invalidateDataItems();\r\n\t\tif (this.chart) {\r\n\t\t\tthis.chart.series.each((series) => {\r\n\t\t\t\tif (series.baseAxis == this.baseAxis) {\r\n\t\t\t\t\tseries.stackedSeries = undefined;\r\n\t\t\t\t\tseries.invalidateDataItems();\r\n\t\t\t\t\tseries.invalidateProcessedData();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Can items from this series be included into stacks?\r\n\t * \r\n\t * Note: proper stacking is only possible if series have the same number\r\n\t * of data items. To ensure this, don't set data directly on series\r\n\t * but do this on chart instead.\r\n\t *\r\n\t * @default false\r\n\t * @param stacked  Can be stacked?\r\n\t */\r\n\tpublic set stacked(stacked: boolean) {\r\n\t\tif (this.setPropertyValue(\"stacked\", stacked, true)) {\r\n\t\t\tthis.updateStacking();\r\n\r\n\t\t\tlet xAxis = this.xAxis;\r\n\t\t\tlet yAxis = this.yAxis;\r\n\r\n\t\t\tif (!stacked) {\r\n\t\t\t\tlet field: string;\r\n\r\n\t\t\t\tif (xAxis != this.baseAxis && xAxis instanceof ValueAxis) {\r\n\t\t\t\t\tfield = this.xField;\r\n\t\t\t\t}\r\n\t\t\t\tif (yAxis != this.baseAxis && yAxis instanceof ValueAxis) {\r\n\t\t\t\t\tfield = this.yField;\r\n\t\t\t\t}\r\n\t\t\t\tif (field) {\r\n\t\t\t\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(field, 0, \"stack\");\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(field, 0, \"stackTrue\");\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Can be stacked?\r\n\t */\r\n\tpublic get stacked(): boolean {\r\n\t\treturn this.getPropertyValue(\"stacked\");\r\n\t}\r\n\r\n\t/**\r\n\t * Should the nearest tooltip be shown if no data item is found on the\r\n\t * current cursor position? In order this to work, you should set snapTooltip = false on the series baseAxis.\r\n\t *\r\n\t * @default false\r\n\t * @param value  Should snap?\r\n\t */\r\n\tpublic set snapTooltip(value: boolean) {\r\n\t\tthis.setPropertyValue(\"snapTooltip\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Should snap?\r\n\t */\r\n\tpublic get snapTooltip(): boolean {\r\n\t\treturn this.getPropertyValue(\"snapTooltip\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Shows hidden series.\r\n\t *\r\n\t * @param duration  Duration of reveal animation (ms)\r\n\t * @return Animation\r\n\t */\r\n\tpublic show(duration?: number): Animation {\r\n\r\n\t\tif (this.isHidden) {\r\n\t\t\tif (this.appeared && this.xAxis instanceof DateAxis && this.xAxis.groupData) {\r\n\t\t\t\tthis._tmin.setKey(this.yAxis.uid, undefined);\r\n\t\t\t\tthis._tmax.setKey(this.yAxis.uid, undefined);\r\n\t\t\t}\r\n\t\t\tif (this.appeared && this.yAxis instanceof DateAxis && this.yAxis.groupData) {\r\n\t\t\t\tthis._tmin.setKey(this.xAxis.uid, undefined);\r\n\t\t\t\tthis._tmax.setKey(this.xAxis.uid, undefined);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet fields: string[];\r\n\t\tif (this.xAxis instanceof ValueAxis && this.xAxis != this.baseAxis) {\r\n\t\t\tfields = this._xValueFields;\r\n\t\t}\r\n\r\n\t\tif (this.yAxis instanceof ValueAxis && this.yAxis != this.baseAxis) {\r\n\t\t\tfields = this._yValueFields;\r\n\t\t}\r\n\r\n\t\tlet startIndex: number = this.startIndex;\r\n\t\tlet endIndex: number = this.endIndex;\r\n\t\tlet delay: number = 0;\r\n\r\n\t\tlet interpolationDuration = this.defaultState.transitionDuration;\r\n\t\tif ($type.isNumber(duration)) {\r\n\t\t\tinterpolationDuration = duration;\r\n\t\t}\r\n\t\tif (!options.animationsEnabled) {\r\n\t\t\tinterpolationDuration = 0;\r\n\t\t}\r\n\r\n\t\tlet anim: Animation;\r\n\r\n\t\t$iter.each($iter.indexed(this.dataItems.iterator()), (a) => {\r\n\t\t\tlet i = a[0];\r\n\t\t\tlet dataItem = a[1];\r\n\t\t\tlet realDuration = interpolationDuration;\r\n\t\t\tif (i < this.startIndex - 10 || i > this.endIndex + 10) {\r\n\t\t\t\trealDuration = 0;\r\n\t\t\t\tdelay = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.sequencedInterpolation && realDuration > 0) {\r\n\t\t\t\tdelay = this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n\t\t\t}\r\n\t\t\tanim = dataItem.show(realDuration, delay, fields);\r\n\t\t});\r\n\r\n\t\t// other data sets\r\n\t\tthis.dataSets.each((key, dataSet) => {\r\n\t\t\tif (dataSet != this.dataItems) {\r\n\t\t\t\tdataSet.each((dataItem) => {\r\n\t\t\t\t\tdataItem.events.disable();\r\n\t\t\t\t\tdataItem.show(0, 0, fields);\r\n\t\t\t\t\tdataItem.events.enable();\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (this.mainDataSet != this.dataItems) {\r\n\t\t\tthis.mainDataSet.each((dataItem) => {\r\n\t\t\t\tdataItem.events.disable();\r\n\t\t\t\tdataItem.show(0, 0, fields);\r\n\t\t\t\tdataItem.events.enable();\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet animation = super.show(duration);\r\n\r\n\t\tif (anim && !anim.isFinished()) {\r\n\t\t\tanimation = anim;\r\n\t\t}\r\n\r\n\t\tif (this.hidden) {\r\n\t\t\tthis.dispatchImmediately(\"selectionextremeschanged\");\r\n\t\t\tthis.hidden = false;\r\n\t\t}\r\n\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * Hides series.\r\n\t *\r\n\t * @param duration  Duration of hiding animation (ms)\r\n\t * @return Animation\r\n\t */\r\n\tpublic hide(duration?: number): Animation {\r\n\t\tlet fields: string[];\r\n\t\tlet value: number;\r\n\t\tlet xAxis: Axis = this.xAxis;\r\n\r\n\t\tif (xAxis instanceof ValueAxis && xAxis != this.baseAxis) {\r\n\t\t\tfields = this._xValueFields;\r\n\t\t\t// animate to zero if 0 is within zoomMin/zoomMax\r\n\t\t\tif (this.stacked || (xAxis.minZoomed < xAxis.baseValue && xAxis.maxZoomed > xAxis.baseValue) || this.stackedSeries) {\r\n\t\t\t\tvalue = xAxis.baseValue;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvalue = xAxis.min;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet yAxis: Axis = this.yAxis;\r\n\t\tif (yAxis instanceof ValueAxis && yAxis != this.baseAxis) {\r\n\t\t\tfields = this._yValueFields;\r\n\t\t\t// animate to zero if 0 is within zoomMin/zoomMax\r\n\t\t\tif (this.stacked || (yAxis.minZoomed < yAxis.baseValue && yAxis.maxZoomed > yAxis.baseValue) || this.stackedSeries) {\r\n\t\t\t\tvalue = yAxis.baseValue;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvalue = yAxis.min;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//if ($type.hasValue(fields)) {\r\n\t\tlet startIndex: number = this.startIndex;\r\n\t\tlet endIndex: number = this.endIndex;\r\n\r\n\t\tlet interpolationDuration = this.hiddenState.transitionDuration;\r\n\t\tif ($type.isNumber(duration)) {\r\n\t\t\tinterpolationDuration = duration;\r\n\t\t}\r\n\r\n\t\tif (!options.animationsEnabled) {\r\n\t\t\tinterpolationDuration = 0;\r\n\t\t}\r\n\r\n\t\tlet delay: number = 0;\r\n\t\tlet anim: Animation;\r\n\r\n\t\t$iter.each($iter.indexed(this.dataItems.iterator()), (a) => {\r\n\t\t\tlet i = a[0];\r\n\t\t\tlet dataItem = a[1];\r\n\t\t\tlet realDuration = interpolationDuration;\r\n\r\n\t\t\tif (i < this.startIndex - 10 || i > this.endIndex + 10) {\r\n\t\t\t\trealDuration = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (realDuration == 0) {\r\n\t\t\t\tdataItem.hide(0, 0, value, fields);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this.sequencedInterpolation && realDuration > 0) {\r\n\t\t\t\t\tdelay = this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n\t\t\t\t}\r\n\t\t\t\tanim = dataItem.hide(realDuration, delay, value, fields);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// other data sets\r\n\t\tthis.dataSets.each((key, dataSet) => {\r\n\t\t\tif (dataSet != this.dataItems) {\r\n\t\t\t\tdataSet.each((dataItem) => {\r\n\t\t\t\t\tdataItem.events.disable();\r\n\t\t\t\t\tdataItem.hide(0, 0, value, fields);\r\n\t\t\t\t\tdataItem.events.enable();\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (this.mainDataSet != this.dataItems) {\r\n\t\t\tthis.mainDataSet.each((dataItem) => {\r\n\t\t\t\tdataItem.events.disable();\r\n\t\t\t\tdataItem.hide(0, 0, value, fields);\r\n\t\t\t\tdataItem.events.enable();\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet animation = super.hide(interpolationDuration);\r\n\t\tif (animation && !animation.isFinished()) {\r\n\t\t\tanimation.delay(delay);\r\n\t\t}\r\n\r\n\t\tif (anim && !anim.isFinished()) {\r\n\t\t\tanimation = anim;\r\n\t\t}\r\n\t\tif (this.appeared) {\r\n\t\t\tthis.dispatch(\"selectionextremeschanged\");\r\n\t\t}\r\n\t\t// helps to avoid flicker. otherwise columns will show up at full size and only on next frame will animate from 0\r\n\t\tthis.validateDataElements();\r\n\t\t//}\r\n\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemWorkingValueChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleDataItemWorkingValueChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n\t\tsuper.handleDataItemWorkingValueChange(dataItem, name);\r\n\r\n\t\t// to calculate stack values\r\n\t\tlet axisSeries: List<XYSeries> = <List<XYSeries>>this.baseAxis.series;\r\n\r\n\t\t$iter.each(axisSeries.iterator(), (series) => {\r\n\t\t\tif (series.stacked || series.stackedSeries) {\r\n\t\t\t\tseries.invalidateProcessedData();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * [getStackValue description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic getStackValue(dataItem: this[\"_dataItem\"], working?: boolean): void {\r\n\t\t// todo: here wer stack x and y values only. question is - what should we do with other values, like openX, openY?\r\n\t\t// if this series is not stacked or new stack begins, return.\r\n\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\r\n\t\tif (!this.stacked || !xAxis || !yAxis) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// it might seem that it's better to go through base axis series, but we do not maintain the same order as in chart.series there.\r\n\t\t\tlet chart: XYChart = this.chart;\r\n\t\t\tlet index: number = chart.series.indexOf(this);\r\n\r\n\t\t\tlet field: string;\r\n\r\n\t\t\tif (xAxis != this.baseAxis && xAxis instanceof ValueAxis) {\r\n\t\t\t\tfield = this.xField;\r\n\t\t\t}\r\n\t\t\tif (yAxis != this.baseAxis && yAxis instanceof ValueAxis) {\r\n\t\t\t\tfield = this.yField;\r\n\t\t\t}\r\n\r\n\t\t\tif (!field) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//this is good for removing series, otherwise stack values will remain the same and chart won't pay atention when adding/removing series\t\t\t\r\n\t\t\tdataItem.setCalculatedValue(field, 0, \"stack\");\r\n\t\t\tdataItem.setCalculatedValue(field, 0, \"stackTrue\");\r\n\r\n\t\t\t$iter.eachContinue(chart.series.range(0, index).backwards().iterator(), (prevSeries) => {\r\n\t\t\t\t// stacking is only possible if both axes are the same\r\n\t\t\t\tif (prevSeries.xAxis == xAxis && prevSeries.yAxis == yAxis && prevSeries.className == this.className) {\r\n\t\t\t\t\t// saving value\r\n\t\t\t\t\tprevSeries.stackedSeries = this;\r\n\r\n\t\t\t\t\tlet prevDataItem = prevSeries.dataItems.getIndex(dataItem.index); // indexes should match\r\n\r\n\t\t\t\t\tif (prevDataItem && prevDataItem.hasValue(this._xValueFields) && prevDataItem.hasValue(this._yValueFields)) {\r\n\r\n\t\t\t\t\t\tlet value = dataItem.getValue(field);\r\n\r\n\t\t\t\t\t\tlet prevValue: number;\r\n\t\t\t\t\t\tlet prevStack = prevDataItem.getValue(field, \"stackTrue\");\r\n\t\t\t\t\t\tif (prevStack == null) {\r\n\t\t\t\t\t\t\tprevStack = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlet prevRealValue = prevDataItem.getValue(field) + prevStack;\r\n\t\t\t\t\t\tprevValue = prevDataItem.getWorkingValue(field) + prevDataItem.getValue(field, \"stack\");\r\n\r\n\t\t\t\t\t\tif (this.stackToNegative) {\r\n\t\t\t\t\t\t\tif ((value >= 0 && prevRealValue >= 0) || (value < 0 && prevRealValue < 0)) {\r\n\t\t\t\t\t\t\t\tdataItem.setCalculatedValue(field, prevValue, \"stack\");\r\n\t\t\t\t\t\t\t\tdataItem.setCalculatedValue(field, prevRealValue, \"stackTrue\");\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (!prevSeries.stacked) {\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tdataItem.setCalculatedValue(field, prevValue, \"stack\");\r\n\t\t\t\t\t\t\tdataItem.setCalculatedValue(field, prevRealValue, \"stackTrue\");\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (!prevSeries.stacked) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * This setting indicates how negative values are treated in stacked stacked\r\n\t * series.\r\n\t *\r\n\t * If set to `true` (default), negative values will stack on the base line.\r\n\t *\r\n\t * If set to `false`, negative value will stack in relation to the previous\r\n\t * value in the stack.\r\n\t *\r\n\t * @since 4.9.34\r\n\t * @param  value  Stack to base line\r\n\t */\r\n\tpublic set stackToNegative(value: boolean) {\r\n\t\tthis.setPropertyValue(\"stackToNegative\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Stack to base line\r\n\t */\r\n\tpublic get stackToNegative(): boolean {\r\n\t\treturn this.getPropertyValue(\"stackToNegative\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * [xField description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @return [description]\r\n\t */\r\n\tpublic get xField(): string {\r\n\t\treturn this._xField;\r\n\t}\r\n\r\n\t/**\r\n\t * [yField description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @return [description]\r\n\t */\r\n\tpublic get yField(): string {\r\n\t\treturn this._yField;\r\n\t}\r\n\r\n\t/**\r\n\t * [xOpenField description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @return [description]\r\n\t */\r\n\tpublic get xOpenField(): string {\r\n\t\treturn this._xOpenField;\r\n\t}\r\n\r\n\t/**\r\n\t * [yOpenField description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @return [description]\r\n\t */\r\n\tpublic get yOpenField(): string {\r\n\t\treturn this._yOpenField;\r\n\t}\r\n\r\n\t/**\r\n\t * [tooltipXField description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param value [description]\r\n\t */\r\n\tpublic set tooltipXField(value: string) {\r\n\t\tthis._tooltipXField = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @return [description]\r\n\t */\r\n\tpublic get tooltipXField(): string {\r\n\t\tif (this._tooltipXField) {\r\n\t\t\treturn this._tooltipXField;\r\n\t\t}\r\n\t\treturn this._xField;\r\n\t}\r\n\r\n\t/**\r\n\t * [tooltipYField description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param value [description]\r\n\t */\r\n\tpublic set tooltipYField(value: string) {\r\n\t\tthis._tooltipYField = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @return [description]\r\n\t */\r\n\tpublic get tooltipYField(): string {\r\n\t\tif (this._tooltipYField) {\r\n\t\t\treturn this._tooltipYField;\r\n\t\t}\r\n\t\treturn this._yField;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns lowest value in the series for the specific axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axis  Axis\r\n\t * @return value\r\n\t */\r\n\tpublic min(axis: ValueAxis): number {\r\n\t\treturn this._tmin.getKey(axis.uid);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns highest value in the series for the specific axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axis  Axis\r\n\t * @return value\r\n\t */\r\n\tpublic max(axis: ValueAxis): number {\r\n\t\treturn this._tmax.getKey(axis.uid);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns lowest value in the series for the specific axis within current\r\n\t * selection.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axis  Axis\r\n\t * @return value\r\n\t */\r\n\tpublic selectionMin(axis: ValueAxis): number {\r\n\t\tlet value = this._smin.getKey(axis.uid);\r\n\t\t// not good, because bad if there are no items with values in selection\r\n\t\t//if (!$type.isNumber(value)) {\r\n\t\t//value = this.min(axis);\r\n\t\t//}\t\t\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns highest value in the series for the specific axis within current\r\n\t * selection.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axis  Axis\r\n\t * @return value\r\n\t */\r\n\tpublic selectionMax(axis: ValueAxis): number {\r\n\t\tlet value = this._smax.getKey(axis.uid);\r\n\t\t// not good, because bad if there are no items with values in selection\r\n\t\t//if (!$type.isNumber(value)) {\r\n\t\t//value = this.max(axis);\r\n\t\t//}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up base axes\r\n\t\t\tif ($type.hasValue(config.baseAxis) && $type.isString(config.baseAxis)) {\r\n\t\t\t\tif (this.map.hasKey(config.baseAxis)) {\r\n\t\t\t\t\tconfig.baseAxis = this.map.getKey(config.baseAxis);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.baseAxis + \"\\\" found for `baseAxis`.\");\r\n\t\t\t\t\tdelete config.baseAxis;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Set up axes\r\n\t\t\tif ($type.hasValue(config.xAxis) && $type.isString(config.xAxis)) {\r\n\t\t\t\tif (this.map.hasKey(config.xAxis)) {\r\n\t\t\t\t\tconfig.xAxis = this.map.getKey(config.xAxis);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.xAxis + \"\\\" found for `xAxis`.\");\r\n\t\t\t\t\tdelete config.xAxis;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ($type.hasValue(config.yAxis) && $type.isString(config.yAxis)) {\r\n\t\t\t\tif (this.map.hasKey(config.yAxis)) {\r\n\t\t\t\t\tconfig.yAxis = this.map.getKey(config.yAxis);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.yAxis + \"\\\" found for `yAxis`.\");\r\n\t\t\t\t\tdelete config.yAxis;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Set up axis ranges\r\n\t\t\tif ($type.hasValue(config.axisRanges) && $type.isArray(config.axisRanges)) {\r\n\t\t\t\tfor (let i = 0, len = config.axisRanges.length; i < len; i++) {\r\n\t\t\t\t\tlet range = config.axisRanges[i];\r\n\t\t\t\t\tif (!$type.hasValue(range.type)) {\r\n\t\t\t\t\t\trange.type = \"AxisDataItem\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ($type.hasValue(range.axis) && $type.isString(range.axis) && this.map.hasKey(range.axis)) {\r\n\t\t\t\t\t\trange.component = this.map.getKey(range.axis);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if ($type.hasValue(range.component) && $type.isString(range.component) && this.map.hasKey(range.component)) {\r\n\t\t\t\t\t\trange.component = this.map.getKey(range.component);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Parse date fields based on the series fields\r\n\t\t\tif (!$type.hasValue(config.dataFields) || !$type.isObject(config.dataFields)) {\r\n\t\t\t\tthis.processingErrors.push(\"`dataFields` is not set for series [\" + (this.name || \"unnamed\") + \"]\");\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an [[IPoint]] coordinates of the specific Serie's data point.\r\n\t *\r\n\t * @param    dataItem   Data item\r\n\t * @param    xKey       Name of X data field\r\n\t * @param    yKey       Name of Y data field\r\n\t * @param    locationX  X location\r\n\t * @param    locationY  Y location\r\n\t * @param    stackKeyX  ?\r\n\t * @param    stackKeyY  ?\r\n\t * @returns             Coordinates\r\n\t */\r\n\tpublic getPoint(dataItem: XYSeriesDataItem, xKey: string, yKey: string, locationX?: number, locationY?: number, stackKeyX?: string, stackKeyY?: string): IPoint {\r\n\t\tif (this.xAxis && this.yAxis) {\r\n\t\t\tlet x: number = this.xAxis.getX(dataItem, xKey, locationX);\r\n\t\t\tlet y: number = this.yAxis.getY(dataItem, yKey, locationY);\r\n\r\n\t\t\tx = $math.fitToRange(x, -this._maxxX, this._maxxX); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\r\n\t\t\ty = $math.fitToRange(y, -this._maxxY, this._maxxY); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\r\n\r\n\t\t\treturn { x: x, y: y };\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates item reader text based on the type and set up of axis.\r\n\t */\r\n\tprotected updateItemReaderText(): void {\r\n\r\n\t\t// We do not want to overwrite this if `itemReaderText` was changed by\r\n\t\t// user code.\r\n\t\tif (this._itemReaderTextChanged) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet text = \"\"\r\n\t\t$object.each(this.dataFields, (key, val) => {\r\n\t\t\ttext += \"{\" + key + \"} \";\r\n\t\t});\r\n\t\tthis.itemReaderText = text;\r\n\t\tthis._itemReaderTextChanged = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if series should display a tooltip for chart's cursor.\r\n\t *\r\n\t * If set to `true` (default), the tooltips set for all series item's\r\n\t * elements like columns and bullets will be automatically shown\r\n\t * when [[XYCursor]] passes over category/date, even if its not hovered\r\n\t * directly over the item.\r\n\t *\r\n\t * Set this to `false` to disable such behavior and display item-specific\r\n\t * tooltips only when hovered directly over them\r\n\t *\r\n\t * @default true\r\n\t * @param value Display tooltip?\r\n\t */\r\n\tpublic set cursorTooltipEnabled(value: boolean) {\r\n\t\tthis.setPropertyValue(\"cursorTooltipEnabled\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Display tooltip?\r\n\t */\r\n\tpublic get cursorTooltipEnabled(): boolean {\r\n\t\treturn this.getPropertyValue(\"cursorTooltipEnabled\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if series should apply hover state on bullets/columns/etc when\r\n\t * cursor is over the data item.\r\n\t *\r\n\t * If set to `true` (default) and chart cursor is enabled on th chart,\r\n\t * hovering over date/category will trigger hover states on related Series\r\n\t * items like bullets and columns.\r\n\t *\r\n\t * @default true\r\n\t * @since 4.2.2\r\n\t * @param  value  Hover enabled?\r\n\t */\r\n\tpublic set cursorHoverEnabled(value: boolean) {\r\n\t\tthis.setPropertyValue(\"cursorHoverEnabled\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Hover enabled?\r\n\t */\r\n\tpublic get cursorHoverEnabled(): boolean {\r\n\t\treturn this.getPropertyValue(\"cursorHoverEnabled\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if series' values should be excluded when calculating totals.\r\n\t * \r\n\t * @default false\r\n\t * @since 4.4.9\r\n\t * @param  value  Exclude from totals?\r\n\t */\r\n\tpublic set excludeFromTotal(value: boolean) {\r\n\t\tthis.setPropertyValue(\"excludeFromTotal\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Exclude from totals?\r\n\t */\r\n\tpublic get excludeFromTotal(): boolean {\r\n\t\treturn this.getPropertyValue(\"excludeFromTotal\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if series' tooltip should be hidden while series axis range is\r\n\t * animating (zooming).\r\n\t * \r\n\t * @default true\r\n\t * @since 4.7.16\r\n\t * @param  value  Hide tooltip while zooming?\r\n\t */\r\n\tpublic set hideTooltipWhileZooming(value: boolean) {\r\n\t\tthis.setPropertyValue(\"hideTooltipWhileZooming\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Hide tooltip while zooming?\r\n\t */\r\n\tpublic get hideTooltipWhileZooming(): boolean {\r\n\t\treturn this.getPropertyValue(\"hideTooltipWhileZooming\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates if series' bullets should be masked.\r\n\t * \r\n\t * @default true\r\n\t * @since 4.7.17\r\n\t * @param  value  Mask bullets?\r\n\t */\r\n\tpublic set maskBullets(value: boolean) {\r\n\t\tthis.setPropertyValue(\"maskBullets\", value)\r\n\t\tlet chart = this.chart;\r\n\t\tif (chart) {\r\n\t\t\tif (value) {\r\n\t\t\t\tthis.bulletsContainer.parent = chart.bulletsContainer;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.bulletsContainer.parent = chart.axisBulletsContainer;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Mask bullets?\r\n\t */\r\n\tpublic get maskBullets(): boolean {\r\n\t\treturn this.getPropertyValue(\"maskBullets\");\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[Series]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tthis.groupFields = $utils.copyProperties(source.groupFields, {});\r\n\t\tsuper.copyFrom(source);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Destroys this object and all related data.\r\n\t */\r\n\tpublic dispose() {\r\n\t\tif (this.scrollbarSeries) {\r\n\t\t\tthis.scrollbarSeries.dispose();\r\n\t\t}\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"XYSeries\"] = XYSeries;\r\nregistry.registeredClasses[\"XYSeriesDataItem\"] = XYSeriesDataItem;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}