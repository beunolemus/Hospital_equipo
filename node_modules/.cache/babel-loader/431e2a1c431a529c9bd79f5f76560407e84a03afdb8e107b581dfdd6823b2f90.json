{"ast":null,"code":"import { xray } from '../../config/pluginInit';\nexport default {\n  name: 'SelectDemo',\n  mounted: function mounted() {\n    xray.index();\n  },\n  data: function data() {\n    return {\n      countries: [{\n        countryCode: 'GE',\n        countryName: 'Germany'\n      }, {\n        countryCode: 'AUS',\n        countryName: 'Australia'\n      }, {\n        countryCode: 'CA',\n        countryName: 'Canada'\n      }],\n      options: [{\n        id: 1,\n        label: 'foo'\n      }, {\n        id: 3,\n        label: 'bar'\n      }, {\n        id: 2,\n        label: 'baz'\n      }],\n      selected: {\n        id: 3,\n        label: 'bar'\n      },\n      selectedselection: ['foo', 'bar'],\n      optionsselection: ['foo', 'bar', 'baz'],\n      taggable: {\n        type: Boolean,\n        default: false\n      },\n      pushTags: {\n        type: Boolean,\n        default: false\n      }\n    };\n  }\n};","map":{"version":3,"names":["xray","name","mounted","index","data","countries","countryCode","countryName","options","id","label","selected","selectedselection","optionsselection","taggable","type","Boolean","default","pushTags"],"sources":["C:\\Users\\brnol\\Documents\\Hospital\\Hospital_equipo\\src\\views\\Plugins\\SelectDemo.vue"],"sourcesContent":["<template>\r\n  <b-container fluid>\r\n    <b-row>\r\n      <b-col cols=\"12\">\r\n        <iq-card>\r\n          <template v-slot:headerTitle>\r\n            <h4 class=\"card-title pt-3\"><b>Dropdown Options</b></h4>\r\n            <p>vue-select accepts arrays of strings or objects to use as options through the options prop</p>\r\n          </template>\r\n          <template v-slot:body>\r\n            <b-row>\r\n              <b-col cols=\"12\">\r\n                <iq-card class=\"shadow-none border\">\r\n                  <template v-slot:headerTitle>\r\n                    <h4 class=\"card-title\"><b>Basic</b></h4>\r\n                  </template>\r\n                  <template v-slot:headerAction>\r\n                    <a class=\"text-primary float-right\" v-b-toggle.collapse-1 role=\"button\">\r\n                      <i class=\"ri-code-s-slash-line\" />\r\n                    </a>\r\n                  </template>\r\n                  <template v-slot:body>\r\n                    <b-collapse id=\"collapse-1\" class=\"mb-2\">\r\n                      <div class=\"card\">\r\n                        <kbd class=\"bg-dark\">\r\n                          <!--                  <a href=\"javascript:void(0)\" v-b-tooltip.hover data-copy-target=\"#basic-datepicker\" title=\"Copy\" class=\"text-white float-right\" data-copy=\"true\">Copy</a>-->\r\n                          <pre class=\"text-white\" id=\"basic-dropdown\"><code>\r\n&#x3C;template&#x3E;\r\n  &#x3C;v-select name=&#x22;user_id&#x22;  :options=&#x22;[ &#x27;Name &#x27;,&#x27;name&#x27;]&#x22;/&#x3E;\r\n  &#x3C;v-select name=&#x22;user_id&#x22; :options=&#x22;[{label: &#x27;Name &#x27;,value: &#x27;name&#x27;}]&#x22; /&#x3E;\r\n&#x3C;/template&#x3E;\r\n&#x3C;script&#x3E;\r\nexport default {\r\n name: &#x27;SelectDemo&#x27;,\r\ndata(){\r\n  return {}\r\n   }\r\n  }\r\n&#x3C;/script&#x3E;\r\n</code></pre>\r\n                        </kbd>\r\n                      </div>\r\n                    </b-collapse>\r\n                    <v-select name=\"user_id\" :options=\"['Name ', 'name']\" />\r\n                    <p>When provided an array of objects, vue-select will display a single value of the object. By default, vue-select will look for a key named label on the object to use as display text</p>\r\n                    <v-select name=\"user_id\" :options=\"[{ label: 'Name ', value: 'name' }]\" />\r\n                  </template>\r\n                </iq-card>\r\n              </b-col>\r\n            </b-row>\r\n            <b-row>\r\n              <b-col cols=\"12\">\r\n                <iq-card class=\"shadow-none border\">\r\n                  <template v-slot:headerTitle>\r\n                    <h4 class=\"card-title\"><b>Option label</b></h4>\r\n                  </template>\r\n                  <template v-slot:headerAction>\r\n                    <a class=\"text-primary float-right\" v-b-toggle.collapse-2 role=\"button\">\r\n                      <i class=\"ri-code-s-slash-line\" />\r\n                    </a>\r\n                  </template>\r\n                  <template v-slot:body>\r\n                    <b-collapse id=\"collapse-2\" class=\"mb-2\">\r\n                      <div class=\"card\">\r\n                        <kbd class=\"bg-dark\">\r\n                          <!--                  <a href=\"javascript:void(0)\" v-b-tooltip.hover data-copy-target=\"#basic-datepicker\" title=\"Copy\" class=\"text-white float-right\" data-copy=\"true\">Copy</a>-->\r\n                          <pre class=\"text-white\" id=\"Option-label-dropdown\"><code>\r\n&#x3C;template&#x3E;\r\n  &#x3C;v-select name=&#x22;user_id&#x22; label=&#x22;countryName&#x22; :options= countries /&#x3E;\r\n&#x3C;/template&#x3E;\r\n&#x3C;script&#x3E;\r\nexport default {\r\n name: &#x27;SelectDemo&#x27;,\r\ndata(){\r\n  return {\r\n      countries: [\r\n        {\r\n          countryCode: &#x27;GE&#x27;,\r\n          countryName: &#x27;Germany&#x27;\r\n        },\r\n        {\r\n          countryCode: &#x27;AUS&#x27;,\r\n          countryName: &#x27;Australia&#x27;\r\n        },\r\n        {\r\n          countryCode: &#x27;CA&#x27;,\r\n          countryName: &#x27;Canada&#x27;\r\n        }\r\n      ]\r\n    }\r\n   }\r\n  }\r\n&#x3C;/script&#x3E;\r\n</code></pre>\r\n                        </kbd>\r\n                      </div>\r\n                    </b-collapse>\r\n                    <p>When the options array contains objects, vue-select looks for the label key to display by default. You can set your own label to match your source data using the label prop</p>\r\n                    <v-select name=\"user_id\" label=\"countryName\" :options=\"countries\" />\r\n                  </template>\r\n                </iq-card>\r\n              </b-col>\r\n            </b-row>\r\n          </template>\r\n        </iq-card>\r\n      </b-col>\r\n      <b-col cols=\"12\">\r\n        <iq-card>\r\n          <template v-slot:headerTitle>\r\n            <h4 class=\"card-title\"><b>Selecting values</b></h4>\r\n          </template>\r\n          <template v-slot:body>\r\n            <b-row>\r\n              <b-col cols=\"12\">\r\n                <iq-card class=\"shadow-none border\">\r\n                  <template v-slot:headerTitle>\r\n                    <h4 class=\"card-title\"><b>Default</b></h4>\r\n                    <p>The most common use case for vue-select is to have the chosen value synced with a parent component. vue-select takes advantage of the v-model syntax to sync values with a parent</p>\r\n                  </template>\r\n                  <template v-slot:headerAction>\r\n                    <a class=\"text-primary float-right\" v-b-toggle.collapse-3 role=\"button\">\r\n                      <i class=\"ri-code-s-slash-line\" />\r\n                    </a>\r\n                  </template>\r\n                  <template v-slot:body>\r\n                    <b-collapse id=\"collapse-3\" class=\"mb-2\">\r\n                      <div class=\"card\">\r\n                        <kbd class=\"bg-dark\">\r\n                          <!--                  <a href=\"javascript:void(0)\" v-b-tooltip.hover data-copy-target=\"#basic-datepicker\" title=\"Copy\" class=\"text-white float-right\" data-copy=\"true\">Copy</a>-->\r\n                          <pre class=\"text-white\" id=\"default-dropdown\"><code>\r\n&#x3C;template&#x3E;\r\n &#x3C;v-select name=&#x22;user_id&#x22; v-model=&#x22;selected&#x22; :options=&#x22;options&#x22; /&#x3E;\r\n&#x3C;/template&#x3E;\r\n&#x3C;script&#x3E;\r\nexport default {\r\n name: &#x27;SelectDemo&#x27;,\r\ndata(){\r\n  return {\r\n      options: [\r\n        { id: 1, label: &#x27;foo&#x27; },\r\n        { id: 3, label: &#x27;bar&#x27; },\r\n        { id: 2, label: &#x27;baz&#x27; }\r\n      ],\r\n      selected: { id: 3, label: &#x27;bar&#x27; }\r\n   }\r\n  }\r\n}\r\n&#x3C;/script&#x3E;\r\n</code></pre>\r\n                        </kbd>\r\n                      </div>\r\n                    </b-collapse>\r\n                    <v-select name=\"user_id\" v-model=\"selected\" :options=\"options\" />\r\n                  </template>\r\n                </iq-card>\r\n              </b-col>\r\n            </b-row>\r\n            <b-row>\r\n              <b-col cols=\"12\">\r\n                <iq-card class=\"shadow-none border\">\r\n                  <template v-slot:headerTitle>\r\n                    <h4 class=\"card-title\"><b>Single/Multiple Selection</b></h4>\r\n                    <p>By default, vue-select supports choosing a single value. If you need multiple values, use the multiple prop</p>\r\n                  </template>\r\n                  <template v-slot:headerAction>\r\n                    <a class=\"text-primary float-right\" v-b-toggle.collapse-4 role=\"button\">\r\n                      <i class=\"ri-code-s-slash-line\" />\r\n                    </a>\r\n                  </template>\r\n                  <template v-slot:body>\r\n                    <b-collapse id=\"collapse-4\" class=\"mb-2\">\r\n                      <div class=\"card\">\r\n                        <kbd class=\"bg-dark\">\r\n                          <!--                  <a href=\"javascript:void(0)\" v-b-tooltip.hover data-copy-target=\"#basic-datepicker\" title=\"Copy\" class=\"text-white float-right\" data-copy=\"true\">Copy</a>-->\r\n                          <pre class=\"text-white\" id=\"single-multiple-dropdown\"><code>\r\n&#x3C;template&#x3E;\r\n  &#x3C;v-select multiple :closeOnSelect=&#x22;false&#x22; v-model=&#x22;selectedselection&#x22; :options=&#x22;optionsselection&#x22;&#x3E;&#x3C;/v-select&#x3E;\r\n&#x3C;/template&#x3E;\r\n&#x3C;script&#x3E;\r\nexport default {\r\n name: &#x27;SelectDemo&#x27;,\r\ndata(){\r\n  return {\r\n      selectedselection: [&#x27;foo&#x27;, &#x27;bar&#x27;],\r\n      optionsselection: [&#x27;foo&#x27;, &#x27;bar&#x27;, &#x27;baz&#x27;]\r\n   }\r\n  }\r\n}\r\n&#x3C;/script&#x3E;\r\n</code></pre>\r\n                        </kbd>\r\n                      </div>\r\n                    </b-collapse>\r\n                    <v-select multiple :closeOnSelect=\"false\" v-model=\"selectedselection\" :options=\"optionsselection\"></v-select>\r\n                  </template>\r\n                </iq-card>\r\n              </b-col>\r\n            </b-row>\r\n            <b-row>\r\n              <b-col cols=\"12\">\r\n                <iq-card class=\"shadow-none border\">\r\n                  <template v-slot:headerTitle>\r\n                    <h4 class=\"card-title\"><b>Tagging</b></h4>\r\n                    <p>To allow input that's not present within the options, set the taggable prop to true. If you want new tags to be pushed to the options list, set push-tags to true</p>\r\n                  </template>\r\n                  <template v-slot:headerAction>\r\n                    <a class=\"text-primary float-right\" v-b-toggle.collapse-5 role=\"button\">\r\n                      <i class=\"ri-code-s-slash-line\" />\r\n                    </a>\r\n                  </template>\r\n                  <template v-slot:body>\r\n                    <b-collapse id=\"collapse-5\" class=\"mb-2\">\r\n                      <div class=\"card\">\r\n                        <kbd class=\"bg-dark\">\r\n                          <!--                  <a href=\"javascript:void(0)\" v-b-tooltip.hover data-copy-target=\"#basic-datepicker\" title=\"Copy\" class=\"text-white float-right\" data-copy=\"true\">Copy</a>-->\r\n                          <pre class=\"text-white\" id=\"tagging-dropdown\"><code>\r\n&#x3C;template&#x3E;\r\n  &#x3C;h6&#x3E;Vue Select - Taggable&#x3C;/h6&#x3E;\r\n    &#x3C;v-select taggable /&#x3E;&#x3C;br&#x3E;\r\n  &#x3C;h6&#x3E;Vue Select - Taggable &#x26;amp; Push-Tags&#x3C;/h6&#x3E;\r\n    &#x3C;v-select taggable push-tags/&#x3E;\r\n&#x3C;/template&#x3E;\r\n&#x3C;script&#x3E;\r\nexport default {\r\n name: &#x27;SelectDemo&#x27;,\r\ndata(){\r\n  return {\r\n     taggable: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      pushTags: {\r\n        type: Boolean,\r\n        default: false\r\n      }\r\n   }\r\n  }\r\n}\r\n&#x3C;/script&#x3E;\r\n</code></pre>\r\n                        </kbd>\r\n                      </div>\r\n                    </b-collapse>\r\n                    <h6>Vue Select - Taggable</h6>\r\n                    <v-select taggable /><br />\r\n                    <h6>Vue Select - Taggable &amp; Push-Tags</h6>\r\n                    <v-select taggable push-tags />\r\n                  </template>\r\n                </iq-card>\r\n              </b-col>\r\n            </b-row>\r\n          </template>\r\n        </iq-card>\r\n      </b-col>\r\n    </b-row>\r\n  </b-container>\r\n</template>\r\n<script>\r\nimport { xray } from '../../config/pluginInit'\r\n\r\nexport default {\r\n  name: 'SelectDemo',\r\n  mounted() {\r\n    xray.index()\r\n  },\r\n  data() {\r\n    return {\r\n      countries: [\r\n        {\r\n          countryCode: 'GE',\r\n          countryName: 'Germany'\r\n        },\r\n        {\r\n          countryCode: 'AUS',\r\n          countryName: 'Australia'\r\n        },\r\n        {\r\n          countryCode: 'CA',\r\n          countryName: 'Canada'\r\n        }\r\n      ],\r\n      options: [\r\n        { id: 1, label: 'foo' },\r\n        { id: 3, label: 'bar' },\r\n        { id: 2, label: 'baz' }\r\n      ],\r\n      selected: { id: 3, label: 'bar' },\r\n      selectedselection: ['foo', 'bar'],\r\n      optionsselection: ['foo', 'bar', 'baz'],\r\n      taggable: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      pushTags: {\r\n        type: Boolean,\r\n        default: false\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"AAkQA,SAASA,IAAG,QAAS,yBAAwB;AAE7C,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,OAAO,WAAAA,QAAA,EAAG;IACRF,IAAI,CAACG,KAAK,CAAC;EACb,CAAC;EACDC,IAAI,WAAAA,KAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,CACT;QACEC,WAAW,EAAE,IAAI;QACjBC,WAAW,EAAE;MACf,CAAC,EACD;QACED,WAAW,EAAE,KAAK;QAClBC,WAAW,EAAE;MACf,CAAC,EACD;QACED,WAAW,EAAE,IAAI;QACjBC,WAAW,EAAE;MACf,EACD;MACDC,OAAO,EAAE,CACP;QAAEC,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE;MAAM,CAAC,EACvB;QAAED,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE;MAAM,CAAC,EACvB;QAAED,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE;MAAM,EACvB;MACDC,QAAQ,EAAE;QAAEF,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE;MAAM,CAAC;MACjCE,iBAAiB,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;MACjCC,gBAAgB,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;MACvCC,QAAQ,EAAE;QACRC,IAAI,EAAEC,OAAO;QACbC,OAAO,EAAE;MACX,CAAC;MACDC,QAAQ,EAAE;QACRH,IAAI,EAAEC,OAAO;QACbC,OAAO,EAAE;MACX;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}