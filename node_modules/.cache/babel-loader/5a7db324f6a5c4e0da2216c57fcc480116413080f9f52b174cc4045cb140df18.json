{"ast":null,"code":"import \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/**\r\n * Candlestick Series module.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { ColumnSeries, ColumnSeriesDataItem } from \"./ColumnSeries\";\nimport { visualProperties } from \"../../core/Sprite\";\nimport { Candlestick } from \"../elements/Candlestick\";\nimport { registry } from \"../../core/Registry\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\nimport * as $utils from \"../../core/utils/Utils\";\nimport * as $object from \"../../core/utils/Object\";\nimport * as $iter from \"../../core/utils/Iterator\";\nimport * as $type from \"../../core/utils/Type\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Defines a [[DataItem]] for [[CandlestickSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\nvar CandlestickSeriesDataItem = /** @class */function (_super) {\n  __extends(CandlestickSeriesDataItem, _super);\n  /**\r\n   * Defines a type of [[Component]] this data item is used for\r\n   * @todo Disabled to work around TS bug (see if we can re-enable it again)\r\n   */\n  //public _component!: CandlestickSeries;\n  /**\r\n   * Constructor\r\n   */\n  function CandlestickSeriesDataItem() {\n    var _this = _super.call(this) || this;\n    _this.values.lowValueX = {};\n    _this.values.lowValueY = {};\n    _this.values.highValueX = {};\n    _this.values.highValueY = {};\n    _this.className = \"CandlestickSeriesDataItem\";\n    _this.applyTheme();\n    return _this;\n  }\n  Object.defineProperty(CandlestickSeriesDataItem.prototype, \"lowValueX\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function get() {\n      return this.values.lowValueX.value;\n    },\n    /**\r\n     * Low value for horizontal axis.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function set(value) {\n      this.setValue(\"lowValueX\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CandlestickSeriesDataItem.prototype, \"lowValueY\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function get() {\n      return this.values.lowValueY.value;\n    },\n    /**\r\n     * Low value for vertical axis.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function set(value) {\n      this.setValue(\"lowValueY\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CandlestickSeriesDataItem.prototype, \"highValueX\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function get() {\n      return this.values.highValueX.value;\n    },\n    /**\r\n     * High value for horizontal axis.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function set(value) {\n      this.setValue(\"highValueX\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CandlestickSeriesDataItem.prototype, \"highValueY\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function get() {\n      return this.values.highValueY.value;\n    },\n    /**\r\n     * High value for vertical axis.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function set(value) {\n      this.setValue(\"highValueY\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CandlestickSeriesDataItem.prototype, \"closeValueX\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function get() {\n      return this.values.valueX.value;\n    },\n    /**\r\n     * Close value for horizontal axis.\r\n     *\r\n     * This is an alias for `valueX` added for convenience only.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function set(value) {\n      this.setValue(\"valueX\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CandlestickSeriesDataItem.prototype, \"closeValueY\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function get() {\n      return this.values.valueY.value;\n    },\n    /**\r\n     * Close value for vertical axis.\r\n     *\r\n     * This is an alias for `valueX` added for convenience only.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function set(value) {\n      this.setValue(\"valueY\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return CandlestickSeriesDataItem;\n}(ColumnSeriesDataItem);\nexport { CandlestickSeriesDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Defines [[Series]] for a candlestick graph.\r\n *\r\n * @see {@link ICandlestickSeriesEvents} for a list of available Events\r\n * @see {@link ICandlestickSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\nvar CandlestickSeries = /** @class */function (_super) {\n  __extends(CandlestickSeries, _super);\n  /**\r\n   * Constructor\r\n   */\n  function CandlestickSeries() {\n    var _this = _super.call(this) || this;\n    _this.className = \"CandlestickSeries\";\n    _this.groupFields.lowValueX = \"low\";\n    _this.groupFields.lowValueY = \"low\";\n    _this.groupFields.highValueX = \"high\";\n    _this.groupFields.highValueY = \"high\";\n    _this.strokeOpacity = 1;\n    var interfaceColors = new InterfaceColorSet();\n    var positiveColor = interfaceColors.getFor(\"positive\");\n    var negativeColor = interfaceColors.getFor(\"negative\");\n    _this.dropFromOpenState.properties.fill = negativeColor;\n    _this.dropFromOpenState.properties.stroke = negativeColor;\n    _this.riseFromOpenState.properties.fill = positiveColor;\n    _this.riseFromOpenState.properties.stroke = positiveColor;\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * Sets defaults that instantiate some objects that rely on parent, so they\r\n   * cannot be set in constructor.\r\n   */\n  CandlestickSeries.prototype.applyInternalDefaults = function () {\n    _super.prototype.applyInternalDefaults.call(this);\n    if (!$type.hasValue(this.readerTitle)) {\n      this.readerTitle = this.language.translate(\"Candlestick Series\");\n    }\n  };\n  /**\r\n   * Returns a new/empty DataItem of the type appropriate for this object.\r\n   *\r\n   * @see {@link DataItem}\r\n   * @return Data Item\r\n   */\n  CandlestickSeries.prototype.createDataItem = function () {\n    return new CandlestickSeriesDataItem();\n  };\n  /**\r\n   * Validates data item's element, effectively redrawing it.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItem  Data item\r\n   */\n  CandlestickSeries.prototype.validateDataElementReal = function (dataItem) {\n    _super.prototype.validateDataElementReal.call(this, dataItem);\n    this.validateCandlestick(dataItem);\n  };\n  CandlestickSeries.prototype.validateCandlestick = function (dataItem) {\n    var column = dataItem.column;\n    if (column) {\n      var lowLine_1 = column.lowLine;\n      var highLine_1 = column.highLine;\n      if (this.baseAxis == this.xAxis) {\n        var x = column.pixelWidth / 2;\n        lowLine_1.x = x;\n        highLine_1.x = x;\n        var open_1 = dataItem.getWorkingValue(this.yOpenField);\n        var close_1 = dataItem.getWorkingValue(this.yField);\n        var yOpen = this.yAxis.getY(dataItem, this.yOpenField);\n        var yClose = this.yAxis.getY(dataItem, this.yField);\n        var yLow = this.yAxis.getY(dataItem, this.yLowField);\n        var yHigh = this.yAxis.getY(dataItem, this.yHighField);\n        var pixelY = column.pixelY;\n        lowLine_1.y1 = yLow - pixelY;\n        highLine_1.y1 = yHigh - pixelY;\n        if (open_1 < close_1) {\n          lowLine_1.y2 = yOpen - pixelY;\n          highLine_1.y2 = yClose - pixelY;\n        } else {\n          lowLine_1.y2 = yClose - pixelY;\n          highLine_1.y2 = yOpen - pixelY;\n        }\n      }\n      if (this.baseAxis == this.yAxis) {\n        var y = column.pixelHeight / 2;\n        lowLine_1.y = y;\n        highLine_1.y = y;\n        var open_2 = dataItem.getWorkingValue(this.xOpenField);\n        var close_2 = dataItem.getWorkingValue(this.xField);\n        var xOpen = this.xAxis.getX(dataItem, this.xOpenField);\n        var xClose = this.xAxis.getX(dataItem, this.xField);\n        var xLow = this.xAxis.getX(dataItem, this.xLowField);\n        var xHigh = this.xAxis.getX(dataItem, this.xHighField);\n        var pixelX = column.pixelX;\n        lowLine_1.x1 = xLow - pixelX;\n        highLine_1.x1 = xHigh - pixelX;\n        if (open_2 < close_2) {\n          lowLine_1.x2 = xOpen - pixelX;\n          highLine_1.x2 = xClose - pixelX;\n        } else {\n          lowLine_1.x2 = xClose - pixelX;\n          highLine_1.x2 = xOpen - pixelX;\n        }\n      }\n      $iter.each(this.axisRanges.iterator(), function (axisRange) {\n        // LOW LINE\n        var rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);\n        if (rangeColumn) {\n          var rangeLowLine = rangeColumn.lowLine;\n          rangeLowLine.x = lowLine_1.x;\n          rangeLowLine.y = lowLine_1.y;\n          rangeLowLine.x1 = lowLine_1.x1;\n          rangeLowLine.x2 = lowLine_1.x2;\n          rangeLowLine.y1 = lowLine_1.y1;\n          rangeLowLine.y2 = lowLine_1.y2;\n          // HIGH LINE\n          var rangehighLine = rangeColumn.highLine;\n          rangehighLine.x = highLine_1.x;\n          rangehighLine.y = highLine_1.y;\n          rangehighLine.x1 = highLine_1.x1;\n          rangehighLine.x2 = highLine_1.x2;\n          rangehighLine.y1 = highLine_1.y1;\n          rangehighLine.y2 = highLine_1.y2;\n        }\n      });\n    }\n  };\n  Object.defineProperty(CandlestickSeries.prototype, \"xLowField\", {\n    /**\r\n     * A data field to look for \"low\" value for horizontal axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Field name\r\n     */\n    get: function get() {\n      return this._xLowField;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CandlestickSeries.prototype, \"yLowField\", {\n    /**\r\n     * A data field to look for \"low\" value for vertical axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Field name\r\n     */\n    get: function get() {\n      return this._yLowField;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CandlestickSeries.prototype, \"xHighField\", {\n    /**\r\n     * A data field to look for \"high\" value for horizontal axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Field name\r\n     */\n    get: function get() {\n      return this._xHighField;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CandlestickSeries.prototype, \"yHighField\", {\n    /**\r\n     * A data field to look for \"high\" value for vertical axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Field name\r\n     */\n    get: function get() {\n      return this._yHighField;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Sets up which data fields to use for data access.\r\n   */\n  CandlestickSeries.prototype.defineFields = function () {\n    _super.prototype.defineFields.call(this);\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n    if (xAxis && yAxis) {\n      if (this.baseAxis == xAxis) {\n        var yAxisFieldName = $utils.capitalize(yAxis.axisFieldName);\n        this._yLowField = \"low\" + yAxisFieldName + \"Y\";\n        this._yHighField = \"high\" + yAxisFieldName + \"Y\";\n      }\n      if (this.baseAxis == yAxis) {\n        var xAxisFieldName = $utils.capitalize(xAxis.axisFieldName);\n        this._xLowField = \"low\" + xAxisFieldName + \"X\";\n        this._xHighField = \"high\" + xAxisFieldName + \"X\";\n      }\n      this.addValueField(xAxis, this._xValueFields, this._xLowField);\n      this.addValueField(xAxis, this._xValueFields, this._xHighField);\n      this.addValueField(yAxis, this._yValueFields, this._yLowField);\n      this.addValueField(yAxis, this._yValueFields, this._yHighField);\n    }\n  };\n  /**\r\n   * Creates elements in related legend container, that mimics the look of this\r\n   * Series.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param marker  Legend item container\r\n   */\n  CandlestickSeries.prototype.createLegendMarker = function (marker) {\n    var w = marker.pixelWidth;\n    var h = marker.pixelHeight;\n    marker.removeChildren();\n    var column = marker.createChild(Candlestick);\n    column.shouldClone = false;\n    column.copyFrom(this.columns.template);\n    var cw;\n    var ch;\n    var highLine = column.lowLine;\n    var lowLine = column.highLine;\n    if (this.baseAxis == this.yAxis) {\n      cw = w / 3;\n      ch = h;\n      highLine.y = h / 2;\n      lowLine.y = h / 2;\n      highLine.x2 = w / 3;\n      lowLine.x2 = w / 3;\n      lowLine.x = w / 3 * 2;\n      column.column.x = w / 3;\n    } else {\n      cw = w;\n      ch = h / 3;\n      highLine.x = w / 2;\n      lowLine.x = w / 2;\n      highLine.y2 = h / 3;\n      lowLine.y2 = h / 3;\n      lowLine.y = h / 3 * 2;\n      column.column.y = h / 3;\n    }\n    column.width = cw;\n    column.height = ch;\n    $object.copyProperties(this, marker, visualProperties);\n    $object.copyProperties(this.columns.template, column, visualProperties);\n    column.stroke = this.riseFromOpenState.properties.stroke;\n    column.fill = column.stroke;\n    var legendDataItem = marker.dataItem;\n    legendDataItem.color = column.fill;\n    legendDataItem.colorOrig = column.fill;\n  };\n  /**\r\n   * Returns an element to use for Candlestick\r\n   * @ignore\r\n   * @return Element.\r\n   */\n  CandlestickSeries.prototype.createColumnTemplate = function () {\n    return new Candlestick();\n  };\n  return CandlestickSeries;\n}(ColumnSeries);\nexport { CandlestickSeries };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"CandlestickSeries\"] = CandlestickSeries;\nregistry.registeredClasses[\"CandlestickSeriesDataItem\"] = CandlestickSeriesDataItem;","map":{"version":3,"names":["ColumnSeries","ColumnSeriesDataItem","visualProperties","Candlestick","registry","InterfaceColorSet","$utils","$object","$iter","$type","CandlestickSeriesDataItem","_super","__extends","_this","call","values","lowValueX","lowValueY","highValueX","highValueY","className","applyTheme","Object","defineProperty","prototype","get","value","set","setValue","valueX","valueY","CandlestickSeries","groupFields","strokeOpacity","interfaceColors","positiveColor","getFor","negativeColor","dropFromOpenState","properties","fill","stroke","riseFromOpenState","applyInternalDefaults","hasValue","readerTitle","language","translate","createDataItem","validateDataElementReal","dataItem","validateCandlestick","column","lowLine_1","lowLine","highLine_1","highLine","baseAxis","xAxis","x","pixelWidth","open_1","getWorkingValue","yOpenField","close_1","yField","yOpen","yAxis","getY","yClose","yLow","yLowField","yHigh","yHighField","pixelY","y1","y2","y","pixelHeight","open_2","xOpenField","close_2","xField","xOpen","getX","xClose","xLow","xLowField","xHigh","xHighField","pixelX","x1","x2","each","axisRanges","iterator","axisRange","rangeColumn","rangesColumns","getKey","uid","rangeLowLine","rangehighLine","_xLowField","_yLowField","_xHighField","_yHighField","defineFields","yAxisFieldName","capitalize","axisFieldName","xAxisFieldName","addValueField","_xValueFields","_yValueFields","createLegendMarker","marker","w","h","removeChildren","createChild","shouldClone","copyFrom","columns","template","cw","ch","width","height","copyProperties","legendDataItem","color","colorOrig","createColumnTemplate","registeredClasses"],"sources":["../../../../../src/.internal/charts/series/CandlestickSeries.ts"],"sourcesContent":["/**\r\n * Candlestick Series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ColumnSeries, ColumnSeriesDataItem, IColumnSeriesDataFields, IColumnSeriesProperties, IColumnSeriesAdapters, IColumnSeriesEvents } from \"./ColumnSeries\";\r\nimport { GroupField, IXYSeriesGroupFields } from \"./XYSeries\";\r\nimport { visualProperties } from \"../../core/Sprite\";\r\nimport { Line } from \"../../core/elements/Line\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { Candlestick } from \"../elements/Candlestick\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { LegendDataItem } from \"../../charts/Legend\";\r\nimport { CalculatedValue } from \"../../core/Component\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[CandlestickSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class CandlestickSeriesDataItem extends ColumnSeriesDataItem {\r\n\r\n\t/**\r\n\t * A sprite used to draw the column.\r\n\t */\r\n\tpublic _column: Candlestick;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for\r\n\t * @todo Disabled to work around TS bug (see if we can re-enable it again)\r\n\t */\r\n\t//public _component!: CandlestickSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.values.lowValueX = {};\r\n\t\tthis.values.lowValueY = {};\r\n\t\tthis.values.highValueX = {};\r\n\t\tthis.values.highValueY = {};\r\n\r\n\t\tthis.className = \"CandlestickSeriesDataItem\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Low value for horizontal axis.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set lowValueX(value: number) {\r\n\t\tthis.setValue(\"lowValueX\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get lowValueX(): number {\r\n\t\treturn this.values.lowValueX.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Low value for vertical axis.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set lowValueY(value: number) {\r\n\t\tthis.setValue(\"lowValueY\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get lowValueY(): number {\r\n\t\treturn this.values.lowValueY.value;\r\n\t}\r\n\r\n\t/**\r\n\t * High value for horizontal axis.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set highValueX(value: number) {\r\n\t\tthis.setValue(\"highValueX\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get highValueX(): number {\r\n\t\treturn this.values.highValueX.value;\r\n\t}\r\n\r\n\t/**\r\n\t * High value for vertical axis.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set highValueY(value: number) {\r\n\t\tthis.setValue(\"highValueY\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get highValueY(): number {\r\n\t\treturn this.values.highValueY.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Close value for horizontal axis.\r\n\t *\r\n\t * This is an alias for `valueX` added for convenience only.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set closeValueX(value: number) {\r\n\t\tthis.setValue(\"valueX\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get closeValueX(): number {\r\n\t\treturn this.values.valueX.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Close value for vertical axis.\r\n\t *\r\n\t * This is an alias for `valueX` added for convenience only.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set closeValueY(value: number) {\r\n\t\tthis.setValue(\"valueY\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get closeValueY(): number {\r\n\t\treturn this.values.valueY.value;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[CandlestickSeries]].\r\n */\r\nexport interface ICandlestickSeriesDataFields extends IColumnSeriesDataFields {\r\n\r\n\t/**\r\n\t * Field name in data which holds low numeric value for horizontal axis.\r\n\t */\r\n\tlowValueX?: string;\r\n\r\n\t/**\r\n\t * Field name in data which holds low numeric value for vertical axis.\r\n\t */\r\n\tlowValueY?: string;\r\n\r\n\t/**\r\n\t * Field name in data which holds high numeric value for horizontal axis.\r\n\t */\r\n\thighValueX?: string;\r\n\r\n\t/**\r\n\t * Field name in data which holds low numeric value for vertical axis.\r\n\t */\r\n\thighValueY?: string;\r\n\r\n\t/**\r\n\t * Field name in data which holds low date for horizontal axis.\r\n\t */\r\n\tlowDateX?: string;\r\n\r\n\t/**\r\n\t * Field name in data which holds low date for vertical axis.\r\n\t */\r\n\tlowDateY?: string;\r\n\r\n\t/**\r\n\t * Field name in data which holds high date for horizontal axis.\r\n\t */\r\n\thighDateX?: string;\r\n\r\n\t/**\r\n\t * Field name in data which holds high date for vertical axis.\r\n\t */\r\n\thighDateY?: string;\r\n\r\n\t/**\r\n\t * Which calculated field to use to use as a horizontal axis high value for\r\n\t * the item.\r\n\t */\r\n\thighValueXShow?: CalculatedValue;\r\n\r\n\t/**\r\n\t * Which calculated field to use to use as a horizontal axis low value for\r\n\t * the item.\r\n\t */\r\n\tlowValueXShow?: CalculatedValue;\r\n\r\n\t/**\r\n\t * Which calculated field to use to use as a vertical axis low value for\r\n\t * the item.\r\n\t */\r\n\tlowValueYShow?: CalculatedValue;\r\n\r\n\t/**\r\n\t * Which calculated field to use to use as a vertical axis high value for\r\n\t * the item.\r\n\t */\r\n\thighValueYShow?: CalculatedValue;\r\n\r\n}\r\n\r\n/**\r\n * Defines data fields that can be calculated for aggregate values.\r\n * \r\n * @since 4.7.0\r\n */\r\nexport interface ICandlestickSeriesGroupFields extends IXYSeriesGroupFields {\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `lowValueX` data field.\r\n\t *\r\n\t * @default \"low\"\r\n\t */\r\n\tlowValueX?: GroupField;\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `lowValueY` data field.\r\n\t *\r\n\t * @default \"low\"\r\n\t */\r\n\tlowValueY?: GroupField;\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `highValueX` data field.\r\n\t *\r\n\t * @default \"high\"\r\n\t */\r\n\thighValueX?: GroupField;\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `highValueY` data field.\r\n\t *\r\n\t * @default \"high\"\r\n\t */\r\n\thighValueY?: GroupField;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[CandlestickSeries]].\r\n */\r\nexport interface ICandlestickSeriesProperties extends IColumnSeriesProperties { }\r\n\r\n/**\r\n * Defines events for [[CandlestickSeries]].\r\n */\r\nexport interface ICandlestickSeriesEvents extends IColumnSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[CandlestickSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICandlestickSeriesAdapters extends IColumnSeriesAdapters, ICandlestickSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a candlestick graph.\r\n *\r\n * @see {@link ICandlestickSeriesEvents} for a list of available Events\r\n * @see {@link ICandlestickSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nexport class CandlestickSeries extends ColumnSeries {\r\n\r\n\t/**\r\n\t * Defines type of the group fields.\r\n\t * \r\n\t * @ignore\r\n\t * @since 4.7.0\r\n\t */\r\n\tpublic _groupFields: ICandlestickSeriesGroupFields;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: CandlestickSeriesDataItem;\r\n\r\n\t/**\r\n\t * Sets type of the column.\r\n\t */\r\n\tpublic _column: Candlestick;\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: ICandlestickSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ICandlestickSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICandlestickSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ICandlestickSeriesEvents;\r\n\r\n\t/**\r\n\t * A data field to look for \"low\" value for horizontal axis.\r\n\t */\r\n\tprotected _xLowField: $type.Keyof<this[\"_dataFields\"]>;\r\n\r\n\t/**\r\n\t * A data field to look for \"low\" value for vertical axis.\r\n\t */\r\n\tprotected _yLowField: $type.Keyof<this[\"_dataFields\"]>;\r\n\r\n\t/**\r\n\t * A data field to look for \"high\" value for horizontal axis.\r\n\t */\r\n\tprotected _xHighField: $type.Keyof<this[\"_dataFields\"]>;\r\n\r\n\t/**\r\n\t * A data field to look for \"high\" value for vertical axis.\r\n\t */\r\n\tprotected _yHighField: $type.Keyof<this[\"_dataFields\"]>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"CandlestickSeries\";\r\n\r\n\t\tthis.groupFields.lowValueX = \"low\";\r\n\t\tthis.groupFields.lowValueY = \"low\";\r\n\r\n\t\tthis.groupFields.highValueX = \"high\";\r\n\t\tthis.groupFields.highValueY = \"high\";\r\n\r\n\t\tthis.strokeOpacity = 1;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\t\tlet positiveColor = interfaceColors.getFor(\"positive\");\r\n\t\tlet negativeColor = interfaceColors.getFor(\"negative\");\r\n\r\n\t\tthis.dropFromOpenState.properties.fill = negativeColor;\r\n\t\tthis.dropFromOpenState.properties.stroke = negativeColor;\r\n\r\n\t\tthis.riseFromOpenState.properties.fill = positiveColor;\r\n\t\tthis.riseFromOpenState.properties.stroke = positiveColor;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Candlestick Series\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new CandlestickSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data item's element, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElementReal(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElementReal(dataItem);\r\n\t\tthis.validateCandlestick(dataItem);\r\n\t}\r\n\r\n\tprotected validateCandlestick(dataItem: this[\"dataItem\"]) {\r\n\t\tlet column: Candlestick = dataItem.column;\r\n\t\tif (column) {\r\n\t\t\tlet lowLine = column.lowLine;\r\n\t\t\tlet highLine = column.highLine;\r\n\r\n\t\t\tif (this.baseAxis == this.xAxis) {\r\n\t\t\t\tlet x: number = column.pixelWidth / 2;\r\n\r\n\t\t\t\tlowLine.x = x;\r\n\t\t\t\thighLine.x = x;\r\n\r\n\t\t\t\tlet open = dataItem.getWorkingValue(this.yOpenField);\r\n\t\t\t\tlet close = dataItem.getWorkingValue(this.yField);\r\n\r\n\t\t\t\tlet yOpen = this.yAxis.getY(dataItem, this.yOpenField);\r\n\t\t\t\tlet yClose = this.yAxis.getY(dataItem, this.yField);\r\n\t\t\t\tlet yLow = this.yAxis.getY(dataItem, this.yLowField);\r\n\t\t\t\tlet yHigh = this.yAxis.getY(dataItem, this.yHighField);\r\n\r\n\t\t\t\tlet pixelY = column.pixelY;\r\n\r\n\t\t\t\tlowLine.y1 = yLow - pixelY;\r\n\t\t\t\thighLine.y1 = yHigh - pixelY;\r\n\r\n\t\t\t\tif (open < close) {\r\n\t\t\t\t\tlowLine.y2 = yOpen - pixelY;\r\n\t\t\t\t\thighLine.y2 = yClose - pixelY;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlowLine.y2 = yClose - pixelY;\r\n\t\t\t\t\thighLine.y2 = yOpen - pixelY;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\tif (this.baseAxis == this.yAxis) {\r\n\t\t\t\tlet y: number = column.pixelHeight / 2;\r\n\r\n\t\t\t\tlowLine.y = y;\r\n\t\t\t\thighLine.y = y;\r\n\r\n\t\t\t\tlet open = dataItem.getWorkingValue(this.xOpenField);\r\n\t\t\t\tlet close = dataItem.getWorkingValue(this.xField);\r\n\r\n\t\t\t\tlet xOpen = this.xAxis.getX(dataItem, this.xOpenField);\r\n\t\t\t\tlet xClose = this.xAxis.getX(dataItem, this.xField);\r\n\t\t\t\tlet xLow = this.xAxis.getX(dataItem, this.xLowField);\r\n\t\t\t\tlet xHigh = this.xAxis.getX(dataItem, this.xHighField);\r\n\r\n\t\t\t\tlet pixelX = column.pixelX;\r\n\r\n\t\t\t\tlowLine.x1 = xLow - pixelX;\r\n\t\t\t\thighLine.x1 = xHigh - pixelX;\r\n\r\n\t\t\t\tif (open < close) {\r\n\t\t\t\t\tlowLine.x2 = xOpen - pixelX;\r\n\t\t\t\t\thighLine.x2 = xClose - pixelX;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlowLine.x2 = xClose - pixelX;\r\n\t\t\t\t\thighLine.x2 = xOpen - pixelX;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t$iter.each(this.axisRanges.iterator(), (axisRange) => {\r\n\t\t\t\t// LOW LINE\r\n\t\t\t\tlet rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);\r\n\t\t\t\tif (rangeColumn) {\r\n\t\t\t\t\tlet rangeLowLine = rangeColumn.lowLine;\r\n\t\t\t\t\trangeLowLine.x = lowLine.x;\r\n\t\t\t\t\trangeLowLine.y = lowLine.y;\r\n\t\t\t\t\trangeLowLine.x1 = lowLine.x1;\r\n\t\t\t\t\trangeLowLine.x2 = lowLine.x2;\r\n\t\t\t\t\trangeLowLine.y1 = lowLine.y1;\r\n\t\t\t\t\trangeLowLine.y2 = lowLine.y2;\r\n\r\n\t\t\t\t\t// HIGH LINE\r\n\t\t\t\t\tlet rangehighLine = rangeColumn.highLine;\r\n\t\t\t\t\trangehighLine.x = highLine.x;\r\n\t\t\t\t\trangehighLine.y = highLine.y;\r\n\t\t\t\t\trangehighLine.x1 = highLine.x1;\r\n\t\t\t\t\trangehighLine.x2 = highLine.x2;\r\n\t\t\t\t\trangehighLine.y1 = highLine.y1;\r\n\t\t\t\t\trangehighLine.y2 = highLine.y2;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A data field to look for \"low\" value for horizontal axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Field name\r\n\t */\r\n\tpublic get xLowField(): string {\r\n\t\treturn this._xLowField;\r\n\t}\r\n\r\n\t/**\r\n\t * A data field to look for \"low\" value for vertical axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Field name\r\n\t */\r\n\tpublic get yLowField(): string {\r\n\t\treturn this._yLowField;\r\n\t}\r\n\r\n\t/**\r\n\t * A data field to look for \"high\" value for horizontal axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Field name\r\n\t */\r\n\tpublic get xHighField(): string {\r\n\t\treturn this._xHighField;\r\n\t}\r\n\r\n\t/**\r\n\t * A data field to look for \"high\" value for vertical axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Field name\r\n\t */\r\n\tpublic get yHighField(): string {\r\n\t\treturn this._yHighField;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets up which data fields to use for data access.\r\n\t */\r\n\tprotected defineFields() {\r\n\t\tsuper.defineFields();\r\n\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\t\tif (xAxis && yAxis) {\r\n\t\t\tif (this.baseAxis == xAxis) {\r\n\t\t\t\tlet yAxisFieldName: string = $utils.capitalize(yAxis.axisFieldName);\r\n\t\t\t\tthis._yLowField = <$type.Keyof<this[\"_dataFields\"]>>(\"low\" + yAxisFieldName + \"Y\");\r\n\t\t\t\tthis._yHighField = <$type.Keyof<this[\"_dataFields\"]>>(\"high\" + yAxisFieldName + \"Y\");\r\n\t\t\t}\r\n\r\n\t\t\tif (this.baseAxis == yAxis) {\r\n\t\t\t\tlet xAxisFieldName: string = $utils.capitalize(xAxis.axisFieldName);\r\n\t\t\t\tthis._xLowField = <$type.Keyof<this[\"_dataFields\"]>>(\"low\" + xAxisFieldName + \"X\");\r\n\t\t\t\tthis._xHighField = <$type.Keyof<this[\"_dataFields\"]>>(\"high\" + xAxisFieldName + \"X\");\r\n\t\t\t}\r\n\r\n\t\t\tthis.addValueField(xAxis, <any>this._xValueFields, <any>this._xLowField);\r\n\t\t\tthis.addValueField(xAxis, <any>this._xValueFields, <any>this._xHighField);\r\n\r\n\t\t\tthis.addValueField(yAxis, <any>this._yValueFields, <any>this._yLowField);\r\n\t\t\tthis.addValueField(yAxis, <any>this._yValueFields, <any>this._yHighField);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates elements in related legend container, that mimics the look of this\r\n\t * Series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param marker  Legend item container\r\n\t */\r\n\tpublic createLegendMarker(marker: Container): void {\r\n\r\n\t\tlet w: number = marker.pixelWidth;\r\n\t\tlet h: number = marker.pixelHeight;\r\n\r\n\t\tmarker.removeChildren();\r\n\r\n\t\tlet column: Candlestick = marker.createChild(Candlestick);\r\n\t\tcolumn.shouldClone = false;\r\n\t\tcolumn.copyFrom(<any>this.columns.template);\r\n\r\n\t\tlet cw: number;\r\n\t\tlet ch: number;\r\n\r\n\t\tlet highLine: Line = column.lowLine;\r\n\t\tlet lowLine: Line = column.highLine;\r\n\r\n\t\tif (this.baseAxis == this.yAxis) {\r\n\t\t\tcw = w / 3;\r\n\t\t\tch = h;\r\n\r\n\t\t\thighLine.y = h / 2;\r\n\t\t\tlowLine.y = h / 2;\r\n\r\n\t\t\thighLine.x2 = w / 3;\r\n\t\t\tlowLine.x2 = w / 3;\r\n\t\t\tlowLine.x = w / 3 * 2;\r\n\t\t\tcolumn.column.x = w / 3;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcw = w;\r\n\t\t\tch = h / 3;\r\n\t\t\thighLine.x = w / 2;\r\n\t\t\tlowLine.x = w / 2;\r\n\r\n\t\t\thighLine.y2 = h / 3;\r\n\t\t\tlowLine.y2 = h / 3;\r\n\t\t\tlowLine.y = h / 3 * 2;\r\n\t\t\tcolumn.column.y = h / 3;\r\n\t\t}\r\n\t\tcolumn.width = cw;\r\n\t\tcolumn.height = ch;\r\n\r\n\t\t$object.copyProperties(this, marker, visualProperties);\r\n\t\t$object.copyProperties(this.columns.template, column, visualProperties);\r\n\r\n\t\tcolumn.stroke = this.riseFromOpenState.properties.stroke;\r\n\t\tcolumn.fill = column.stroke;\r\n\r\n\t\tlet legendDataItem = <LegendDataItem>marker.dataItem;\r\n\t\tlegendDataItem.color = column.fill;\r\n\t\tlegendDataItem.colorOrig = column.fill;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an element to use for Candlestick\r\n\t * @ignore\r\n\t * @return Element.\r\n\t */\r\n\tprotected createColumnTemplate(): this[\"_column\"] {\r\n\t\treturn new Candlestick();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CandlestickSeries\"] = CandlestickSeries;\r\nregistry.registeredClasses[\"CandlestickSeriesDataItem\"] = CandlestickSeriesDataItem;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}